(let [__args__ (Sys.args)] (set Prelude.printStr Prelude._externPrintStr) (Prelude._printStr (tink.Json.stringify (the String (let [:Map<String,Array<String>> params (tink.Json.parse (.shift __args__)) :String mediaWikiUrl (tink.Json.parse (.shift __args__)) :String maxLag (tink.Json.parse (.shift __args__)) :Map<String,String> headers (tink.Json.parse (.shift __args__))] (import requests_externs.Requests) (print (the String (+ "extern query call " (Std.string params) ""))) (let [response (Requests.get mediaWikiUrl (let [innerParams [=>"action" "query" =>"maxlag" maxLag =>"format" "json"]] (doFor =>param paramValues params (dictSet innerParams param (paramValues.join "|"))) innerParams) (object headers headers timeout 2))] (assert response.ok "MediaWiki query failed") (print (the String (+ "call finished: " (Std.string (begin response.text)) ""))) response.text))))) (Sys.exit 0))
