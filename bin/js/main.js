// Generated by Haxe 4.3.0
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = true;
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,matchedRight: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		do {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
		} while(this.r.global);
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = true;
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = true;
Lambda.filter = function(it,f) {
	var _g = [];
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			_g.push(x1);
		}
	}
	return _g;
};
Lambda.fold = function(it,f,first) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first);
	}
	return first;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $getIterator(it);
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $getIterator(it);
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
Math.__name__ = true;
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice;
		var a1 = arguments;
		var a2 = a.call(a1);
		return f(a2);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = true;
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	buf_b += s == null ? "null" : "" + s;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var Sys = function() { };
$hxClasses["Sys"] = Sys;
Sys.__name__ = true;
Sys.systemName = function() {
	var _g = process.platform;
	switch(_g) {
	case "darwin":
		return "Mac";
	case "freebsd":
		return "BSD";
	case "linux":
		return "Linux";
	case "win32":
		return "Windows";
	default:
		var other = _g;
		return other;
	}
};
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = true;
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
$hxClasses["_Sys.FileOutput"] = _$Sys_FileOutput;
_$Sys_FileOutput.__name__ = true;
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	fd: null
	,writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCodePoint(c));
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		return js_node_Fs.writeSync(this.fd,js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length),pos,len);
	}
	,writeString: function(s,encoding) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,flush: function() {
		js_node_Fs.fsyncSync(this.fd);
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileOutput
});
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	,__class__: haxe_io_Input
};
var _$Sys_FileInput = function(fd) {
	this.fd = fd;
};
$hxClasses["_Sys.FileInput"] = _$Sys_FileInput;
_$Sys_FileInput.__name__ = true;
_$Sys_FileInput.__super__ = haxe_io_Input;
_$Sys_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	fd: null
	,readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		try {
			js_node_Fs.readSync(this.fd,buf,0,1,null);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		try {
			return js_node_Fs.readSync(this.fd,buf,pos,len,null);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileInput
});
var ValueType = $hxEnums["ValueType"] = { __ename__:true,__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var params = enm.__constructs__[a._hx_index].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__:true,__constructs__:null
	,CFunction: {_hx_name:"CFunction",_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Module",$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="FilePos",$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="Method",$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_._hx_name="LocalFunction",$_.__params__ = ["v"],$_)
};
haxe_StackItem.__constructs__ = [haxe_StackItem.CFunction,haxe_StackItem.Module,haxe_StackItem.FilePos,haxe_StackItem.Method,haxe_StackItem.LocalFunction];
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,set: null
	,toString: null
	,__class__: haxe_IMap
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = true;
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_message:"get_message"}
});
var haxe_Int32 = {};
haxe_Int32.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe_Int64 = {};
haxe_Int64.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw haxe_Exception.thrown("divide by zero");
		case 1:
			return { quotient : new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low), modulus : new haxe__$Int64__$_$_$Int64(0,0)};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = ~dividend.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high,low);
	} else {
		modulus = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
	}
	if(divisor.high < 0) {
		var high = ~divisor.high;
		var low = ~divisor.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		divisor = new haxe__$Int64__$_$_$Int64(high,low);
	}
	var quotient = new haxe__$Int64__$_$_$Int64(0,0);
	var mask = new haxe__$Int64__$_$_$Int64(0,1);
	while(!(divisor.high < 0)) {
		var v = haxe_Int32.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe_Int32.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		divisor = b == 0 ? new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b) : new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
		var b1 = 1;
		b1 &= 63;
		mask = b1 == 0 ? new haxe__$Int64__$_$_$Int64(mask.high,mask.low) : b1 < 32 ? new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1) : new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v = haxe_Int32.ucompare(modulus.high,divisor.high);
		if((v != 0 ? v : haxe_Int32.ucompare(modulus.low,divisor.low)) >= 0) {
			quotient = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			var high = modulus.high - divisor.high | 0;
			var low = modulus.low - divisor.low | 0;
			if(haxe_Int32.ucompare(modulus.low,divisor.low) < 0) {
				var ret = high--;
				high = high | 0;
			}
			modulus = new haxe__$Int64__$_$_$Int64(high,low);
		}
		var b = 1;
		b &= 63;
		mask = b == 0 ? new haxe__$Int64__$_$_$Int64(mask.high,mask.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(mask.high >>> b,mask.high << 32 - b | mask.low >>> b) : new haxe__$Int64__$_$_$Int64(0,mask.high >>> b - 32);
		var b1 = 1;
		b1 &= 63;
		divisor = b1 == 0 ? new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low) : b1 < 32 ? new haxe__$Int64__$_$_$Int64(divisor.high >>> b1,divisor.high << 32 - b1 | divisor.low >>> b1) : new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b1 - 32);
	}
	if(divSign) {
		var high = ~quotient.high;
		var low = ~quotient.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		quotient = new haxe__$Int64__$_$_$Int64(high,low);
	}
	if(dividend.high < 0) {
		var high = ~modulus.high;
		var low = ~modulus.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high,low);
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = true;
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Int64Helper = function() { };
$hxClasses["haxe.Int64Helper"] = haxe_Int64Helper;
haxe_Int64Helper.__name__ = true;
haxe_Int64Helper.fromFloat = function(f) {
	if(isNaN(f) || !isFinite(f)) {
		throw haxe_Exception.thrown("Number is NaN or Infinite");
	}
	var noFractions = f - f % 1;
	if(noFractions > 9007199254740991) {
		throw haxe_Exception.thrown("Conversion overflow");
	}
	if(noFractions < -9007199254740991) {
		throw haxe_Exception.thrown("Conversion underflow");
	}
	var result = new haxe__$Int64__$_$_$Int64(0,0);
	var neg = noFractions < 0;
	var rest = neg ? -noFractions : noFractions;
	var i = 0;
	while(rest >= 1) {
		var curr = rest % 2;
		rest /= 2;
		if(curr >= 1) {
			var a_high = 0;
			var a_low = 1;
			var b = i;
			b &= 63;
			var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(a_high,a_low) : b < 32 ? new haxe__$Int64__$_$_$Int64(a_high << b | a_low >>> 32 - b,a_low << b) : new haxe__$Int64__$_$_$Int64(a_low << b - 32,0);
			var high = result.high + b1.high | 0;
			var low = result.low + b1.low | 0;
			if(haxe_Int32.ucompare(low,result.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			result = new haxe__$Int64__$_$_$Int64(high,low);
		}
		++i;
	}
	if(neg) {
		var high = ~result.high;
		var low = ~result.low + 1 | 0;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		result = new haxe__$Int64__$_$_$Int64(high,low);
	}
	return result;
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = true;
haxe_crypto_Adler32.make = function(b) {
	var a = new haxe_crypto_Adler32();
	a.update(b,0,b.length);
	return a.get();
};
haxe_crypto_Adler32.prototype = {
	a1: null
	,a2: null
	,get: function() {
		return this.a2 << 16 | this.a1;
	}
	,update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g = pos;
		var _g1 = pos + len;
		while(_g < _g1) {
			var p = _g++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofHex = function(s) {
	if((s.length & 1) != 0) {
		throw haxe_Exception.thrown("Not a hex string (odd number of digits)");
	}
	var a = [];
	var i = 0;
	var len = s.length >> 1;
	while(i < len) {
		var high = s.charCodeAt(i * 2);
		var low = s.charCodeAt(i * 2 + 1);
		high = (high & 15) + ((high & 64) >> 6) * 9;
		low = (low & 15) + ((low & 64) >> 6) * 9;
		a.push((high << 4 | low) & 255);
		++i;
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var i = _g++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g = 0;
		var _g1 = this.length;
		while(_g < _g1) {
			var i = _g++;
			var c = this.b[i];
			s_b += String.fromCodePoint(chars[c >> 4]);
			s_b += String.fromCodePoint(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = true;
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() { };
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = true;
haxe_crypto_Crc32.make = function(data) {
	var c_crc = -1;
	var b = data.b.bufferValue;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var i = _g++;
		var tmp = (c_crc ^ b.bytes[i]) & 255;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		c_crc = c_crc >>> 8 ^ tmp;
	}
	return c_crc ^ -1;
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = true;
haxe_crypto_Md5.make = function(b) {
	var h = new haxe_crypto_Md5().doEncode(haxe_crypto_Md5.bytes2blks(b));
	var out = new haxe_io_Bytes(new ArrayBuffer(16));
	var p = 0;
	out.b[p++] = h[0] & 255;
	out.b[p++] = h[0] >> 8 & 255;
	out.b[p++] = h[0] >> 16 & 255;
	out.b[p++] = h[0] >>> 24;
	out.b[p++] = h[1] & 255;
	out.b[p++] = h[1] >> 8 & 255;
	out.b[p++] = h[1] >> 16 & 255;
	out.b[p++] = h[1] >>> 24;
	out.b[p++] = h[2] & 255;
	out.b[p++] = h[2] >> 8 & 255;
	out.b[p++] = h[2] >> 16 & 255;
	out.b[p++] = h[2] >>> 24;
	out.b[p++] = h[3] & 255;
	out.b[p++] = h[3] >> 8 & 255;
	out.b[p++] = h[3] >> 16 & 255;
	out.b[p++] = h[3] >>> 24;
	return out;
};
haxe_crypto_Md5.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	var _g1 = blksSize;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var i = 0;
	while(i < b.length) {
		blks[i >> 2] |= b.b[i] << (((b.length << 3) + i & 3) << 3);
		++i;
	}
	blks[i >> 2] |= 128 << (b.length * 8 + i) % 4 * 8;
	var l = b.length * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_crypto_Sha1 = function() {
};
$hxClasses["haxe.crypto.Sha1"] = haxe_crypto_Sha1;
haxe_crypto_Sha1.__name__ = true;
haxe_crypto_Sha1.make = function(b) {
	var h = new haxe_crypto_Sha1().doEncode(haxe_crypto_Sha1.bytes2blks(b));
	var out = new haxe_io_Bytes(new ArrayBuffer(20));
	var p = 0;
	out.b[p++] = h[0] >>> 24;
	out.b[p++] = h[0] >> 16 & 255;
	out.b[p++] = h[0] >> 8 & 255;
	out.b[p++] = h[0] & 255;
	out.b[p++] = h[1] >>> 24;
	out.b[p++] = h[1] >> 16 & 255;
	out.b[p++] = h[1] >> 8 & 255;
	out.b[p++] = h[1] & 255;
	out.b[p++] = h[2] >>> 24;
	out.b[p++] = h[2] >> 16 & 255;
	out.b[p++] = h[2] >> 8 & 255;
	out.b[p++] = h[2] & 255;
	out.b[p++] = h[3] >>> 24;
	out.b[p++] = h[3] >> 16 & 255;
	out.b[p++] = h[3] >> 8 & 255;
	out.b[p++] = h[3] & 255;
	out.b[p++] = h[4] >>> 24;
	out.b[p++] = h[4] >> 16 & 255;
	out.b[p++] = h[4] >> 8 & 255;
	out.b[p++] = h[4] & 255;
	return out;
};
haxe_crypto_Sha1.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var _g = 0;
	var _g1 = nblk * 16;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var _g = 0;
	var _g1 = b.length;
	while(_g < _g1) {
		var i = _g++;
		var p = i >> 2;
		blks[p] |= b.b[i] << 24 - ((i & 3) << 3);
	}
	var i = b.length;
	var p = i >> 2;
	blks[p] |= 128 << 24 - ((i & 3) << 3);
	blks[nblk * 16 - 1] = b.length * 8;
	return blks;
};
haxe_crypto_Sha1.prototype = {
	doEncode: function(x) {
		var w = [];
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var e = -1009589776;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var j = 0;
			while(j < 80) {
				if(j < 16) {
					w[j] = x[i + j];
				} else {
					var num = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];
					w[j] = num << 1 | num >>> 31;
				}
				var t = (a << 5 | a >>> 27) + this.ft(j,b,c,d) + e + w[j] + this.kt(j);
				e = d;
				d = c;
				c = b << 30 | b >>> 2;
				b = a;
				a = t;
				++j;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			i += 16;
		}
		return [a,b,c,d,e];
	}
	,ft: function(t,b,c,d) {
		if(t < 20) {
			return b & c | ~b & d;
		}
		if(t < 40) {
			return b ^ c ^ d;
		}
		if(t < 60) {
			return b & c | b & d | c & d;
		}
		return b ^ c ^ d;
	}
	,kt: function(t) {
		if(t < 20) {
			return 1518500249;
		}
		if(t < 40) {
			return 1859775393;
		}
		if(t < 60) {
			return -1894007588;
		}
		return -899497514;
	}
	,__class__: haxe_crypto_Sha1
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = true;
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,toString: function() {
		if(this.root == null) {
			return "[]";
		} else {
			return "[" + this.root.toString() + "]";
		}
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = true;
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,toString: function() {
		return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + " => " + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
	}
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_Either = $hxEnums["haxe.ds.Either"] = { __ename__:true,__constructs__:null
	,Left: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_._hx_name="Left",$_.__params__ = ["v"],$_)
	,Right: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_._hx_name="Right",$_.__params__ = ["v"],$_)
};
haxe_ds_Either.__constructs__ = [haxe_ds_Either.Left,haxe_ds_Either.Right];
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = true;
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = true;
haxe_ds_GenericCell.prototype = {
	elt: null
	,next: null
	,__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = true;
haxe_ds_GenericStack.prototype = {
	head: null
	,__class__: haxe_ds_GenericStack
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(+key);
		return new haxe_iterators_ArrayIterator(a);
	}
	,toString: function() {
		var s_b = "";
		s_b += "[";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += i1 == null ? "null" : "" + i1;
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "]";
		return s_b;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,toString: function() {
		var s_b = "";
		s_b += "[";
		var it = this.keys();
		var i = it;
		while(i.hasNext()) {
			var i1 = i.next();
			s_b += Std.string(Std.string(i1));
			s_b += " => ";
			s_b += Std.string(Std.string(this.h[i1.__id__]));
			if(it.hasNext()) {
				s_b += ", ";
			}
		}
		s_b += "]";
		return s_b;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__:true,__constructs__:null
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_._hx_name="Some",$_.__params__ = ["v"],$_)
	,None: {_hx_name:"None",_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
haxe_ds_Option.__constructs__ = [haxe_ds_Option.Some,haxe_ds_Option.None];
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.stringify = function(h) {
	var s = "[";
	var first = true;
	for (var key in h) {
		if (first) first = false; else s += ',';
		s += key + ' => ' + Std.string(h[key]);
	}
	return s + "]";
};
haxe_ds_StringMap.prototype = {
	h: null
	,get: function(key) {
		return this.h[key];
	}
	,set: function(key,value) {
		this.h[key] = value;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapValueIterator(this.h);
	}
	,toString: function() {
		return haxe_ds_StringMap.stringify(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapValueIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapValueIterator"] = haxe_ds__$StringMap_StringMapValueIterator;
haxe_ds__$StringMap_StringMapValueIterator.__name__ = true;
haxe_ds__$StringMap_StringMapValueIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.h[this.keys[this.current++]];
	}
	,__class__: haxe_ds__$StringMap_StringMapValueIterator
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = true;
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = true;
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_format_JsonPrinter = function(replacer,space) {
	this.replacer = replacer;
	this.indent = space;
	this.pretty = space != null;
	this.nind = 0;
	this.buf = new StringBuf();
};
$hxClasses["haxe.format.JsonPrinter"] = haxe_format_JsonPrinter;
haxe_format_JsonPrinter.__name__ = true;
haxe_format_JsonPrinter.print = function(o,replacer,space) {
	var printer = new haxe_format_JsonPrinter(replacer,space);
	printer.write("",o);
	return printer.buf.b;
};
haxe_format_JsonPrinter.prototype = {
	buf: null
	,replacer: null
	,indent: null
	,pretty: null
	,nind: null
	,write: function(k,v) {
		if(this.replacer != null) {
			v = this.replacer(k,v);
		}
		var _g = Type.typeof(v);
		switch(_g._hx_index) {
		case 0:
			this.buf.b += "null";
			break;
		case 1:
			this.buf.b += Std.string(v);
			break;
		case 2:
			var v1 = isFinite(v) ? Std.string(v) : "null";
			this.buf.b += Std.string(v1);
			break;
		case 3:
			this.buf.b += Std.string(v);
			break;
		case 4:
			this.fieldsString(v,Reflect.fields(v));
			break;
		case 5:
			this.buf.b += "\"<fun>\"";
			break;
		case 6:
			var c = _g.c;
			if(c == String) {
				this.quote(v);
			} else if(c == Array) {
				var v1 = v;
				this.buf.b += String.fromCodePoint(91);
				var len = v1.length;
				var last = len - 1;
				var _g1 = 0;
				var _g2 = len;
				while(_g1 < _g2) {
					var i = _g1++;
					if(i > 0) {
						this.buf.b += String.fromCodePoint(44);
					} else {
						this.nind++;
					}
					if(this.pretty) {
						this.buf.b += String.fromCodePoint(10);
					}
					if(this.pretty) {
						var v2 = StringTools.lpad("",this.indent,this.nind * this.indent.length);
						this.buf.b += Std.string(v2);
					}
					this.write(i,v1[i]);
					if(i == last) {
						this.nind--;
						if(this.pretty) {
							this.buf.b += String.fromCodePoint(10);
						}
						if(this.pretty) {
							var v3 = StringTools.lpad("",this.indent,this.nind * this.indent.length);
							this.buf.b += Std.string(v3);
						}
					}
				}
				this.buf.b += String.fromCodePoint(93);
			} else if(c == haxe_ds_StringMap) {
				var v1 = v;
				var o = { };
				var h = v1.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var k = _g_keys[_g_current++];
					o[k] = v1.h[k];
				}
				var v1 = o;
				this.fieldsString(v1,Reflect.fields(v1));
			} else if(c == Date) {
				var v1 = v;
				this.quote(HxOverrides.dateStr(v1));
			} else {
				this.classString(v);
			}
			break;
		case 7:
			var _g1 = _g.e;
			var i = v._hx_index;
			this.buf.b += Std.string(i == null ? "null" : "" + i);
			break;
		case 8:
			this.buf.b += "\"???\"";
			break;
		}
	}
	,classString: function(v) {
		this.fieldsString(v,Type.getInstanceFields(js_Boot.getClass(v)));
	}
	,fieldsString: function(v,fields) {
		this.buf.b += String.fromCodePoint(123);
		var len = fields.length;
		var last = len - 1;
		var first = true;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			var f = fields[i];
			var value = Reflect.field(v,f);
			if(Reflect.isFunction(value)) {
				continue;
			}
			if(first) {
				this.nind++;
				first = false;
			} else {
				this.buf.b += String.fromCodePoint(44);
			}
			if(this.pretty) {
				this.buf.b += String.fromCodePoint(10);
			}
			if(this.pretty) {
				var v1 = StringTools.lpad("",this.indent,this.nind * this.indent.length);
				this.buf.b += Std.string(v1);
			}
			this.quote(f);
			this.buf.b += String.fromCodePoint(58);
			if(this.pretty) {
				this.buf.b += String.fromCodePoint(32);
			}
			this.write(f,value);
			if(i == last) {
				this.nind--;
				if(this.pretty) {
					this.buf.b += String.fromCodePoint(10);
				}
				if(this.pretty) {
					var v2 = StringTools.lpad("",this.indent,this.nind * this.indent.length);
					this.buf.b += Std.string(v2);
				}
			}
		}
		this.buf.b += String.fromCodePoint(125);
	}
	,quote: function(s) {
		this.buf.b += String.fromCodePoint(34);
		var i = 0;
		var length = s.length;
		while(i < length) {
			var c = s.charCodeAt(i++);
			switch(c) {
			case 8:
				this.buf.b += "\\b";
				break;
			case 9:
				this.buf.b += "\\t";
				break;
			case 10:
				this.buf.b += "\\n";
				break;
			case 12:
				this.buf.b += "\\f";
				break;
			case 13:
				this.buf.b += "\\r";
				break;
			case 34:
				this.buf.b += "\\\"";
				break;
			case 92:
				this.buf.b += "\\\\";
				break;
			default:
				this.buf.b += String.fromCodePoint(c);
			}
		}
		this.buf.b += String.fromCodePoint(34);
	}
	,__class__: haxe_format_JsonPrinter
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = true;
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = true;
haxe_io_Path.withoutExtension = function(path) {
	var s = new haxe_io_Path(path);
	s.ext = null;
	return s.toString();
};
haxe_io_Path.withoutDirectory = function(path) {
	var s = new haxe_io_Path(path);
	s.dir = null;
	return s.toString();
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) {
		return "";
	}
	return s.ext;
};
haxe_io_Path.withExtension = function(path,ext) {
	var s = new haxe_io_Path(path);
	s.ext = ext;
	return s.toString();
};
haxe_io_Path.join = function(paths) {
	var _g = [];
	var _g1 = 0;
	var _g2 = paths;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v != null && v != "") {
			_g.push(v);
		}
	}
	var paths = _g;
	if(paths.length == 0) {
		return "";
	}
	var path = paths[0];
	var _g = 1;
	var _g1 = paths.length;
	while(_g < _g1) {
		var i = _g++;
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths[i];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token == "") {
			if(target.length > 0 || HxOverrides.cca(path,0) == 47) {
				target.push(token);
			}
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g_offset = 0;
	var _g_s = tmp;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var c2 = c1;
		switch(c2) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i = c2;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCodePoint(i);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i1 = c2;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCodePoint(i1);
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.prototype = {
	dir: null
	,file: null
	,ext: null
	,backslash: null
	,toString: function() {
		return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__:true,__constructs__:null
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CInt",$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CFloat",$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CString",$_.__params__ = ["s"],$_)
};
hscript_Const.__constructs__ = [hscript_Const.CInt,hscript_Const.CFloat,hscript_Const.CString];
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__:true,__constructs__:null
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EConst",$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EIdent",$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EVar",$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EParent",$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EBlock",$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EField",$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EBinop",$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EUnop",$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ECall",$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EIf",$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EWhile",$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EFor",$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_name:"EBreak",_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_name:"EContinue",_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EFunction",$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EReturn",$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EArray",$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EArrayDecl",$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ENew",$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EThrow",$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ETry",$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EObject",$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ETernary",$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ESwitch",$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EDoWhile",$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EMeta",$_.__params__ = ["name","args","e"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ECheckType",$_.__params__ = ["e","t"],$_)
};
hscript_Expr.__constructs__ = [hscript_Expr.EConst,hscript_Expr.EIdent,hscript_Expr.EVar,hscript_Expr.EParent,hscript_Expr.EBlock,hscript_Expr.EField,hscript_Expr.EBinop,hscript_Expr.EUnop,hscript_Expr.ECall,hscript_Expr.EIf,hscript_Expr.EWhile,hscript_Expr.EFor,hscript_Expr.EBreak,hscript_Expr.EContinue,hscript_Expr.EFunction,hscript_Expr.EReturn,hscript_Expr.EArray,hscript_Expr.EArrayDecl,hscript_Expr.ENew,hscript_Expr.EThrow,hscript_Expr.ETry,hscript_Expr.EObject,hscript_Expr.ETernary,hscript_Expr.ESwitch,hscript_Expr.EDoWhile,hscript_Expr.EMeta,hscript_Expr.ECheckType];
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__:true,__constructs__:null
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTPath",$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTFun",$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTAnon",$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTParent",$_.__params__ = ["t"],$_)
	,CTOpt: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTOpt",$_.__params__ = ["t"],$_)
	,CTNamed: ($_=function(n,t) { return {_hx_index:5,n:n,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTNamed",$_.__params__ = ["n","t"],$_)
};
hscript_CType.__constructs__ = [hscript_CType.CTPath,hscript_CType.CTFun,hscript_CType.CTAnon,hscript_CType.CTParent,hscript_CType.CTOpt,hscript_CType.CTNamed];
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__:true,__constructs__:null
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidChar",$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EUnexpected",$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_name:"EUnterminatedString",_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_name:"EUnterminatedComment",_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidPreprocessor",$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EUnknownVariable",$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidIterator",$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidOp",$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidAccess",$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="ECustom",$_.__params__ = ["msg"],$_)
};
hscript_Error.__constructs__ = [hscript_Error.EInvalidChar,hscript_Error.EUnexpected,hscript_Error.EUnterminatedString,hscript_Error.EUnterminatedComment,hscript_Error.EInvalidPreprocessor,hscript_Error.EUnknownVariable,hscript_Error.EInvalidIterator,hscript_Error.EInvalidOp,hscript_Error.EInvalidAccess,hscript_Error.ECustom];
var hscript_ModuleDecl = $hxEnums["hscript.ModuleDecl"] = { __ename__:true,__constructs__:null
	,DPackage: ($_=function(path) { return {_hx_index:0,path:path,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DPackage",$_.__params__ = ["path"],$_)
	,DImport: ($_=function(path,everything) { return {_hx_index:1,path:path,everything:everything,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DImport",$_.__params__ = ["path","everything"],$_)
	,DClass: ($_=function(c) { return {_hx_index:2,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DClass",$_.__params__ = ["c"],$_)
	,DTypedef: ($_=function(c) { return {_hx_index:3,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_._hx_name="DTypedef",$_.__params__ = ["c"],$_)
};
hscript_ModuleDecl.__constructs__ = [hscript_ModuleDecl.DPackage,hscript_ModuleDecl.DImport,hscript_ModuleDecl.DClass,hscript_ModuleDecl.DTypedef];
var hscript_FieldAccess = $hxEnums["hscript.FieldAccess"] = { __ename__:true,__constructs__:null
	,APublic: {_hx_name:"APublic",_hx_index:0,__enum__:"hscript.FieldAccess",toString:$estr}
	,APrivate: {_hx_name:"APrivate",_hx_index:1,__enum__:"hscript.FieldAccess",toString:$estr}
	,AInline: {_hx_name:"AInline",_hx_index:2,__enum__:"hscript.FieldAccess",toString:$estr}
	,AOverride: {_hx_name:"AOverride",_hx_index:3,__enum__:"hscript.FieldAccess",toString:$estr}
	,AStatic: {_hx_name:"AStatic",_hx_index:4,__enum__:"hscript.FieldAccess",toString:$estr}
	,AMacro: {_hx_name:"AMacro",_hx_index:5,__enum__:"hscript.FieldAccess",toString:$estr}
};
hscript_FieldAccess.__constructs__ = [hscript_FieldAccess.APublic,hscript_FieldAccess.APrivate,hscript_FieldAccess.AInline,hscript_FieldAccess.AOverride,hscript_FieldAccess.AStatic,hscript_FieldAccess.AMacro];
var hscript_FieldKind = $hxEnums["hscript.FieldKind"] = { __ename__:true,__constructs__:null
	,KFunction: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"hscript.FieldKind",toString:$estr}; },$_._hx_name="KFunction",$_.__params__ = ["f"],$_)
	,KVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.FieldKind",toString:$estr}; },$_._hx_name="KVar",$_.__params__ = ["v"],$_)
};
hscript_FieldKind.__constructs__ = [hscript_FieldKind.KFunction,hscript_FieldKind.KVar];
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__:true,__constructs__:null
	,SBreak: {_hx_name:"SBreak",_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_name:"SContinue",_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: {_hx_name:"SReturn",_hx_index:2,__enum__:"hscript._Interp.Stop",toString:$estr}
};
hscript__$Interp_Stop.__constructs__ = [hscript__$Interp_Stop.SBreak,hscript__$Interp_Stop.SContinue,hscript__$Interp_Stop.SReturn];
var hscript_Interp = function() {
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	this.resetVariables();
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = true;
hscript_Interp.prototype = {
	variables: null
	,locals: null
	,binops: null
	,depth: null
	,inTry: null
	,declared: null
	,returnValue: null
	,resetVariables: function() {
		var _gthis = this;
		this.variables = new haxe_ds_StringMap();
		this.variables.h["null"] = null;
		this.variables.h["true"] = true;
		this.variables.h["false"] = false;
		var this1 = this.variables;
		var value = Reflect.makeVarArgs(function(el) {
			var inf = _gthis.posInfos();
			var v = el.shift();
			if(el.length > 0) {
				inf.customParams = el;
			}
			haxe_Log.trace(Std.string(v),inf);
		});
		this1.h["trace"] = value;
	}
	,posInfos: function() {
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		this.binops.h["+"] = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		this.binops.h["-"] = function(e1,e2) {
			return me.expr(e1) - me.expr(e2);
		};
		this.binops.h["*"] = function(e1,e2) {
			return me.expr(e1) * me.expr(e2);
		};
		this.binops.h["/"] = function(e1,e2) {
			return me.expr(e1) / me.expr(e2);
		};
		this.binops.h["%"] = function(e1,e2) {
			return me.expr(e1) % me.expr(e2);
		};
		this.binops.h["&"] = function(e1,e2) {
			return me.expr(e1) & me.expr(e2);
		};
		this.binops.h["|"] = function(e1,e2) {
			return me.expr(e1) | me.expr(e2);
		};
		this.binops.h["^"] = function(e1,e2) {
			return me.expr(e1) ^ me.expr(e2);
		};
		this.binops.h["<<"] = function(e1,e2) {
			return me.expr(e1) << me.expr(e2);
		};
		this.binops.h[">>"] = function(e1,e2) {
			return me.expr(e1) >> me.expr(e2);
		};
		this.binops.h[">>>"] = function(e1,e2) {
			return me.expr(e1) >>> me.expr(e2);
		};
		this.binops.h["=="] = function(e1,e2) {
			return me.expr(e1) == me.expr(e2);
		};
		this.binops.h["!="] = function(e1,e2) {
			return me.expr(e1) != me.expr(e2);
		};
		this.binops.h[">="] = function(e1,e2) {
			return me.expr(e1) >= me.expr(e2);
		};
		this.binops.h["<="] = function(e1,e2) {
			return me.expr(e1) <= me.expr(e2);
		};
		this.binops.h[">"] = function(e1,e2) {
			return me.expr(e1) > me.expr(e2);
		};
		this.binops.h["<"] = function(e1,e2) {
			return me.expr(e1) < me.expr(e2);
		};
		this.binops.h["||"] = function(e1,e2) {
			if(me.expr(e1) != true) {
				return me.expr(e2) == true;
			} else {
				return true;
			}
		};
		this.binops.h["&&"] = function(e1,e2) {
			if(me.expr(e1) == true) {
				return me.expr(e2) == true;
			} else {
				return false;
			}
		};
		this.binops.h["="] = $bind(this,this.assign);
		this.binops.h["..."] = function(e1,e2) {
			return new IntIterator(me.expr(e1),me.expr(e2));
		};
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v1,v2) {
			return v1 - v2;
		});
		this.assignOp("*=",function(v1,v2) {
			return v1 * v2;
		});
		this.assignOp("/=",function(v1,v2) {
			return v1 / v2;
		});
		this.assignOp("%=",function(v1,v2) {
			return v1 % v2;
		});
		this.assignOp("&=",function(v1,v2) {
			return v1 & v2;
		});
		this.assignOp("|=",function(v1,v2) {
			return v1 | v2;
		});
		this.assignOp("^=",function(v1,v2) {
			return v1 ^ v2;
		});
		this.assignOp("<<=",function(v1,v2) {
			return v1 << v2;
		});
		this.assignOp(">>=",function(v1,v2) {
			return v1 >> v2;
		});
		this.assignOp(">>>=",function(v1,v2) {
			return v1 >>> v2;
		});
	}
	,setVar: function(name,v) {
		this.variables.h[name] = v;
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var l = this.locals.h[id];
			if(l == null) {
				this.setVar(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var e = e1.e;
			var f = e1.f;
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var e = e1.e;
			var index = e1.index;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e = hscript_Error.EInvalidOp("=");
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		this.binops.h[op] = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var l = this.locals.h[id];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				this.setVar(id,v);
			} else {
				l.r = v;
			}
			break;
		case 5:
			var e = e1.e;
			var f = e1.f;
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var e = e1.e;
			var index = e1.index;
			var arr = this.expr(e);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e = hscript_Error.EInvalidOp(op);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			var l = this.locals.h[id];
			var v = l == null ? this.resolve(id) : l.r;
			if(prefix) {
				v += delta;
				if(l == null) {
					this.setVar(id,v);
				} else {
					l.r = v;
				}
			} else if(l == null) {
				this.setVar(id,v + delta);
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var e1 = e.e;
			var f = e.f;
			var obj = this.expr(e1);
			var v = this.get(obj,f);
			if(prefix) {
				v += delta;
				this.set(obj,f,v);
			} else {
				this.set(obj,f,v + delta);
			}
			return v;
		case 16:
			var e1 = e.e;
			var index = e.index;
			var arr = this.expr(e1);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				var v = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v + delta);
				}
				return v;
			} else {
				var v = arr[index1];
				if(prefix) {
					v += delta;
					arr[index1] = v;
				} else {
					arr[index1] = v + delta;
				}
				return v;
			}
			break;
		default:
			var e = hscript_Error.EInvalidOp(delta > 0 ? "++" : "--");
			throw haxe_Exception.thrown(e);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				var e = _g1;
				switch(e._hx_index) {
				case 0:
					throw haxe_Exception.thrown("Invalid break");
				case 1:
					throw haxe_Exception.thrown("Invalid continue");
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else {
				throw _g;
			}
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var h1 = h.h;
		var k_h = h1;
		var k_keys = Object.keys(h1);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			h2.h[k] = h.h[k];
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			this.locals.h[d.n] = d.old;
		}
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		if(rethrow) {
			throw haxe_Exception.thrown(e);
		} else {
			throw haxe_Exception.thrown(e);
		}
	}
	,rethrow: function(e) {
		throw haxe_Exception.thrown(e);
	}
	,resolve: function(id) {
		var l = this.locals.h[id];
		if(l != null) {
			return l.r;
		}
		var v = this.variables.h[id];
		if(v == null && !Object.prototype.hasOwnProperty.call(this.variables.h,id)) {
			var e = hscript_Error.EUnknownVariable(id);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return v;
			case 1:
				var f = c.f;
				return f;
			case 2:
				var s = c.s;
				return s;
			}
			break;
		case 1:
			var id = e.v;
			return this.resolve(id);
		case 2:
			var _g = e.t;
			var n = e.n;
			var e1 = e.e;
			this.declared.push({ n : n, old : this.locals.h[n]});
			var this1 = this.locals;
			var value = e1 == null ? null : this.expr(e1);
			this1.h[n] = { r : value};
			return null;
		case 3:
			var e1 = e.e;
			return this.expr(e1);
		case 4:
			var exprs = e.e;
			var old = this.declared.length;
			var v = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e1 = exprs[_g];
				++_g;
				v = this.expr(e1);
			}
			this.restore(old);
			return v;
		case 5:
			var e1 = e.e;
			var f = e.f;
			return this.get(this.expr(e1),f);
		case 6:
			var op = e.op;
			var e1 = e.e1;
			var e2 = e.e2;
			var fop = this.binops.h[op];
			if(fop == null) {
				var e3 = hscript_Error.EInvalidOp(op);
				throw haxe_Exception.thrown(e3);
			}
			return fop(e1,e2);
		case 7:
			var op = e.op;
			var prefix = e.prefix;
			var e1 = e.e;
			switch(op) {
			case "!":
				return this.expr(e1) != true;
			case "++":
				return this.increment(e1,prefix,1);
			case "-":
				return -this.expr(e1);
			case "--":
				return this.increment(e1,prefix,-1);
			case "~":
				return ~this.expr(e1);
			default:
				var e1 = hscript_Error.EInvalidOp(op);
				throw haxe_Exception.thrown(e1);
			}
			break;
		case 8:
			var e1 = e.e;
			var params = e.params;
			var args = [];
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				args.push(this.expr(p));
			}
			if(e1._hx_index == 5) {
				var e2 = e1.e;
				var f = e1.f;
				var obj = this.expr(e2);
				if(obj == null) {
					var e2 = hscript_Error.EInvalidAccess(f);
					throw haxe_Exception.thrown(e2);
				}
				return this.fcall(obj,f,args);
			} else {
				return this.call(null,this.expr(e1),args);
			}
			break;
		case 9:
			var econd = e.cond;
			var e1 = e.e1;
			var e2 = e.e2;
			if(this.expr(econd) == true) {
				return this.expr(e1);
			} else if(e2 == null) {
				return null;
			} else {
				return this.expr(e2);
			}
			break;
		case 10:
			var econd = e.cond;
			var e1 = e.e;
			this.whileLoop(econd,e1);
			return null;
		case 11:
			var v = e.v;
			var it = e.it;
			var e1 = e.e;
			this.forLoop(v,it,e1);
			return null;
		case 12:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SBreak);
		case 13:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SContinue);
		case 14:
			var _g = e.ret;
			var params = e.args;
			var fexpr = e.e;
			var name = e.name;
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				if(p.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f = function(args) {
				if((args == null ? 0 : args.length) != params.length) {
					if(args.length < minParams) {
						var str = "Invalid number of parameters. Got " + args.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						var e = hscript_Error.ECustom(str);
						throw haxe_Exception.thrown(e);
					}
					var args2 = [];
					var extraParams = args.length - minParams;
					var pos = 0;
					var _g = 0;
					while(_g < params.length) {
						var p = params[_g];
						++_g;
						if(p.opt) {
							if(extraParams > 0) {
								args2.push(args[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args[pos++]);
						}
					}
					args = args2;
				}
				var old = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g = 0;
				var _g1 = params.length;
				while(_g < _g1) {
					var i = _g++;
					me.locals.h[params[i].name] = { r : args[i]};
				}
				var r = null;
				var oldDecl = _gthis.declared.length;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( _g ) {
						var e = haxe_Exception.caught(_g).unwrap();
						me.locals = old;
						me.depth = depth;
						throw haxe_Exception.thrown(e);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				_gthis.restore(oldDecl);
				me.locals = old;
				me.depth = depth;
				return r;
			};
			var f1 = Reflect.makeVarArgs(f);
			if(name != null) {
				if(this.depth == 0) {
					this.variables.h[name] = f1;
				} else {
					this.declared.push({ n : name, old : this.locals.h[name]});
					var ref = { r : f1};
					this.locals.h[name] = ref;
					capturedLocals.h[name] = ref;
				}
			}
			return f1;
		case 15:
			var e1 = e.e;
			this.returnValue = e1 == null ? null : this.expr(e1);
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SReturn);
		case 16:
			var e1 = e.e;
			var index = e.index;
			var arr = this.expr(e1);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr = e.e;
			var tmp;
			if(arr.length > 0) {
				var _g = arr[0];
				if(_g._hx_index == 6) {
					var _g1 = _g.e1;
					var _g1 = _g.e2;
					tmp = _g.op == "=>";
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g = 0;
				while(_g < arr.length) {
					var e1 = arr[_g];
					++_g;
					if(e1._hx_index == 6) {
						if(e1.op == "=>") {
							var eKey = e1.e1;
							var eValue = e1.e2;
							var key = this.expr(eKey);
							var value = this.expr(eValue);
							isAllString = isAllString && typeof(key) == "string";
							isAllInt = isAllInt && (typeof(key) == "number" && ((key | 0) === key));
							isAllObject = isAllObject && Reflect.isObject(key);
							isAllEnum = isAllEnum && Reflect.isEnumValue(key);
							keys.push(key);
							values.push(value);
						} else {
							throw haxe_Exception.thrown("=> expected");
						}
					} else {
						throw haxe_Exception.thrown("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw haxe_Exception.thrown("Inconsistent key types");
				}
				var _g = 0;
				var _g1 = keys.length;
				while(_g < _g1) {
					var n = _g++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n],values[n]);
				}
				return map;
			} else {
				var a = [];
				var _g = 0;
				while(_g < arr.length) {
					var e1 = arr[_g];
					++_g;
					a.push(this.expr(e1));
				}
				return a;
			}
			break;
		case 18:
			var cl = e.cl;
			var params1 = e.params;
			var a = [];
			var _g = 0;
			while(_g < params1.length) {
				var e1 = params1[_g];
				++_g;
				a.push(this.expr(e1));
			}
			return this.cnew(cl,a);
		case 19:
			var e1 = e.e;
			throw haxe_Exception.thrown(this.expr(e1));
		case 20:
			var _g = e.t;
			var e1 = e.e;
			var n = e.v;
			var ecatch = e.ecatch;
			var old = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v = this.expr(e1);
				this.restore(old);
				this.inTry = oldTry;
				return v;
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					this.inTry = oldTry;
					throw haxe_Exception.thrown(err);
				} else {
					var err = _g1;
					this.restore(old);
					this.inTry = oldTry;
					this.declared.push({ n : n, old : this.locals.h[n]});
					this.locals.h[n] = { r : err};
					var v = this.expr(ecatch);
					this.restore(old);
					return v;
				}
			}
			break;
		case 21:
			var fl = e.fl;
			var o = { };
			var _g = 0;
			while(_g < fl.length) {
				var f = fl[_g];
				++_g;
				this.set(o,f.name,this.expr(f.e));
			}
			return o;
		case 22:
			var econd = e.cond;
			var e1 = e.e1;
			var e2 = e.e2;
			if(this.expr(econd) == true) {
				return this.expr(e1);
			} else {
				return this.expr(e2);
			}
			break;
		case 23:
			var e1 = e.e;
			var cases = e.cases;
			var def = e.defaultExpr;
			var val = this.expr(e1);
			var match = false;
			var _g = 0;
			while(_g < cases.length) {
				var c = cases[_g];
				++_g;
				var _g1 = 0;
				var _g2 = c.values;
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(this.expr(v) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c.expr);
					break;
				}
			}
			if(!match) {
				val = def == null ? null : this.expr(def);
			}
			return val;
		case 24:
			var econd = e.cond;
			var e1 = e.e;
			this.doWhileLoop(econd,e1);
			return null;
		case 25:
			var _g = e.name;
			var _g = e.args;
			var e1 = e.e;
			return this.expr(e1);
		case 26:
			var _g = e.t;
			var e1 = e.e;
			return this.expr(e1);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: do try {
			this.expr(e);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				var err = _g1;
				switch(err._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw haxe_Exception.thrown(err);
				}
			} else {
				throw _g;
			}
		} while(this.expr(econd) == true);
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				var err = _g1;
				switch(err._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw haxe_Exception.thrown(err);
				}
			} else {
				throw _g;
			}
		}
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $getIterator(v);
		} catch( _g ) {
		}
		if(v.hasNext == null || v.next == null) {
			var e = hscript_Error.EInvalidIterator(v);
			throw haxe_Exception.thrown(e);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		this.declared.push({ n : n, old : this.locals.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			var this1 = this.locals;
			var value = { r : it1.next()};
			this1.h[n] = value;
			try {
				this.expr(e);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					var err = _g1;
					switch(err._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw haxe_Exception.thrown(err);
					}
				} else {
					throw _g;
				}
			}
		}
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__implements(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw haxe_Exception.thrown(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw haxe_Exception.thrown(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__:true,__constructs__:null
	,TEof: {_hx_name:"TEof",_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TConst",$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TId",$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TOp",$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_name:"TPOpen",_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_name:"TPClose",_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_name:"TBrOpen",_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_name:"TBrClose",_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_name:"TDot",_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_name:"TComma",_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_name:"TSemicolon",_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_name:"TBkOpen",_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_name:"TBkClose",_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_name:"TQuestion",_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_name:"TDoubleDot",_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TMeta",$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TPrepro",$_.__params__ = ["s"],$_)
};
hscript_Token.__constructs__ = [hscript_Token.TEof,hscript_Token.TConst,hscript_Token.TId,hscript_Token.TOp,hscript_Token.TPOpen,hscript_Token.TPClose,hscript_Token.TBrOpen,hscript_Token.TBrClose,hscript_Token.TDot,hscript_Token.TComma,hscript_Token.TSemicolon,hscript_Token.TBkOpen,hscript_Token.TBkClose,hscript_Token.TQuestion,hscript_Token.TDoubleDot,hscript_Token.TMeta,hscript_Token.TPrepro];
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"],["->"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = priorities.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g3 = priorities[i];
		while(_g2 < _g3.length) {
			var x = _g3[_g2];
			++_g2;
			this.opPriority.h[x] = i;
			if(i == 9) {
				this.opRightAssoc.h[x] = true;
			}
		}
	}
	var x = "!";
	this.opPriority.h[x] = x == "++" || x == "--" ? -1 : -2;
	var x = "++";
	this.opPriority.h[x] = x == "++" || x == "--" ? -1 : -2;
	var x = "--";
	this.opPriority.h[x] = x == "++" || x == "--" ? -1 : -2;
	var x = "~";
	this.opPriority.h[x] = x == "++" || x == "--" ? -1 : -2;
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = true;
hscript_Parser.prototype = {
	line: null
	,opChars: null
	,identChars: null
	,opPriority: null
	,opRightAssoc: null
	,preprocesorValues: null
	,allowJSON: null
	,allowTypes: null
	,allowMetadata: null
	,resumeErrors: null
	,input: null
	,readPos: null
	,char: null
	,ops: null
	,idents: null
	,uid: null
	,tokens: null
	,error: function(err,pmin,pmax) {
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(err);
		}
	}
	,invalidChar: function(c) {
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidChar(c));
		}
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g = 0;
		var _g1 = this.opChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g = 0;
		var _g1 = this.identChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.idents[HxOverrides.cca(this.identChars,i)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		this.readPos = 0;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		var err = hscript_Error.EUnexpected(this.tokenString(tk));
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(err);
		}
		return null;
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk == null) {
			this.unexpected(tk);
			return null;
		} else if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		if(e == null) {
			return false;
		}
		if(e == null) {
			return false;
		} else {
			switch(e._hx_index) {
			case 2:
				var _g = e.n;
				var t = e.t;
				var e1 = e.e;
				if(e1 != null) {
					return this.isBlock(e1);
				} else if(t != null) {
					if(t == null) {
						return false;
					} else if(t._hx_index == 2) {
						var _g = t.fields;
						return true;
					} else {
						return false;
					}
				} else {
					return false;
				}
				break;
			case 4:
				var _g = e.e;
				return true;
			case 6:
				var _g = e.op;
				var _g = e.e1;
				var e1 = e.e2;
				return this.isBlock(e1);
			case 7:
				var _g = e.op;
				var prefix = e.prefix;
				var e1 = e.e;
				if(!prefix) {
					return this.isBlock(e1);
				} else {
					return false;
				}
				break;
			case 9:
				var _g = e.cond;
				var e1 = e.e1;
				var e2 = e.e2;
				if(e2 != null) {
					return this.isBlock(e2);
				} else {
					return this.isBlock(e1);
				}
				break;
			case 10:
				var _g = e.cond;
				var e1 = e.e;
				return this.isBlock(e1);
			case 11:
				var _g = e.v;
				var _g = e.it;
				var e1 = e.e;
				return this.isBlock(e1);
			case 14:
				var _g = e.args;
				var _g = e.name;
				var _g = e.ret;
				var e1 = e.e;
				return this.isBlock(e1);
			case 15:
				var e1 = e.e;
				if(e1 != null) {
					return this.isBlock(e1);
				} else {
					return false;
				}
				break;
			case 20:
				var _g = e.e;
				var _g = e.v;
				var _g = e.t;
				var e1 = e.ecatch;
				return this.isBlock(e1);
			case 21:
				var _g = e.fl;
				return true;
			case 23:
				var _g = e.e;
				var _g = e.cases;
				var _g = e.defaultExpr;
				return true;
			case 24:
				var _g = e.cond;
				var e1 = e.e;
				return this.isBlock(e1);
			case 25:
				var _g = e.name;
				var _g = e.args;
				var e1 = e.e;
				return this.isBlock(e1);
			default:
				return false;
			}
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(true) {
			var tmp;
			if(tk == hscript_Token.TComma && e != null) {
				if(e == null) {
					tmp = false;
				} else if(e._hx_index == 2) {
					var _g = e.n;
					var _g1 = e.t;
					var _g2 = e.e;
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 1:
					var c = tk.c;
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(c._hx_index == 2) {
						var s = c.s;
						id = s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					var i = tk.s;
					id = i;
					break;
				case 7:
					break _hx_loop1;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 7:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				return this.parseExprNext(hscript_Expr.EConst(c));
			case 2:
				var id = tk.s;
				var e = this.parseStructure(id);
				if(e == null) {
					e = hscript_Expr.EIdent(id);
				}
				return this.parseExprNext(e);
			case 3:
				var op = tk.s;
				if(op == "-") {
					var start = 0;
					var e = this.parseExpr();
					if(e == null) {
						return this.makeUnop(op,e);
					}
					if(e == null) {
						return this.makeUnop(op,e);
					} else if(e._hx_index == 0) {
						var _g = e.c;
						switch(_g._hx_index) {
						case 0:
							var i = _g.v;
							return hscript_Expr.EConst(hscript_Const.CInt(-i));
						case 1:
							var f = _g.f;
							return hscript_Expr.EConst(hscript_Const.CFloat(-f));
						default:
							return this.makeUnop(op,e);
						}
					} else {
						return this.makeUnop(op,e);
					}
				}
				if(this.opPriority.h[op] < 0) {
					return this.makeUnop(op,this.parseExpr());
				}
				return this.unexpected(tk);
			case 4:
				tk = this.token();
				if(tk == hscript_Token.TPClose) {
					var t = this.token();
					if(!Type.enumEq(t,hscript_Token.TOp("->"))) {
						this.unexpected(t);
					}
					var eret = this.parseExpr();
					return hscript_Expr.EFunction([],hscript_Expr.EReturn(eret));
				}
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				var e = this.parseExpr();
				tk = this.token();
				if(tk != null) {
					switch(tk._hx_index) {
					case 5:
						return this.parseExprNext(hscript_Expr.EParent(e));
					case 9:
						if(e != null) {
							if(e._hx_index == 1) {
								var v = e.v;
								return this.parseLambda([{ name : v}],0);
							}
						}
						break;
					case 14:
						var t = this.parseType();
						tk = this.token();
						if(tk != null) {
							switch(tk._hx_index) {
							case 5:
								return this.parseExprNext(hscript_Expr.ECheckType(e,t));
							case 9:
								if(e != null) {
									if(e._hx_index == 1) {
										var v = e.v;
										return this.parseLambda([{ name : v, t : t}],0);
									}
								}
								break;
							default:
							}
						}
						break;
					default:
					}
				}
				return this.unexpected(tk);
			case 6:
				tk = this.token();
				if(tk == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
				} else {
					switch(tk._hx_index) {
					case 1:
						var c = tk.c;
						if(this.allowJSON) {
							if(c._hx_index == 2) {
								var _g = c.s;
								var tk2 = this.token();
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk2,_this.head);
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
								if(tk2 != null) {
									if(tk2._hx_index == 14) {
										return this.parseExprNext(this.parseObject(0));
									}
								}
							} else {
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
							}
						} else {
							var _this = this.tokens;
							_this.head = new haxe_ds_GenericCell(tk,_this.head);
						}
						break;
					case 2:
						var _g = tk.s;
						var tk2 = this.token();
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk2,_this.head);
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk,_this.head);
						if(tk2 != null) {
							if(tk2._hx_index == 14) {
								return this.parseExprNext(this.parseObject(0));
							}
						}
						break;
					case 7:
						return this.parseExprNext(hscript_Expr.EObject([]));
					default:
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk,_this.head);
					}
				}
				var a = [];
				while(true) {
					this.parseFullExpr(a);
					tk = this.token();
					if(tk == hscript_Token.TBrClose || this.resumeErrors && tk == hscript_Token.TEof) {
						break;
					}
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
				}
				return hscript_Expr.EBlock(a);
			case 11:
				var a = [];
				tk = this.token();
				while(tk != hscript_Token.TBkClose && (!this.resumeErrors || tk != hscript_Token.TEof)) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
					a.push(this.parseExpr());
					tk = this.token();
					if(tk == hscript_Token.TComma) {
						tk = this.token();
					}
				}
				if(a.length == 1 && a[0] != null) {
					var _g = a[0];
					if(_g != null) {
						switch(_g._hx_index) {
						case 10:
							var _g1 = _g.cond;
							var _g1 = _g.e;
							var tmp = "__a_" + this.uid++;
							var e = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a[0]),hscript_Expr.EIdent(tmp)]);
							return this.parseExprNext(e);
						case 11:
							var _g1 = _g.v;
							var _g1 = _g.it;
							var _g1 = _g.e;
							var tmp = "__a_" + this.uid++;
							var e = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a[0]),hscript_Expr.EIdent(tmp)]);
							return this.parseExprNext(e);
						case 24:
							var _g1 = _g.cond;
							var _g1 = _g.e;
							var tmp = "__a_" + this.uid++;
							var e = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a[0]),hscript_Expr.EIdent(tmp)]);
							return this.parseExprNext(e);
						default:
						}
					}
				}
				return this.parseExprNext(hscript_Expr.EArrayDecl(a));
			case 15:
				var id = tk.s;
				if(this.allowMetadata) {
					var args = this.parseMetaArgs();
					return hscript_Expr.EMeta(id,args,this.parseExpr());
				} else {
					return this.unexpected(tk);
				}
				break;
			default:
				return this.unexpected(tk);
			}
		}
	}
	,parseLambda: function(args,pmin) {
		_hx_loop1: while(true) {
			var id = this.getIdent();
			var t = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
			args.push({ name : id, t : t});
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
		}
		var t = this.token();
		if(!Type.enumEq(t,hscript_Token.TOp("->"))) {
			this.unexpected(t);
		}
		var eret = this.parseExpr();
		return hscript_Expr.EFunction(args,hscript_Expr.EReturn(eret));
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				if(_g == null) {
					var tk = _g;
					this.unexpected(tk);
				} else {
					switch(_g._hx_index) {
					case 5:
						break _hx_loop1;
					case 9:
						break;
					default:
						var tk1 = _g;
						this.unexpected(tk1);
					}
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		if(e == null) {
			return null;
		}
		var edef;
		switch(e._hx_index) {
		case 3:
			var e2 = e.e;
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			var _g = e.e;
			if(_g.length == 1) {
				var e1 = _g[0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var cond = e.cond;
			var e1 = e.e1;
			var e2 = e.e2;
			edef = e2 == null ? hscript_Expr.EIf(cond,this.mapCompr(tmp,e1),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			var cond = e.cond;
			var e2 = e.e;
			edef = hscript_Expr.EWhile(cond,this.mapCompr(tmp,e2));
			break;
		case 11:
			var v = e.v;
			var it = e.it;
			var e2 = e.e;
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e2));
			break;
		case 24:
			var cond = e.cond;
			var e2 = e.e;
			edef = hscript_Expr.EDoWhile(cond,this.mapCompr(tmp,e2));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		if(e == null && this.resumeErrors) {
			return null;
		}
		if(e == null) {
			return hscript_Expr.EUnop(op,true,e);
		} else {
			switch(e._hx_index) {
			case 6:
				var bop = e.op;
				var e1 = e.e1;
				var e2 = e.e2;
				return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
			case 22:
				var e1 = e.cond;
				var e2 = e.e1;
				var e3 = e.e2;
				return hscript_Expr.ETernary(this.makeUnop(op,e1),e2,e3);
			default:
				return hscript_Expr.EUnop(op,true,e);
			}
		}
	}
	,makeBinop: function(op,e1,e) {
		if(e == null && this.resumeErrors) {
			return hscript_Expr.EBinop(op,e1,e);
		}
		if(e == null) {
			return hscript_Expr.EBinop(op,e1,e);
		} else {
			switch(e._hx_index) {
			case 6:
				var op2 = e.op;
				var e2 = e.e1;
				var e3 = e.e2;
				if(this.opPriority.h[op] <= this.opPriority.h[op2] && !Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
					return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
				} else {
					return hscript_Expr.EBinop(op,e1,e);
				}
				break;
			case 22:
				var e2 = e.cond;
				var e3 = e.e1;
				var e4 = e.e2;
				if(Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
					return hscript_Expr.EBinop(op,e1,e);
				} else {
					return hscript_Expr.ETernary(this.makeBinop(op,e1,e2),e3,e4);
				}
				break;
			default:
				return hscript_Expr.EBinop(op,e1,e);
			}
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else if(tk._hx_index == 2) {
				if(tk.s != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TId("in"))) {
				this.unexpected(t);
			}
			var eiter = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			var e = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e);
		case "function":
			var tk = this.token();
			var name = null;
			if(tk == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else if(tk._hx_index == 2) {
				var id = tk.s;
				name = id;
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			}
			var inf = this.parseFunctionDecl();
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var cond = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			var e1 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk = this.token();
			if(tk == hscript_Token.TSemicolon) {
				semic = true;
				tk = this.token();
			}
			if(Type.enumEq(tk,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				if(semic) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this.head);
				}
			}
			return hscript_Expr.EIf(cond,e1,e2);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			_hx_loop1: while(true) {
				var tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else {
					switch(tk._hx_index) {
					case 4:
						break _hx_loop1;
					case 8:
						a.push(this.getIdent());
						break;
					default:
						this.unexpected(tk);
						break _hx_loop1;
					}
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			var tk = this.token();
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			var e = tk == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e);
		case "switch":
			var e = this.parseExpr();
			var def = null;
			var cases = [];
			var t = this.token();
			if(t != hscript_Token.TBrOpen) {
				this.unexpected(t);
			}
			_hx_loop2: while(true) {
				var tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else {
					switch(tk._hx_index) {
					case 2:
						switch(tk.s) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							_hx_loop3: while(true) {
								var e1 = this.parseExpr();
								c.values.push(e1);
								tk = this.token();
								if(tk == null) {
									this.unexpected(tk);
									break;
								} else {
									switch(tk._hx_index) {
									case 9:
										break;
									case 14:
										break _hx_loop3;
									default:
										this.unexpected(tk);
										break _hx_loop3;
									}
								}
							}
							var exprs = [];
							_hx_loop4: while(true) {
								tk = this.token();
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
								if(tk == null) {
									this.parseFullExpr(exprs);
								} else {
									switch(tk._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop4;
										} else {
											this.parseFullExpr(exprs);
										}
										break;
									case 2:
										switch(tk.s) {
										case "case":case "default":
											break _hx_loop4;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										break _hx_loop4;
									default:
										this.parseFullExpr(exprs);
									}
								}
							}
							c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk);
							}
							var t = this.token();
							if(t != hscript_Token.TDoubleDot) {
								this.unexpected(t);
							}
							var exprs1 = [];
							_hx_loop5: while(true) {
								tk = this.token();
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
								if(tk == null) {
									this.parseFullExpr(exprs1);
								} else {
									switch(tk._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop5;
										} else {
											this.parseFullExpr(exprs1);
										}
										break;
									case 2:
										switch(tk.s) {
										case "case":case "default":
											break _hx_loop5;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										break _hx_loop5;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							}
							def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
							break;
						default:
							this.unexpected(tk);
							break _hx_loop2;
						}
						break;
					case 7:
						break _hx_loop2;
					default:
						this.unexpected(tk);
						break _hx_loop2;
					}
				}
			}
			return hscript_Expr.ESwitch(e,cases,def);
		case "throw":
			var e = this.parseExpr();
			return hscript_Expr.EThrow(e);
		case "try":
			var e = this.parseExpr();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TId("catch"))) {
				this.unexpected(t);
			}
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			var t = null;
			if(this.allowTypes) {
				t = this.parseType();
			} else {
				var t1 = this.token();
				if(!Type.enumEq(t1,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t1);
				}
			}
			var t1 = this.token();
			if(t1 != hscript_Token.TPClose) {
				this.unexpected(t1);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e,vname,t,ec);
		case "var":
			var ident = this.getIdent();
			var tk = this.token();
			var t = null;
			if(tk == hscript_Token.TDoubleDot && this.allowTypes) {
				t = this.parseType();
				tk = this.token();
			}
			var e = null;
			if(Type.enumEq(tk,hscript_Token.TOp("="))) {
				e = this.parseExpr();
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			}
			return hscript_Expr.EVar(ident,t,e);
		case "while":
			var econd = this.parseExpr();
			var e = this.parseExpr();
			return hscript_Expr.EWhile(econd,e);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return e1;
		} else {
			switch(tk._hx_index) {
			case 3:
				var op = tk.s;
				if(op == "->") {
					switch(e1._hx_index) {
					case 1:
						var i = e1.v;
						var eret = this.parseExpr();
						return hscript_Expr.EFunction([{ name : i}],hscript_Expr.EReturn(eret));
					case 3:
						var _hx_tmp = e1.e;
						if(_hx_tmp._hx_index == 1) {
							var i = _hx_tmp.v;
							var eret = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i}],hscript_Expr.EReturn(eret));
						}
						break;
					case 26:
						var _hx_tmp = e1.e;
						if(_hx_tmp._hx_index == 1) {
							var i = _hx_tmp.v;
							var t = e1.t;
							var eret = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i, t : t}],hscript_Expr.EReturn(eret));
						}
						break;
					default:
					}
					this.unexpected(tk);
				}
				if(this.opPriority.h[op] == -1) {
					var tmp;
					if(!this.isBlock(e1)) {
						if(e1._hx_index == 3) {
							var _g = e1.e;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = true;
					}
					if(tmp) {
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk,_this.head);
						return e1;
					}
					return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
				}
				return this.makeBinop(op,e1,this.parseExpr());
			case 4:
				return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
			case 8:
				var field = this.getIdent();
				return this.parseExprNext(hscript_Expr.EField(e1,field));
			case 11:
				var e2 = this.parseExpr();
				var t = this.token();
				if(t != hscript_Token.TBkClose) {
					this.unexpected(t);
				}
				return this.parseExprNext(hscript_Expr.EArray(e1,e2));
			case 13:
				var e2 = this.parseExpr();
				var t = this.token();
				if(t != hscript_Token.TDoubleDot) {
					this.unexpected(t);
				}
				var e3 = this.parseExpr();
				return hscript_Expr.ETernary(e1,e2,e3);
			default:
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return e1;
			}
		}
	}
	,parseFunctionArgs: function() {
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk != null) {
					if(tk._hx_index == 13) {
						opt = true;
						tk = this.token();
					}
				}
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else if(tk._hx_index == 2) {
					var id = tk.s;
					name = id;
				} else {
					this.unexpected(tk);
					break;
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
				} else {
					switch(tk._hx_index) {
					case 5:
						done = true;
						break;
					case 9:
						tk = this.token();
						break;
					default:
						this.unexpected(tk);
					}
				}
			}
		}
		return args;
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = this.parseFunctionArgs();
		var ret = null;
		if(this.allowTypes) {
			var tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var _gthis = this;
		var t = this.token();
		if(t == null) {
			return this.unexpected(t);
		} else {
			switch(t._hx_index) {
			case 2:
				var v = t.s;
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				var path = this.parsePath();
				var params = null;
				t = this.token();
				if(t == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
				} else if(t._hx_index == 3) {
					var op = t.s;
					if(op == "<") {
						params = [];
						_hx_loop1: while(true) {
							params.push(this.parseType());
							t = this.token();
							if(t != null) {
								switch(t._hx_index) {
								case 3:
									var op = t.s;
									if(op == ">") {
										break _hx_loop1;
									}
									if(HxOverrides.cca(op,0) == 62) {
										var _this = this.tokens;
										_this.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op,1,null)),_this.head);
										break _hx_loop1;
									}
									break;
								case 9:
									continue;
								default:
								}
							}
							this.unexpected(t);
							break;
						}
					} else {
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(t,_this.head);
					}
				} else {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
				}
				return this.parseTypeNext(hscript_CType.CTPath(path,params));
			case 4:
				var a = this.token();
				var b = this.token();
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(b,_this.head);
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(a,_this.head);
				var withReturn = function(args) {
					var _g = _gthis.token();
					if(_g == null) {
						var t = _g;
						_gthis.unexpected(t);
					} else if(_g._hx_index == 3) {
						if(_g.s != "->") {
							var t = _g;
							_gthis.unexpected(t);
						}
					} else {
						var t = _g;
						_gthis.unexpected(t);
					}
					return hscript_CType.CTFun(args,_gthis.parseType());
				};
				if(a == null) {
					var t1 = this.parseType();
					var _g = this.token();
					if(_g == null) {
						var t2 = _g;
						return this.unexpected(t2);
					} else {
						switch(_g._hx_index) {
						case 5:
							return this.parseTypeNext(hscript_CType.CTParent(t1));
						case 9:
							var args = [t1];
							do args.push(this.parseType()); while(this.maybe(hscript_Token.TComma));
							var t1 = this.token();
							if(t1 != hscript_Token.TPClose) {
								this.unexpected(t1);
							}
							return withReturn(args);
						default:
							var t1 = _g;
							return this.unexpected(t1);
						}
					}
				} else {
					switch(a._hx_index) {
					case 2:
						var _g = a.s;
						if(b == null) {
							var t1 = this.parseType();
							var _g = this.token();
							if(_g == null) {
								var t2 = _g;
								return this.unexpected(t2);
							} else {
								switch(_g._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t1));
								case 9:
									var args = [t1];
									do args.push(this.parseType()); while(this.maybe(hscript_Token.TComma));
									var t1 = this.token();
									if(t1 != hscript_Token.TPClose) {
										this.unexpected(t1);
									}
									return withReturn(args);
								default:
									var t1 = _g;
									return this.unexpected(t1);
								}
							}
						} else if(b._hx_index == 14) {
							var _g = [];
							var _g1 = 0;
							var _g2 = this.parseFunctionArgs();
							while(_g1 < _g2.length) {
								var arg = _g2[_g1];
								++_g1;
								var _g3 = arg.value;
								if(_g3 != null) {
									var v = _g3;
									if(!this.resumeErrors) {
										throw haxe_Exception.thrown(hscript_Error.ECustom("Default values not allowed in function types"));
									}
								}
								_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
							}
							var args = _g;
							return withReturn(args);
						} else {
							var t1 = this.parseType();
							var _g = this.token();
							if(_g == null) {
								var t2 = _g;
								return this.unexpected(t2);
							} else {
								switch(_g._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t1));
								case 9:
									var args = [t1];
									do args.push(this.parseType()); while(this.maybe(hscript_Token.TComma));
									var t1 = this.token();
									if(t1 != hscript_Token.TPClose) {
										this.unexpected(t1);
									}
									return withReturn(args);
								default:
									var t1 = _g;
									return this.unexpected(t1);
								}
							}
						}
						break;
					case 5:
						var _g = [];
						var _g1 = 0;
						var _g2 = this.parseFunctionArgs();
						while(_g1 < _g2.length) {
							var arg = _g2[_g1];
							++_g1;
							var _g3 = arg.value;
							if(_g3 != null) {
								var v = _g3;
								if(!this.resumeErrors) {
									throw haxe_Exception.thrown(hscript_Error.ECustom("Default values not allowed in function types"));
								}
							}
							_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
						}
						var args = _g;
						return withReturn(args);
					default:
						var t1 = this.parseType();
						var _g = this.token();
						if(_g == null) {
							var t2 = _g;
							return this.unexpected(t2);
						} else {
							switch(_g._hx_index) {
							case 5:
								return this.parseTypeNext(hscript_CType.CTParent(t1));
							case 9:
								var args = [t1];
								do args.push(this.parseType()); while(this.maybe(hscript_Token.TComma));
								var t1 = this.token();
								if(t1 != hscript_Token.TPClose) {
									this.unexpected(t1);
								}
								return withReturn(args);
							default:
								var t1 = _g;
								return this.unexpected(t1);
							}
						}
					}
				}
				break;
			case 6:
				var fields = [];
				var meta = null;
				_hx_loop8: while(true) {
					t = this.token();
					if(t == null) {
						this.unexpected(t);
						break;
					} else {
						switch(t._hx_index) {
						case 2:
							var _g = t.s;
							if(_g == "var") {
								var name = this.getIdent();
								var t1 = this.token();
								if(t1 != hscript_Token.TDoubleDot) {
									this.unexpected(t1);
								}
								fields.push({ name : name, t : this.parseType(), meta : meta});
								meta = null;
								var t2 = this.token();
								if(t2 != hscript_Token.TSemicolon) {
									this.unexpected(t2);
								}
							} else {
								var name1 = _g;
								var t3 = this.token();
								if(t3 != hscript_Token.TDoubleDot) {
									this.unexpected(t3);
								}
								fields.push({ name : name1, t : this.parseType(), meta : meta});
								t = this.token();
								if(t == null) {
									this.unexpected(t);
								} else {
									switch(t._hx_index) {
									case 7:
										break _hx_loop8;
									case 9:
										break;
									default:
										this.unexpected(t);
									}
								}
							}
							break;
						case 7:
							break _hx_loop8;
						case 15:
							var name2 = t.s;
							if(meta == null) {
								meta = [];
							}
							meta.push({ name : name2, params : this.parseMetaArgs()});
							break;
						default:
							this.unexpected(t);
							break _hx_loop8;
						}
					}
				}
				return this.parseTypeNext(hscript_CType.CTAnon(fields));
			default:
				return this.unexpected(t);
			}
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		} else if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return t;
			}
		} else {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var _g = t2.ret;
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk == null) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			} else if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = content;
		this.readPos = 0;
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			} else if(tk._hx_index == 15) {
				var name = tk.s;
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			if(!this.resumeErrors) {
				throw haxe_Exception.thrown(hscript_Error.EInvalidOp("Unsupported class type parameters"));
			}
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		_hx_loop1: while(true) {
			switch(ident) {
			case "extern":
				isExtern = true;
				break;
			case "private":
				isPrivate = true;
				break;
			default:
				break _hx_loop1;
			}
			ident = this.getIdent();
		}
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			_hx_loop2: while(true) {
				var t = this.token();
				if(t == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
					break;
				} else if(t._hx_index == 2) {
					switch(t.s) {
					case "extends":
						extend = this.parseType();
						break;
					case "implements":
						implement.push(this.parseType());
						break;
					default:
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(t,_this1.head);
						break _hx_loop2;
					}
				} else {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t,_this2.head);
					break;
				}
			}
			var fields = [];
			var t = this.token();
			if(t != hscript_Token.TBrOpen) {
				this.unexpected(t);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t = this.token();
				if(t != hscript_Token.TDot) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
					break;
				}
				t = this.token();
				if(t == null) {
					this.unexpected(t);
				} else {
					switch(t._hx_index) {
					case 2:
						var id = t.s;
						path.push(id);
						break;
					case 3:
						if(t.s == "*") {
							star = true;
						} else {
							this.unexpected(t);
						}
						break;
					default:
						this.unexpected(t);
					}
				}
			}
			var t = this.token();
			if(t != hscript_Token.TSemicolon) {
				this.unexpected(t);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path = this.parsePath();
			var t = this.token();
			if(t != hscript_Token.TSemicolon) {
				this.unexpected(t);
			}
			return hscript_ModuleDecl.DPackage(path);
		case "typedef":
			var name = this.getIdent();
			var params = this.parseParams();
			var t = this.token();
			if(!Type.enumEq(t,hscript_Token.TOp("="))) {
				this.unexpected(t);
			}
			var t = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name, meta : meta, params : params, isPrivate : isPrivate, t : t});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		_hx_loop1: while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else {
					var tmp;
					if(type != null) {
						if(type == null) {
							tmp = false;
						} else if(type._hx_index == 2) {
							var _g = type.fields;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = false;
					}
					if(tmp) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t3 = this.token();
						if(t3 != hscript_Token.TSemicolon) {
							this.unexpected(t3);
						}
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
				break _hx_loop1;
			}
		}
		return null;
	}
	,readChar: function() {
		return this.input.charCodeAt(this.readPos++);
	}
	,readString: function(until) {
		var c = 0;
		var b_b = "";
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			var c = this.input.charCodeAt(this.readPos++);
			if(c != c) {
				this.line = old;
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EUnterminatedString);
				}
				break;
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 47:
					if(this.allowJSON) {
						b_b += String.fromCodePoint(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 34:case 39:case 92:
					b_b += String.fromCodePoint(c);
					break;
				case 110:
					b_b += String.fromCodePoint(10);
					break;
				case 114:
					b_b += String.fromCodePoint(13);
					break;
				case 116:
					b_b += String.fromCodePoint(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var char = this.input.charCodeAt(this.readPos++);
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							if(char != char) {
								this.line = old;
								if(!this.resumeErrors) {
									throw haxe_Exception.thrown(hscript_Error.EUnterminatedString);
								}
							}
							this.invalidChar(char);
						}
					}
					b_b += String.fromCodePoint(k);
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b_b += String.fromCodePoint(c);
			}
		}
		return b_b;
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var char;
		if(this.char < 0) {
			char = this.input.charCodeAt(this.readPos++);
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			if(char != char) {
				this.char = char;
				return hscript_Token.TEof;
			}
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 35:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char]) {
					var id = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.input.charCodeAt(this.readPos++);
				switch(char) {
				case 46:
					char = this.input.charCodeAt(this.readPos++);
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.input.charCodeAt(this.readPos++);
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.input.charCodeAt(this.readPos++) == 46) {
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						if(tk == null) {
							var _this1 = this.tokens;
							_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
						} else {
							switch(tk._hx_index) {
							case 1:
								var _g = tk.c;
								if(_g._hx_index == 0) {
									var e = _g.v;
									pow = e;
								} else {
									var _this2 = this.tokens;
									_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
								}
								break;
							case 3:
								if(tk.s == "-") {
									tk = this.token();
									if(tk == null) {
										var _this3 = this.tokens;
										_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
									} else if(tk._hx_index == 1) {
										var _g1 = tk.c;
										if(_g1._hx_index == 0) {
											var e1 = _g1.v;
											pow = -e1;
										} else {
											var _this4 = this.tokens;
											_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
										}
									} else {
										var _this5 = this.tokens;
										_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
									}
								} else {
									var _this6 = this.tokens;
									_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
								}
								break;
							default:
								var _this7 = this.tokens;
								_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
							}
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.input.charCodeAt(this.readPos++);
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.input.charCodeAt(this.readPos++);
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char] || char == 58) {
					var id1 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.ops[char]) {
							this.char = char;
							return hscript_Token.TOp(op);
						}
						var pop = op;
						op += String.fromCodePoint(char);
						if(!Object.prototype.hasOwnProperty.call(this.opPriority.h,op) && Object.prototype.hasOwnProperty.call(this.opPriority.h,pop)) {
							if(op == "//" || op == "/*") {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(pop);
						}
					}
				}
				if(this.idents[char]) {
					var id2 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.input.charCodeAt(this.readPos++);
		}
	}
	,preprocValue: function(id) {
		return this.preprocesorValues.h[id];
	}
	,preprocStack: null
	,parsePreproCond: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 2:
				var id = tk.s;
				return hscript_Expr.EIdent(id);
			case 3:
				if(tk.s == "!") {
					return hscript_Expr.EUnop("!",true,this.parsePreproCond());
				} else {
					return this.unexpected(tk);
				}
				break;
			case 4:
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
				return this.parseExpr();
			default:
				return this.unexpected(tk);
			}
		}
	}
	,evalPreproCond: function(e) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			return this.preprocValue(id) != null;
		case 3:
			var e1 = e.e;
			return this.evalPreproCond(e1);
		case 6:
			var _g = e.e1;
			var _g1 = e.e2;
			switch(e.op) {
			case "&&":
				var e1 = _g;
				var e2 = _g1;
				if(this.evalPreproCond(e1)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e1 = _g;
				var e2 = _g1;
				if(!this.evalPreproCond(e1)) {
					return this.evalPreproCond(e2);
				} else {
					return true;
				}
				break;
			default:
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
				}
				return false;
			}
			break;
		case 7:
			var _g = e.prefix;
			if(e.op == "!") {
				var e1 = e.e;
				return !this.evalPreproCond(e1);
			} else {
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
				}
				return false;
			}
			break;
		default:
			if(!this.resumeErrors) {
				throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
			}
			return false;
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = this.readPos;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Unclosed"));
				}
			}
			if(this.preprocStack[spos] != obj) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			while(char != 13 && char != 10) {
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					break;
				}
			}
			this.char = char;
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			do {
				while(char != 42) {
					if(char == 10) {
						this.line++;
					}
					char = this.input.charCodeAt(this.readPos++);
					if(char != char) {
						this.line = old;
						if(!this.resumeErrors) {
							throw haxe_Exception.thrown(hscript_Error.EUnterminatedComment);
						}
						break;
					}
				}
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					this.line = old;
					if(!this.resumeErrors) {
						throw haxe_Exception.thrown(hscript_Error.EUnterminatedComment);
					}
					break;
				}
			} while(char != 47);
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s = t.s;
			return s;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		case 16:
			var id = t.s;
			return "#" + id;
		}
	}
	,__class__: hscript_Parser
};
var hscript_Tools = function() { };
$hxClasses["hscript.Tools"] = hscript_Tools;
hscript_Tools.__name__ = true;
hscript_Tools.iter = function(e,f) {
	switch(e._hx_index) {
	case 0:
		var _g = e.c;
		break;
	case 1:
		var _g = e.v;
		break;
	case 2:
		var _g = e.n;
		var _g = e.t;
		var e1 = e.e;
		if(e1 != null) {
			f(e1);
		}
		break;
	case 3:
		var e1 = e.e;
		f(e1);
		break;
	case 4:
		var el = e.e;
		var _g = 0;
		while(_g < el.length) {
			var e1 = el[_g];
			++_g;
			f(e1);
		}
		break;
	case 5:
		var _g = e.f;
		var e1 = e.e;
		f(e1);
		break;
	case 6:
		var _g = e.op;
		var e1 = e.e1;
		var e2 = e.e2;
		f(e1);
		f(e2);
		break;
	case 7:
		var _g = e.op;
		var _g = e.prefix;
		var e1 = e.e;
		f(e1);
		break;
	case 8:
		var e1 = e.e;
		var args = e.params;
		f(e1);
		var _g = 0;
		while(_g < args.length) {
			var a = args[_g];
			++_g;
			f(a);
		}
		break;
	case 9:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		f(c);
		f(e1);
		if(e2 != null) {
			f(e2);
		}
		break;
	case 10:
		var c = e.cond;
		var e1 = e.e;
		f(c);
		f(e1);
		break;
	case 11:
		var _g = e.v;
		var it = e.it;
		var e1 = e.e;
		f(it);
		f(e1);
		break;
	case 12:case 13:
		break;
	case 14:
		var _g = e.args;
		var _g = e.name;
		var _g = e.ret;
		var e1 = e.e;
		f(e1);
		break;
	case 15:
		var e1 = e.e;
		if(e1 != null) {
			f(e1);
		}
		break;
	case 16:
		var e1 = e.e;
		var i = e.index;
		f(e1);
		f(i);
		break;
	case 17:
		var el = e.e;
		var _g = 0;
		while(_g < el.length) {
			var e1 = el[_g];
			++_g;
			f(e1);
		}
		break;
	case 18:
		var _g = e.cl;
		var el = e.params;
		var _g = 0;
		while(_g < el.length) {
			var e1 = el[_g];
			++_g;
			f(e1);
		}
		break;
	case 19:
		var e1 = e.e;
		f(e1);
		break;
	case 20:
		var _g = e.v;
		var _g = e.t;
		var e1 = e.e;
		var c = e.ecatch;
		f(e1);
		f(c);
		break;
	case 21:
		var fl = e.fl;
		var _g = 0;
		while(_g < fl.length) {
			var fi = fl[_g];
			++_g;
			f(fi.e);
		}
		break;
	case 22:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		f(c);
		f(e1);
		f(e2);
		break;
	case 23:
		var e1 = e.e;
		var cases = e.cases;
		var def = e.defaultExpr;
		f(e1);
		var _g = 0;
		while(_g < cases.length) {
			var c = cases[_g];
			++_g;
			var _g1 = 0;
			var _g2 = c.values;
			while(_g1 < _g2.length) {
				var v = _g2[_g1];
				++_g1;
				f(v);
			}
			f(c.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 24:
		var c = e.cond;
		var e1 = e.e;
		f(c);
		f(e1);
		break;
	case 25:
		var name = e.name;
		var args = e.args;
		var e1 = e.e;
		if(args != null) {
			var _g = 0;
			while(_g < args.length) {
				var a = args[_g];
				++_g;
				f(a);
			}
		}
		f(e1);
		break;
	case 26:
		var _g = e.t;
		var e1 = e.e;
		f(e1);
		break;
	}
};
hscript_Tools.map = function(e,f) {
	var edef;
	switch(e._hx_index) {
	case 0:
		var _g = e.c;
		edef = e;
		break;
	case 1:
		var _g = e.v;
		edef = e;
		break;
	case 2:
		var n = e.n;
		var t = e.t;
		var e1 = e.e;
		edef = hscript_Expr.EVar(n,t,e1 != null ? f(e1) : null);
		break;
	case 3:
		var e1 = e.e;
		edef = hscript_Expr.EParent(f(e1));
		break;
	case 4:
		var el = e.e;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e1 = el[_g1];
			++_g1;
			_g.push(f(e1));
		}
		edef = hscript_Expr.EBlock(_g);
		break;
	case 5:
		var e1 = e.e;
		var fi = e.f;
		edef = hscript_Expr.EField(f(e1),fi);
		break;
	case 6:
		var op = e.op;
		var e1 = e.e1;
		var e2 = e.e2;
		edef = hscript_Expr.EBinop(op,f(e1),f(e2));
		break;
	case 7:
		var op = e.op;
		var pre = e.prefix;
		var e1 = e.e;
		edef = hscript_Expr.EUnop(op,pre,f(e1));
		break;
	case 8:
		var e1 = e.e;
		var args = e.params;
		var edef1 = f(e1);
		var _g = [];
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			_g.push(f(a));
		}
		edef = hscript_Expr.ECall(edef1,_g);
		break;
	case 9:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		edef = hscript_Expr.EIf(f(c),f(e1),e2 != null ? f(e2) : null);
		break;
	case 10:
		var c = e.cond;
		var e1 = e.e;
		edef = hscript_Expr.EWhile(f(c),f(e1));
		break;
	case 11:
		var v = e.v;
		var it = e.it;
		var e1 = e.e;
		edef = hscript_Expr.EFor(v,f(it),f(e1));
		break;
	case 12:case 13:
		edef = e;
		break;
	case 14:
		var args = e.args;
		var e1 = e.e;
		var name = e.name;
		var t = e.ret;
		edef = hscript_Expr.EFunction(args,f(e1),name,t);
		break;
	case 15:
		var e1 = e.e;
		edef = hscript_Expr.EReturn(e1 != null ? f(e1) : null);
		break;
	case 16:
		var e1 = e.e;
		var i = e.index;
		edef = hscript_Expr.EArray(f(e1),f(i));
		break;
	case 17:
		var el = e.e;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e1 = el[_g1];
			++_g1;
			_g.push(f(e1));
		}
		edef = hscript_Expr.EArrayDecl(_g);
		break;
	case 18:
		var cl = e.cl;
		var el = e.params;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e1 = el[_g1];
			++_g1;
			_g.push(f(e1));
		}
		edef = hscript_Expr.ENew(cl,_g);
		break;
	case 19:
		var e1 = e.e;
		edef = hscript_Expr.EThrow(f(e1));
		break;
	case 20:
		var e1 = e.e;
		var v = e.v;
		var t = e.t;
		var c = e.ecatch;
		edef = hscript_Expr.ETry(f(e1),v,t,f(c));
		break;
	case 21:
		var fl = e.fl;
		var _g = [];
		var _g1 = 0;
		while(_g1 < fl.length) {
			var fi = fl[_g1];
			++_g1;
			_g.push({ name : fi.name, e : f(fi.e)});
		}
		edef = hscript_Expr.EObject(_g);
		break;
	case 22:
		var c = e.cond;
		var e1 = e.e1;
		var e2 = e.e2;
		edef = hscript_Expr.ETernary(f(c),f(e1),f(e2));
		break;
	case 23:
		var e1 = e.e;
		var cases = e.cases;
		var def = e.defaultExpr;
		var edef1 = f(e1);
		var _g = [];
		var _g1 = 0;
		while(_g1 < cases.length) {
			var c = cases[_g1];
			++_g1;
			var _g2 = [];
			var _g3 = 0;
			var _g4 = c.values;
			while(_g3 < _g4.length) {
				var v = _g4[_g3];
				++_g3;
				_g2.push(f(v));
			}
			_g.push({ values : _g2, expr : f(c.expr)});
		}
		edef = hscript_Expr.ESwitch(edef1,_g,def == null ? null : f(def));
		break;
	case 24:
		var c = e.cond;
		var e1 = e.e;
		edef = hscript_Expr.EDoWhile(f(c),f(e1));
		break;
	case 25:
		var name = e.name;
		var args = e.args;
		var e1 = e.e;
		var edef1;
		if(args == null) {
			edef1 = null;
		} else {
			var _g = [];
			var _g1 = 0;
			while(_g1 < args.length) {
				var a = args[_g1];
				++_g1;
				_g.push(f(a));
			}
			edef1 = _g;
		}
		edef = hscript_Expr.EMeta(name,edef1,f(e1));
		break;
	case 26:
		var e1 = e.e;
		var t = e.t;
		edef = hscript_Expr.ECheckType(f(e1),t);
		break;
	}
	return edef;
};
hscript_Tools.expr = function(e) {
	return e;
};
hscript_Tools.mk = function(e,p) {
	return e;
};
var hx_strings_AnyAsString = {};
hx_strings_AnyAsString.fromBool = function(value) {
	if(value) {
		return "true";
	} else {
		return "false";
	}
};
hx_strings_AnyAsString.fromAny = function(value) {
	return Std.string(value);
};
var hx_strings__$Char_CharCaseMapper = function() {
	this.mapL2U = new haxe_ds_IntMap();
	this.mapU2L = new haxe_ds_IntMap();
	this._addCaseMapping(97,65);
	this._addCaseMapping(98,66);
	this._addCaseMapping(99,67);
	this._addCaseMapping(100,68);
	this._addCaseMapping(101,69);
	this._addCaseMapping(102,70);
	this._addCaseMapping(103,71);
	this._addCaseMapping(104,72);
	this._addCaseMapping(105,73);
	this._addCaseMapping(106,74);
	this._addCaseMapping(107,75);
	this._addCaseMapping(108,76);
	this._addCaseMapping(109,77);
	this._addCaseMapping(110,78);
	this._addCaseMapping(111,79);
	this._addCaseMapping(112,80);
	this._addCaseMapping(113,81);
	this._addCaseMapping(114,82);
	this._addCaseMapping(115,83);
	this._addCaseMapping(116,84);
	this._addCaseMapping(117,85);
	this._addCaseMapping(118,86);
	this._addCaseMapping(119,87);
	this._addCaseMapping(120,88);
	this._addCaseMapping(121,89);
	this._addCaseMapping(122,90);
	this._addCaseMapping(224,192);
	this._addCaseMapping(225,193);
	this._addCaseMapping(226,194);
	this._addCaseMapping(227,195);
	this._addCaseMapping(228,196);
	this._addCaseMapping(229,197);
	this._addCaseMapping(230,198);
	this._addCaseMapping(231,199);
	this._addCaseMapping(232,200);
	this._addCaseMapping(233,201);
	this._addCaseMapping(234,202);
	this._addCaseMapping(235,203);
	this._addCaseMapping(236,204);
	this._addCaseMapping(237,205);
	this._addCaseMapping(238,206);
	this._addCaseMapping(239,207);
	this._addCaseMapping(240,208);
	this._addCaseMapping(241,209);
	this._addCaseMapping(242,210);
	this._addCaseMapping(243,211);
	this._addCaseMapping(244,212);
	this._addCaseMapping(245,213);
	this._addCaseMapping(246,214);
	this._addCaseMapping(248,216);
	this._addCaseMapping(249,217);
	this._addCaseMapping(250,218);
	this._addCaseMapping(251,219);
	this._addCaseMapping(252,220);
	this._addCaseMapping(253,221);
	this._addCaseMapping(254,222);
	this._addCaseMapping(255,376);
	this._addCaseMapping(257,256);
	this._addCaseMapping(259,258);
	this._addCaseMapping(261,260);
	this._addCaseMapping(263,262);
	this._addCaseMapping(265,264);
	this._addCaseMapping(267,266);
	this._addCaseMapping(269,268);
	this._addCaseMapping(271,270);
	this._addCaseMapping(273,272);
	this._addCaseMapping(275,274);
	this._addCaseMapping(277,276);
	this._addCaseMapping(279,278);
	this._addCaseMapping(281,280);
	this._addCaseMapping(283,282);
	this._addCaseMapping(285,284);
	this._addCaseMapping(287,286);
	this._addCaseMapping(289,288);
	this._addCaseMapping(291,290);
	this._addCaseMapping(293,292);
	this._addCaseMapping(295,294);
	this._addCaseMapping(297,296);
	this._addCaseMapping(299,298);
	this._addCaseMapping(301,300);
	this._addCaseMapping(303,302);
	this._addCaseMapping(305,73);
	this._addCaseMapping(307,306);
	this._addCaseMapping(309,308);
	this._addCaseMapping(311,310);
	this._addCaseMapping(314,313);
	this._addCaseMapping(316,315);
	this._addCaseMapping(318,317);
	this._addCaseMapping(320,319);
	this._addCaseMapping(322,321);
	this._addCaseMapping(324,323);
	this._addCaseMapping(326,325);
	this._addCaseMapping(328,327);
	this._addCaseMapping(331,330);
	this._addCaseMapping(333,332);
	this._addCaseMapping(335,334);
	this._addCaseMapping(337,336);
	this._addCaseMapping(339,338);
	this._addCaseMapping(341,340);
	this._addCaseMapping(343,342);
	this._addCaseMapping(345,344);
	this._addCaseMapping(347,346);
	this._addCaseMapping(349,348);
	this._addCaseMapping(351,350);
	this._addCaseMapping(353,352);
	this._addCaseMapping(355,354);
	this._addCaseMapping(357,356);
	this._addCaseMapping(359,358);
	this._addCaseMapping(361,360);
	this._addCaseMapping(363,362);
	this._addCaseMapping(365,364);
	this._addCaseMapping(367,366);
	this._addCaseMapping(369,368);
	this._addCaseMapping(371,370);
	this._addCaseMapping(373,372);
	this._addCaseMapping(375,374);
	this._addCaseMapping(378,377);
	this._addCaseMapping(380,379);
	this._addCaseMapping(382,381);
	this._addCaseMapping(387,386);
	this._addCaseMapping(389,388);
	this._addCaseMapping(392,391);
	this._addCaseMapping(396,395);
	this._addCaseMapping(402,401);
	this._addCaseMapping(409,408);
	this._addCaseMapping(417,416);
	this._addCaseMapping(419,418);
	this._addCaseMapping(421,420);
	this._addCaseMapping(424,423);
	this._addCaseMapping(429,428);
	this._addCaseMapping(432,431);
	this._addCaseMapping(436,435);
	this._addCaseMapping(438,437);
	this._addCaseMapping(441,440);
	this._addCaseMapping(445,444);
	this._addCaseMapping(454,452);
	this._addCaseMapping(457,455);
	this._addCaseMapping(460,458);
	this._addCaseMapping(462,461);
	this._addCaseMapping(464,463);
	this._addCaseMapping(466,465);
	this._addCaseMapping(468,467);
	this._addCaseMapping(470,469);
	this._addCaseMapping(472,471);
	this._addCaseMapping(474,473);
	this._addCaseMapping(476,475);
	this._addCaseMapping(479,478);
	this._addCaseMapping(481,480);
	this._addCaseMapping(483,482);
	this._addCaseMapping(485,484);
	this._addCaseMapping(487,486);
	this._addCaseMapping(489,488);
	this._addCaseMapping(491,490);
	this._addCaseMapping(493,492);
	this._addCaseMapping(495,494);
	this._addCaseMapping(499,497);
	this._addCaseMapping(501,500);
	this._addCaseMapping(507,506);
	this._addCaseMapping(509,508);
	this._addCaseMapping(511,510);
	this._addCaseMapping(513,512);
	this._addCaseMapping(515,514);
	this._addCaseMapping(517,516);
	this._addCaseMapping(519,518);
	this._addCaseMapping(521,520);
	this._addCaseMapping(523,522);
	this._addCaseMapping(525,524);
	this._addCaseMapping(527,526);
	this._addCaseMapping(529,528);
	this._addCaseMapping(531,530);
	this._addCaseMapping(533,532);
	this._addCaseMapping(535,534);
	this._addCaseMapping(595,385);
	this._addCaseMapping(596,390);
	this._addCaseMapping(599,394);
	this._addCaseMapping(600,398);
	this._addCaseMapping(601,399);
	this._addCaseMapping(603,400);
	this._addCaseMapping(608,403);
	this._addCaseMapping(611,404);
	this._addCaseMapping(616,407);
	this._addCaseMapping(617,406);
	this._addCaseMapping(623,412);
	this._addCaseMapping(626,413);
	this._addCaseMapping(629,415);
	this._addCaseMapping(643,425);
	this._addCaseMapping(648,430);
	this._addCaseMapping(650,433);
	this._addCaseMapping(651,434);
	this._addCaseMapping(658,439);
	this._addCaseMapping(924,181);
	this._addCaseMapping(940,902);
	this._addCaseMapping(941,904);
	this._addCaseMapping(942,905);
	this._addCaseMapping(943,906);
	this._addCaseMapping(945,913);
	this._addCaseMapping(946,914);
	this._addCaseMapping(947,915);
	this._addCaseMapping(948,916);
	this._addCaseMapping(949,917);
	this._addCaseMapping(950,918);
	this._addCaseMapping(951,919);
	this._addCaseMapping(952,920);
	this._addCaseMapping(953,921);
	this._addCaseMapping(954,922);
	this._addCaseMapping(955,923);
	this._addCaseMapping(956,924);
	this._addCaseMapping(957,925);
	this._addCaseMapping(958,926);
	this._addCaseMapping(959,927);
	this._addCaseMapping(960,928);
	this._addCaseMapping(961,929);
	this._addCaseMapping(963,931);
	this._addCaseMapping(964,932);
	this._addCaseMapping(965,933);
	this._addCaseMapping(966,934);
	this._addCaseMapping(967,935);
	this._addCaseMapping(968,936);
	this._addCaseMapping(969,937);
	this._addCaseMapping(970,938);
	this._addCaseMapping(971,939);
	this._addCaseMapping(972,908);
	this._addCaseMapping(973,910);
	this._addCaseMapping(974,911);
	this._addCaseMapping(995,994);
	this._addCaseMapping(997,996);
	this._addCaseMapping(999,998);
	this._addCaseMapping(1001,1000);
	this._addCaseMapping(1003,1002);
	this._addCaseMapping(1005,1004);
	this._addCaseMapping(1007,1006);
	this._addCaseMapping(1072,1040);
	this._addCaseMapping(1073,1041);
	this._addCaseMapping(1074,1042);
	this._addCaseMapping(1075,1043);
	this._addCaseMapping(1076,1044);
	this._addCaseMapping(1077,1045);
	this._addCaseMapping(1078,1046);
	this._addCaseMapping(1079,1047);
	this._addCaseMapping(1080,1048);
	this._addCaseMapping(1081,1049);
	this._addCaseMapping(1082,1050);
	this._addCaseMapping(1083,1051);
	this._addCaseMapping(1084,1052);
	this._addCaseMapping(1085,1053);
	this._addCaseMapping(1086,1054);
	this._addCaseMapping(1087,1055);
	this._addCaseMapping(1088,1056);
	this._addCaseMapping(1089,1057);
	this._addCaseMapping(1090,1058);
	this._addCaseMapping(1091,1059);
	this._addCaseMapping(1092,1060);
	this._addCaseMapping(1093,1061);
	this._addCaseMapping(1094,1062);
	this._addCaseMapping(1095,1063);
	this._addCaseMapping(1096,1064);
	this._addCaseMapping(1097,1065);
	this._addCaseMapping(1098,1066);
	this._addCaseMapping(1099,1067);
	this._addCaseMapping(1100,1068);
	this._addCaseMapping(1101,1069);
	this._addCaseMapping(1102,1070);
	this._addCaseMapping(1103,1071);
	this._addCaseMapping(1105,1025);
	this._addCaseMapping(1106,1026);
	this._addCaseMapping(1107,1027);
	this._addCaseMapping(1108,1028);
	this._addCaseMapping(1109,1029);
	this._addCaseMapping(1110,1030);
	this._addCaseMapping(1111,1031);
	this._addCaseMapping(1112,1032);
	this._addCaseMapping(1113,1033);
	this._addCaseMapping(1114,1034);
	this._addCaseMapping(1115,1035);
	this._addCaseMapping(1116,1036);
	this._addCaseMapping(1118,1038);
	this._addCaseMapping(1119,1039);
	this._addCaseMapping(1121,1120);
	this._addCaseMapping(1123,1122);
	this._addCaseMapping(1125,1124);
	this._addCaseMapping(1127,1126);
	this._addCaseMapping(1129,1128);
	this._addCaseMapping(1131,1130);
	this._addCaseMapping(1133,1132);
	this._addCaseMapping(1135,1134);
	this._addCaseMapping(1137,1136);
	this._addCaseMapping(1139,1138);
	this._addCaseMapping(1141,1140);
	this._addCaseMapping(1143,1142);
	this._addCaseMapping(1145,1144);
	this._addCaseMapping(1147,1146);
	this._addCaseMapping(1149,1148);
	this._addCaseMapping(1151,1150);
	this._addCaseMapping(1153,1152);
	this._addCaseMapping(1169,1168);
	this._addCaseMapping(1171,1170);
	this._addCaseMapping(1173,1172);
	this._addCaseMapping(1175,1174);
	this._addCaseMapping(1177,1176);
	this._addCaseMapping(1179,1178);
	this._addCaseMapping(1181,1180);
	this._addCaseMapping(1183,1182);
	this._addCaseMapping(1185,1184);
	this._addCaseMapping(1187,1186);
	this._addCaseMapping(1189,1188);
	this._addCaseMapping(1191,1190);
	this._addCaseMapping(1193,1192);
	this._addCaseMapping(1195,1194);
	this._addCaseMapping(1197,1196);
	this._addCaseMapping(1199,1198);
	this._addCaseMapping(1201,1200);
	this._addCaseMapping(1203,1202);
	this._addCaseMapping(1205,1204);
	this._addCaseMapping(1207,1206);
	this._addCaseMapping(1209,1208);
	this._addCaseMapping(1211,1210);
	this._addCaseMapping(1213,1212);
	this._addCaseMapping(1215,1214);
	this._addCaseMapping(1218,1217);
	this._addCaseMapping(1220,1219);
	this._addCaseMapping(1224,1223);
	this._addCaseMapping(1228,1227);
	this._addCaseMapping(1233,1232);
	this._addCaseMapping(1235,1234);
	this._addCaseMapping(1237,1236);
	this._addCaseMapping(1239,1238);
	this._addCaseMapping(1241,1240);
	this._addCaseMapping(1243,1242);
	this._addCaseMapping(1245,1244);
	this._addCaseMapping(1247,1246);
	this._addCaseMapping(1249,1248);
	this._addCaseMapping(1251,1250);
	this._addCaseMapping(1253,1252);
	this._addCaseMapping(1255,1254);
	this._addCaseMapping(1257,1256);
	this._addCaseMapping(1259,1258);
	this._addCaseMapping(1263,1262);
	this._addCaseMapping(1265,1264);
	this._addCaseMapping(1267,1266);
	this._addCaseMapping(1269,1268);
	this._addCaseMapping(1273,1272);
	this._addCaseMapping(1377,1329);
	this._addCaseMapping(1378,1330);
	this._addCaseMapping(1379,1331);
	this._addCaseMapping(1380,1332);
	this._addCaseMapping(1381,1333);
	this._addCaseMapping(1382,1334);
	this._addCaseMapping(1383,1335);
	this._addCaseMapping(1384,1336);
	this._addCaseMapping(1385,1337);
	this._addCaseMapping(1386,1338);
	this._addCaseMapping(1387,1339);
	this._addCaseMapping(1388,1340);
	this._addCaseMapping(1389,1341);
	this._addCaseMapping(1390,1342);
	this._addCaseMapping(1391,1343);
	this._addCaseMapping(1392,1344);
	this._addCaseMapping(1393,1345);
	this._addCaseMapping(1394,1346);
	this._addCaseMapping(1395,1347);
	this._addCaseMapping(1396,1348);
	this._addCaseMapping(1397,1349);
	this._addCaseMapping(1398,1350);
	this._addCaseMapping(1399,1351);
	this._addCaseMapping(1400,1352);
	this._addCaseMapping(1401,1353);
	this._addCaseMapping(1402,1354);
	this._addCaseMapping(1403,1355);
	this._addCaseMapping(1404,1356);
	this._addCaseMapping(1405,1357);
	this._addCaseMapping(1406,1358);
	this._addCaseMapping(1407,1359);
	this._addCaseMapping(1408,1360);
	this._addCaseMapping(1409,1361);
	this._addCaseMapping(1410,1362);
	this._addCaseMapping(1411,1363);
	this._addCaseMapping(1412,1364);
	this._addCaseMapping(1413,1365);
	this._addCaseMapping(1414,1366);
	this._addCaseMapping(4304,4256);
	this._addCaseMapping(4305,4257);
	this._addCaseMapping(4306,4258);
	this._addCaseMapping(4307,4259);
	this._addCaseMapping(4308,4260);
	this._addCaseMapping(4309,4261);
	this._addCaseMapping(4310,4262);
	this._addCaseMapping(4311,4263);
	this._addCaseMapping(4312,4264);
	this._addCaseMapping(4313,4265);
	this._addCaseMapping(4314,4266);
	this._addCaseMapping(4315,4267);
	this._addCaseMapping(4316,4268);
	this._addCaseMapping(4317,4269);
	this._addCaseMapping(4318,4270);
	this._addCaseMapping(4319,4271);
	this._addCaseMapping(4320,4272);
	this._addCaseMapping(4321,4273);
	this._addCaseMapping(4322,4274);
	this._addCaseMapping(4323,4275);
	this._addCaseMapping(4324,4276);
	this._addCaseMapping(4325,4277);
	this._addCaseMapping(4326,4278);
	this._addCaseMapping(4327,4279);
	this._addCaseMapping(4328,4280);
	this._addCaseMapping(4329,4281);
	this._addCaseMapping(4330,4282);
	this._addCaseMapping(4331,4283);
	this._addCaseMapping(4332,4284);
	this._addCaseMapping(4333,4285);
	this._addCaseMapping(4334,4286);
	this._addCaseMapping(4335,4287);
	this._addCaseMapping(4336,4288);
	this._addCaseMapping(4337,4289);
	this._addCaseMapping(4338,4290);
	this._addCaseMapping(4339,4291);
	this._addCaseMapping(4340,4292);
	this._addCaseMapping(4341,4293);
	this._addCaseMapping(7681,7680);
	this._addCaseMapping(7683,7682);
	this._addCaseMapping(7685,7684);
	this._addCaseMapping(7687,7686);
	this._addCaseMapping(7689,7688);
	this._addCaseMapping(7691,7690);
	this._addCaseMapping(7693,7692);
	this._addCaseMapping(7695,7694);
	this._addCaseMapping(7697,7696);
	this._addCaseMapping(7699,7698);
	this._addCaseMapping(7701,7700);
	this._addCaseMapping(7703,7702);
	this._addCaseMapping(7705,7704);
	this._addCaseMapping(7707,7706);
	this._addCaseMapping(7709,7708);
	this._addCaseMapping(7711,7710);
	this._addCaseMapping(7713,7712);
	this._addCaseMapping(7715,7714);
	this._addCaseMapping(7717,7716);
	this._addCaseMapping(7719,7718);
	this._addCaseMapping(7721,7720);
	this._addCaseMapping(7723,7722);
	this._addCaseMapping(7725,7724);
	this._addCaseMapping(7727,7726);
	this._addCaseMapping(7729,7728);
	this._addCaseMapping(7731,7730);
	this._addCaseMapping(7733,7732);
	this._addCaseMapping(7735,7734);
	this._addCaseMapping(7737,7736);
	this._addCaseMapping(7739,7738);
	this._addCaseMapping(7741,7740);
	this._addCaseMapping(7743,7742);
	this._addCaseMapping(7745,7744);
	this._addCaseMapping(7747,7746);
	this._addCaseMapping(7749,7748);
	this._addCaseMapping(7751,7750);
	this._addCaseMapping(7753,7752);
	this._addCaseMapping(7755,7754);
	this._addCaseMapping(7757,7756);
	this._addCaseMapping(7759,7758);
	this._addCaseMapping(7761,7760);
	this._addCaseMapping(7763,7762);
	this._addCaseMapping(7765,7764);
	this._addCaseMapping(7767,7766);
	this._addCaseMapping(7769,7768);
	this._addCaseMapping(7771,7770);
	this._addCaseMapping(7773,7772);
	this._addCaseMapping(7775,7774);
	this._addCaseMapping(7777,7776);
	this._addCaseMapping(7779,7778);
	this._addCaseMapping(7781,7780);
	this._addCaseMapping(7783,7782);
	this._addCaseMapping(7785,7784);
	this._addCaseMapping(7787,7786);
	this._addCaseMapping(7789,7788);
	this._addCaseMapping(7791,7790);
	this._addCaseMapping(7793,7792);
	this._addCaseMapping(7795,7794);
	this._addCaseMapping(7797,7796);
	this._addCaseMapping(7799,7798);
	this._addCaseMapping(7801,7800);
	this._addCaseMapping(7803,7802);
	this._addCaseMapping(7805,7804);
	this._addCaseMapping(7807,7806);
	this._addCaseMapping(7809,7808);
	this._addCaseMapping(7811,7810);
	this._addCaseMapping(7813,7812);
	this._addCaseMapping(7815,7814);
	this._addCaseMapping(7817,7816);
	this._addCaseMapping(7819,7818);
	this._addCaseMapping(7821,7820);
	this._addCaseMapping(7823,7822);
	this._addCaseMapping(7825,7824);
	this._addCaseMapping(7827,7826);
	this._addCaseMapping(7829,7828);
	this._addCaseMapping(7841,7840);
	this._addCaseMapping(7843,7842);
	this._addCaseMapping(7845,7844);
	this._addCaseMapping(7847,7846);
	this._addCaseMapping(7849,7848);
	this._addCaseMapping(7851,7850);
	this._addCaseMapping(7853,7852);
	this._addCaseMapping(7855,7854);
	this._addCaseMapping(7857,7856);
	this._addCaseMapping(7859,7858);
	this._addCaseMapping(7861,7860);
	this._addCaseMapping(7863,7862);
	this._addCaseMapping(7865,7864);
	this._addCaseMapping(7867,7866);
	this._addCaseMapping(7869,7868);
	this._addCaseMapping(7871,7870);
	this._addCaseMapping(7873,7872);
	this._addCaseMapping(7875,7874);
	this._addCaseMapping(7877,7876);
	this._addCaseMapping(7879,7878);
	this._addCaseMapping(7881,7880);
	this._addCaseMapping(7883,7882);
	this._addCaseMapping(7885,7884);
	this._addCaseMapping(7887,7886);
	this._addCaseMapping(7889,7888);
	this._addCaseMapping(7891,7890);
	this._addCaseMapping(7893,7892);
	this._addCaseMapping(7895,7894);
	this._addCaseMapping(7897,7896);
	this._addCaseMapping(7899,7898);
	this._addCaseMapping(7901,7900);
	this._addCaseMapping(7903,7902);
	this._addCaseMapping(7905,7904);
	this._addCaseMapping(7907,7906);
	this._addCaseMapping(7909,7908);
	this._addCaseMapping(7911,7910);
	this._addCaseMapping(7913,7912);
	this._addCaseMapping(7915,7914);
	this._addCaseMapping(7917,7916);
	this._addCaseMapping(7919,7918);
	this._addCaseMapping(7921,7920);
	this._addCaseMapping(7923,7922);
	this._addCaseMapping(7925,7924);
	this._addCaseMapping(7927,7926);
	this._addCaseMapping(7929,7928);
	this._addCaseMapping(7936,7944);
	this._addCaseMapping(7937,7945);
	this._addCaseMapping(7938,7946);
	this._addCaseMapping(7939,7947);
	this._addCaseMapping(7940,7948);
	this._addCaseMapping(7941,7949);
	this._addCaseMapping(7942,7950);
	this._addCaseMapping(7943,7951);
	this._addCaseMapping(7952,7960);
	this._addCaseMapping(7953,7961);
	this._addCaseMapping(7954,7962);
	this._addCaseMapping(7955,7963);
	this._addCaseMapping(7956,7964);
	this._addCaseMapping(7957,7965);
	this._addCaseMapping(7968,7976);
	this._addCaseMapping(7969,7977);
	this._addCaseMapping(7970,7978);
	this._addCaseMapping(7971,7979);
	this._addCaseMapping(7972,7980);
	this._addCaseMapping(7973,7981);
	this._addCaseMapping(7974,7982);
	this._addCaseMapping(7975,7983);
	this._addCaseMapping(7984,7992);
	this._addCaseMapping(7985,7993);
	this._addCaseMapping(7986,7994);
	this._addCaseMapping(7987,7995);
	this._addCaseMapping(7988,7996);
	this._addCaseMapping(7989,7997);
	this._addCaseMapping(7990,7998);
	this._addCaseMapping(7991,7999);
	this._addCaseMapping(8000,8008);
	this._addCaseMapping(8001,8009);
	this._addCaseMapping(8002,8010);
	this._addCaseMapping(8003,8011);
	this._addCaseMapping(8004,8012);
	this._addCaseMapping(8005,8013);
	this._addCaseMapping(8017,8025);
	this._addCaseMapping(8019,8027);
	this._addCaseMapping(8021,8029);
	this._addCaseMapping(8023,8031);
	this._addCaseMapping(8032,8040);
	this._addCaseMapping(8033,8041);
	this._addCaseMapping(8034,8042);
	this._addCaseMapping(8035,8043);
	this._addCaseMapping(8036,8044);
	this._addCaseMapping(8037,8045);
	this._addCaseMapping(8038,8046);
	this._addCaseMapping(8039,8047);
	this._addCaseMapping(8064,8072);
	this._addCaseMapping(8065,8073);
	this._addCaseMapping(8066,8074);
	this._addCaseMapping(8067,8075);
	this._addCaseMapping(8068,8076);
	this._addCaseMapping(8069,8077);
	this._addCaseMapping(8070,8078);
	this._addCaseMapping(8071,8079);
	this._addCaseMapping(8080,8088);
	this._addCaseMapping(8081,8089);
	this._addCaseMapping(8082,8090);
	this._addCaseMapping(8083,8091);
	this._addCaseMapping(8084,8092);
	this._addCaseMapping(8085,8093);
	this._addCaseMapping(8086,8094);
	this._addCaseMapping(8087,8095);
	this._addCaseMapping(8096,8104);
	this._addCaseMapping(8097,8105);
	this._addCaseMapping(8098,8106);
	this._addCaseMapping(8099,8107);
	this._addCaseMapping(8100,8108);
	this._addCaseMapping(8101,8109);
	this._addCaseMapping(8102,8110);
	this._addCaseMapping(8103,8111);
	this._addCaseMapping(8112,8120);
	this._addCaseMapping(8113,8121);
	this._addCaseMapping(8144,8152);
	this._addCaseMapping(8145,8153);
	this._addCaseMapping(8160,8168);
	this._addCaseMapping(8161,8169);
	this._addCaseMapping(9424,9398);
	this._addCaseMapping(9425,9399);
	this._addCaseMapping(9426,9400);
	this._addCaseMapping(9427,9401);
	this._addCaseMapping(9428,9402);
	this._addCaseMapping(9429,9403);
	this._addCaseMapping(9430,9404);
	this._addCaseMapping(9431,9405);
	this._addCaseMapping(9432,9406);
	this._addCaseMapping(9433,9407);
	this._addCaseMapping(9434,9408);
	this._addCaseMapping(9435,9409);
	this._addCaseMapping(9436,9410);
	this._addCaseMapping(9437,9411);
	this._addCaseMapping(9438,9412);
	this._addCaseMapping(9439,9413);
	this._addCaseMapping(9440,9414);
	this._addCaseMapping(9441,9415);
	this._addCaseMapping(9442,9416);
	this._addCaseMapping(9443,9417);
	this._addCaseMapping(9444,9418);
	this._addCaseMapping(9445,9419);
	this._addCaseMapping(9446,9420);
	this._addCaseMapping(9447,9421);
	this._addCaseMapping(9448,9422);
	this._addCaseMapping(9449,9423);
	this._addCaseMapping(65345,65313);
	this._addCaseMapping(65346,65314);
	this._addCaseMapping(65347,65315);
	this._addCaseMapping(65348,65316);
	this._addCaseMapping(65349,65317);
	this._addCaseMapping(65350,65318);
	this._addCaseMapping(65351,65319);
	this._addCaseMapping(65352,65320);
	this._addCaseMapping(65353,65321);
	this._addCaseMapping(65354,65322);
	this._addCaseMapping(65355,65323);
	this._addCaseMapping(65356,65324);
	this._addCaseMapping(65357,65325);
	this._addCaseMapping(65358,65326);
	this._addCaseMapping(65359,65327);
	this._addCaseMapping(65360,65328);
	this._addCaseMapping(65361,65329);
	this._addCaseMapping(65362,65330);
	this._addCaseMapping(65363,65331);
	this._addCaseMapping(65364,65332);
	this._addCaseMapping(65365,65333);
	this._addCaseMapping(65366,65334);
	this._addCaseMapping(65367,65335);
	this._addCaseMapping(65368,65336);
	this._addCaseMapping(65369,65337);
	this._addCaseMapping(65370,65338);
};
$hxClasses["hx.strings._Char.CharCaseMapper"] = hx_strings__$Char_CharCaseMapper;
hx_strings__$Char_CharCaseMapper.__name__ = true;
hx_strings__$Char_CharCaseMapper.prototype = {
	mapU2L: null
	,mapL2U: null
	,_addCaseMapping: function(lowerChar,upperChar) {
		if(!this.mapU2L.h.hasOwnProperty(upperChar)) {
			this.mapU2L.h[upperChar] = lowerChar;
		}
		if(!this.mapL2U.h.hasOwnProperty(lowerChar)) {
			this.mapL2U.h[lowerChar] = upperChar;
		}
	}
	,isLowerCase: function(ch) {
		return this.mapL2U.h.hasOwnProperty(ch);
	}
	,isUpperCase: function(ch) {
		return this.mapU2L.h.hasOwnProperty(ch);
	}
	,toLowerCase: function(ch) {
		var lowerChar = this.mapU2L.h[ch];
		if(lowerChar == null) {
			return ch;
		} else {
			return lowerChar;
		}
	}
	,toUpperCase: function(ch) {
		var upperChar = this.mapL2U.h[ch];
		if(upperChar == null) {
			return ch;
		} else {
			return upperChar;
		}
	}
	,__class__: hx_strings__$Char_CharCaseMapper
};
var hx_strings_Char = {};
hx_strings_Char.fromString = function(str) {
	return hx_strings_Strings.charCodeAt8(str,0);
};
hx_strings_Char.of = function(ch) {
	return ch;
};
hx_strings_Char.op_plus_string = function(ch,other) {
	return String.fromCodePoint(ch) + other;
};
hx_strings_Char.op_plus_string2 = function(str,ch) {
	return str + String.fromCodePoint(ch);
};
hx_strings_Char.op_plus = function(ch,other) {
	return ch + other;
};
hx_strings_Char.isAscii = function(this1) {
	if(this1 > -1) {
		return this1 < 128;
	} else {
		return false;
	}
};
hx_strings_Char.isAsciiAlpha = function(this1) {
	if(!(this1 > 64 && this1 < 91)) {
		if(this1 > 96) {
			return this1 < 123;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiAlphanumeric = function(this1) {
	if(!(this1 > 64 && this1 < 91 || this1 > 96 && this1 < 123)) {
		if(this1 > 47) {
			return this1 < 58;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiControl = function(this1) {
	if(!(this1 > -1 && this1 < 32)) {
		return this1 == 127;
	} else {
		return true;
	}
};
hx_strings_Char.isAsciiPrintable = function(this1) {
	if(this1 > 31) {
		return this1 < 127;
	} else {
		return false;
	}
};
hx_strings_Char.isDigit = function(this1) {
	if(this1 > 47) {
		return this1 < 58;
	} else {
		return false;
	}
};
hx_strings_Char.isEOF = function(this1) {
	return this1 != this1;
};
hx_strings_Char.isSpace = function(this1) {
	return this1 == 32;
};
hx_strings_Char.isUTF8 = function(this1) {
	if(this1 > -1) {
		return this1 < 1114112;
	} else {
		return false;
	}
};
hx_strings_Char.isWhitespace = function(this1) {
	if(!(this1 > 8 && this1 < 14)) {
		return this1 == 32;
	} else {
		return true;
	}
};
hx_strings_Char.isLowerCase = function(this1) {
	return hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h.hasOwnProperty(this1);
};
hx_strings_Char.isUpperCase = function(this1) {
	return hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(this1);
};
hx_strings_Char.toLowerCase = function(this1) {
	var lowerChar = hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h[this1];
	if(lowerChar == null) {
		return this1;
	} else {
		return lowerChar;
	}
};
hx_strings_Char.toUpperCase = function(this1) {
	var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
	if(upperChar == null) {
		return this1;
	} else {
		return upperChar;
	}
};
hx_strings_Char.toInt = function(this1) {
	return this1;
};
hx_strings_Char.toString = function(this1) {
	return String.fromCodePoint(this1);
};
var hx_strings_CharIterator = function(prevBufferSize) {
	this.prevBufferNextIdx = -1;
	this.prevBufferPrevIdx = -1;
	this.currChar = -1;
	this.col = 0;
	this.line = 0;
	this.index = -1;
	this.prevBuffer = prevBufferSize > 0 ? new hx_strings_internal__$RingBuffer_RingBufferImpl(prevBufferSize + 1) : null;
};
$hxClasses["hx.strings.CharIterator"] = hx_strings_CharIterator;
hx_strings_CharIterator.__name__ = true;
hx_strings_CharIterator.fromString = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_StringCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromArray = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_ArrayCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromInput = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_InputCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.fromIterator = function(chars,prevBufferSize) {
	if(prevBufferSize == null) {
		prevBufferSize = 0;
	}
	if(chars == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	}
	return new hx_strings__$CharIterator_IteratorCharIterator(chars,prevBufferSize);
};
hx_strings_CharIterator.prototype = {
	index: null
	,line: null
	,col: null
	,currChar: null
	,prevBuffer: null
	,prevBufferPrevIdx: null
	,prevBufferNextIdx: null
	,get_current: function() {
		if(this.index > -1) {
			return this.currChar;
		} else {
			return null;
		}
	}
	,get_pos: function() {
		return new hx_strings_CharPos(this.index,this.line,this.col);
	}
	,hasPrev: function() {
		return this.prevBufferPrevIdx > -1;
	}
	,prev: function() {
		if(this.prevBufferPrevIdx <= -1) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		var prevChar = this.prevBuffer.get(this.prevBufferPrevIdx);
		this.currChar = prevChar.char;
		this.index = prevChar.index;
		this.line = prevChar.line;
		this.col = prevChar.col;
		this.prevBufferNextIdx = this.prevBufferPrevIdx + 1 < this.prevBuffer.length ? this.prevBufferPrevIdx + 1 : -1;
		this.prevBufferPrevIdx--;
		return this.currChar;
	}
	,hasNext: function() {
		if(this.prevBufferNextIdx > -1) {
			return true;
		} else {
			return !this.isEOF();
		}
	}
	,next: function() {
		if(this.prevBufferNextIdx > -1) {
			var prevChar = this.prevBuffer.get(this.prevBufferNextIdx);
			this.currChar = prevChar.char;
			this.index = prevChar.index;
			this.line = prevChar.line;
			this.col = prevChar.col;
			this.prevBufferPrevIdx = this.prevBufferNextIdx - 1;
			this.prevBufferNextIdx = this.prevBufferNextIdx + 1 < this.prevBuffer.length ? this.prevBufferNextIdx + 1 : -1;
			return this.currChar;
		}
		if(this.isEOF()) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.currChar == 10 || this.currChar < 0) {
			this.line++;
			this.col = 0;
		}
		this.index++;
		this.col++;
		this.currChar = this.getChar();
		if(this.prevBuffer != null) {
			this.prevBuffer.add(new hx_strings__$CharIterator_CharWithPos(this.currChar,this.index,this.col,this.line));
			this.prevBufferPrevIdx = this.prevBuffer.length - 2;
			this.prevBufferNextIdx = -1;
		}
		return this.currChar;
	}
	,getChar: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,isEOF: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,__class__: hx_strings_CharIterator
	,__properties__: {get_pos:"get_pos",get_current:"get_current"}
};
var hx_strings_CharPos = function(index,line,col) {
	this.index = index;
	this.line = line;
	this.col = col;
};
$hxClasses["hx.strings.CharPos"] = hx_strings_CharPos;
hx_strings_CharPos.__name__ = true;
hx_strings_CharPos.prototype = {
	index: null
	,line: null
	,col: null
	,toString: function() {
		return "CharPos[index=" + this.index + ", line=" + this.line + ", col=" + this.col + "]";
	}
	,__class__: hx_strings_CharPos
};
var hx_strings__$CharIterator_CharWithPos = function(char,index,line,col) {
	hx_strings_CharPos.call(this,index,line,col);
	this.char = char;
};
$hxClasses["hx.strings._CharIterator.CharWithPos"] = hx_strings__$CharIterator_CharWithPos;
hx_strings__$CharIterator_CharWithPos.__name__ = true;
hx_strings__$CharIterator_CharWithPos.__super__ = hx_strings_CharPos;
hx_strings__$CharIterator_CharWithPos.prototype = $extend(hx_strings_CharPos.prototype,{
	char: null
	,__class__: hx_strings__$CharIterator_CharWithPos
});
var hx_strings_internal__$RingBuffer_RingBufferImpl = function(size) {
	this.length = 0;
	this.bufferEndIdx = -1;
	this.bufferStartIdx = 0;
	if(size < 1) {
		throw haxe_Exception.thrown("[size] must be > 0");
	}
	this.buffer = new Array(size);
	this.size = size;
	this.bufferMaxIdx = size - 1;
};
$hxClasses["hx.strings.internal._RingBuffer.RingBufferImpl"] = hx_strings_internal__$RingBuffer_RingBufferImpl;
hx_strings_internal__$RingBuffer_RingBufferImpl.__name__ = true;
hx_strings_internal__$RingBuffer_RingBufferImpl.prototype = {
	buffer: null
	,bufferStartIdx: null
	,bufferEndIdx: null
	,bufferMaxIdx: null
	,length: null
	,size: null
	,add: function(item) {
		if(this.length == this.size) {
			this.bufferEndIdx = this.bufferStartIdx;
			this.bufferStartIdx++;
			if(this.bufferStartIdx > this.bufferMaxIdx) {
				this.bufferStartIdx = 0;
			}
		} else {
			this.bufferEndIdx++;
			this.length++;
		}
		this.buffer[this.bufferEndIdx] = item;
	}
	,get: function(index) {
		if(index < 0 || index > this.bufferMaxIdx) {
			throw haxe_Exception.thrown("[index] " + index + " is out of bound");
		}
		var realIdx = this.bufferStartIdx + index;
		if(realIdx > this.bufferMaxIdx) {
			realIdx -= this.length;
		}
		return this.buffer[realIdx];
	}
	,iterator: function() {
		return new hx_strings_internal__$RingBuffer_RingBufferIterator(this);
	}
	,toArray: function() {
		var arr = [];
		var i = this.iterator();
		while(i.hasNext()) {
			var i1 = i.next();
			arr.push(i1);
		}
		return arr;
	}
	,__class__: hx_strings_internal__$RingBuffer_RingBufferImpl
};
var hx_strings__$CharIterator_NullCharIterator = function() {
	hx_strings_CharIterator.call(this,0);
};
$hxClasses["hx.strings._CharIterator.NullCharIterator"] = hx_strings__$CharIterator_NullCharIterator;
hx_strings__$CharIterator_NullCharIterator.__name__ = true;
hx_strings__$CharIterator_NullCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_NullCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	isEOF: function() {
		return true;
	}
	,__class__: hx_strings__$CharIterator_NullCharIterator
});
var hx_strings__$CharIterator_ArrayCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
	this.charsMaxIndex = chars.length - 1;
};
$hxClasses["hx.strings._CharIterator.ArrayCharIterator"] = hx_strings__$CharIterator_ArrayCharIterator;
hx_strings__$CharIterator_ArrayCharIterator.__name__ = true;
hx_strings__$CharIterator_ArrayCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_ArrayCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,charsMaxIndex: null
	,isEOF: function() {
		return this.index >= this.charsMaxIndex;
	}
	,getChar: function() {
		return this.chars[this.index];
	}
	,__class__: hx_strings__$CharIterator_ArrayCharIterator
});
var hx_strings__$CharIterator_IteratorCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
};
$hxClasses["hx.strings._CharIterator.IteratorCharIterator"] = hx_strings__$CharIterator_IteratorCharIterator;
hx_strings__$CharIterator_IteratorCharIterator.__name__ = true;
hx_strings__$CharIterator_IteratorCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_IteratorCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,isEOF: function() {
		return !this.chars.hasNext();
	}
	,getChar: function() {
		return this.chars.next();
	}
	,__class__: hx_strings__$CharIterator_IteratorCharIterator
});
var hx_strings__$CharIterator_InputCharIterator = function(chars,prevBufferSize) {
	this.nextCharAvailable = null;
	this.nextChar = -1;
	this.currCharIndex = -1;
	this.byteIndex = 0;
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.input = chars;
};
$hxClasses["hx.strings._CharIterator.InputCharIterator"] = hx_strings__$CharIterator_InputCharIterator;
hx_strings__$CharIterator_InputCharIterator.__name__ = true;
hx_strings__$CharIterator_InputCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_InputCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	byteIndex: null
	,input: null
	,currCharIndex: null
	,nextChar: null
	,nextCharAvailable: null
	,isEOF: function() {
		if(this.nextCharAvailable == null) {
			try {
				var byte1 = this.input.readByte();
				this.byteIndex++;
				var tmp;
				if(byte1 <= 127) {
					tmp = byte1;
				} else {
					byte1 &= -129;
					byte1 &= -65;
					var totalBytes = 2;
					var isBit6Set = 1 == (byte1 >> 5 & 1);
					var isBit5Set = false;
					if(isBit6Set) {
						byte1 &= -33;
						++totalBytes;
						isBit5Set = 1 == (byte1 >> 4 & 1);
						if(isBit5Set) {
							byte1 &= -17;
							++totalBytes;
							if(1 == (byte1 >> 3 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
							}
						}
					}
					var result = byte1 << 6 * (totalBytes - 1);
					var byte = this.input.readByte();
					this.byteIndex++;
					if(1 != (byte >> 7 & 1)) {
						throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
					}
					if(1 == (byte >> 6 & 1)) {
						throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
					}
					var byte2 = byte & -129;
					result += byte2 << 6 * (totalBytes - 2);
					if(isBit6Set) {
						var byte = this.input.readByte();
						this.byteIndex++;
						if(1 != (byte >> 7 & 1)) {
							throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
						}
						if(1 == (byte >> 6 & 1)) {
							throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
						}
						var byte3 = byte & -129;
						result += byte3 << 6 * (totalBytes - 3);
						if(isBit5Set) {
							var byte = this.input.readByte();
							this.byteIndex++;
							if(1 != (byte >> 7 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							if(1 == (byte >> 6 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							var byte4 = byte & -129;
							result += byte4 << 6 * (totalBytes - 4);
						}
					}
					if(this.index == 0 && result == 65279) {
						var byte1 = this.input.readByte();
						this.byteIndex++;
						if(byte1 <= 127) {
							tmp = byte1;
						} else {
							byte1 &= -129;
							byte1 &= -65;
							var totalBytes = 2;
							var isBit6Set = 1 == (byte1 >> 5 & 1);
							var isBit5Set = false;
							if(isBit6Set) {
								byte1 &= -33;
								++totalBytes;
								isBit5Set = 1 == (byte1 >> 4 & 1);
								if(isBit5Set) {
									byte1 &= -17;
									++totalBytes;
									if(1 == (byte1 >> 3 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
									}
								}
							}
							var result1 = byte1 << 6 * (totalBytes - 1);
							var byte = this.input.readByte();
							this.byteIndex++;
							if(1 != (byte >> 7 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							if(1 == (byte >> 6 & 1)) {
								throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
							}
							var byte2 = byte & -129;
							result1 += byte2 << 6 * (totalBytes - 2);
							if(isBit6Set) {
								var byte = this.input.readByte();
								this.byteIndex++;
								if(1 != (byte >> 7 & 1)) {
									throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
								}
								if(1 == (byte >> 6 & 1)) {
									throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
								}
								var byte3 = byte & -129;
								result1 += byte3 << 6 * (totalBytes - 3);
								if(isBit5Set) {
									var byte = this.input.readByte();
									this.byteIndex++;
									if(1 != (byte >> 7 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
									}
									if(1 == (byte >> 6 & 1)) {
										throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
									}
									var byte4 = byte & -129;
									result1 += byte4 << 6 * (totalBytes - 4);
								}
							}
							tmp = this.index == 0 && result1 == 65279 ? this.readUtf8Char() : result1;
						}
					} else {
						tmp = result;
					}
				}
				this.nextChar = tmp;
				this.nextCharAvailable = true;
			} catch( _g ) {
				if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
					this.nextCharAvailable = false;
				} else {
					throw _g;
				}
			}
		}
		return this.nextCharAvailable != true;
	}
	,getChar: function() {
		if(this.index != this.currCharIndex) {
			this.currCharIndex = this.index;
			this.nextCharAvailable = null;
			return this.nextChar;
		}
		return this.currChar;
	}
	,readUtf8Char: function() {
		var byte1 = this.input.readByte();
		this.byteIndex++;
		if(byte1 <= 127) {
			return byte1;
		}
		byte1 &= -129;
		byte1 &= -65;
		var totalBytes = 2;
		var isBit6Set = 1 == (byte1 >> 5 & 1);
		var isBit5Set = false;
		if(isBit6Set) {
			byte1 &= -33;
			++totalBytes;
			isBit5Set = 1 == (byte1 >> 4 & 1);
			if(isBit5Set) {
				byte1 &= -17;
				++totalBytes;
				if(1 == (byte1 >> 3 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte1 + "]!");
				}
			}
		}
		var result = byte1 << 6 * (totalBytes - 1);
		var byte = this.input.readByte();
		this.byteIndex++;
		if(1 != (byte >> 7 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		if(1 == (byte >> 6 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		var byte2 = byte & -129;
		result += byte2 << 6 * (totalBytes - 2);
		if(isBit6Set) {
			var byte = this.input.readByte();
			this.byteIndex++;
			if(1 != (byte >> 7 & 1)) {
				throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
			}
			if(1 == (byte >> 6 & 1)) {
				throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
			}
			var byte3 = byte & -129;
			result += byte3 << 6 * (totalBytes - 3);
			if(isBit5Set) {
				var byte = this.input.readByte();
				this.byteIndex++;
				if(1 != (byte >> 7 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
				}
				if(1 == (byte >> 6 & 1)) {
					throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
				}
				var byte4 = byte & -129;
				result += byte4 << 6 * (totalBytes - 4);
			}
		}
		if(this.index == 0 && result == 65279) {
			return this.readUtf8Char();
		}
		return result;
	}
	,readUtf8MultiSequenceByte: function() {
		var byte = this.input.readByte();
		this.byteIndex++;
		if(1 != (byte >> 7 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		if(1 == (byte >> 6 & 1)) {
			throw haxe_Exception.thrown("Valid UTF-8 multi-sequence byte expected at position [" + this.byteIndex + "] but found byte with value [" + byte + "]!");
		}
		return byte & -129;
	}
	,__class__: hx_strings__$CharIterator_InputCharIterator
});
var hx_strings__$CharIterator_StringCharIterator = function(chars,prevBufferSize) {
	hx_strings_CharIterator.call(this,prevBufferSize);
	this.chars = chars;
	this.charsMaxIndex = (chars == null ? 0 : chars.length) - 1;
};
$hxClasses["hx.strings._CharIterator.StringCharIterator"] = hx_strings__$CharIterator_StringCharIterator;
hx_strings__$CharIterator_StringCharIterator.__name__ = true;
hx_strings__$CharIterator_StringCharIterator.__super__ = hx_strings_CharIterator;
hx_strings__$CharIterator_StringCharIterator.prototype = $extend(hx_strings_CharIterator.prototype,{
	chars: null
	,charsMaxIndex: null
	,isEOF: function() {
		return this.index >= this.charsMaxIndex;
	}
	,getChar: function() {
		return HxOverrides.cca(this.chars,this.index);
	}
	,__class__: hx_strings__$CharIterator_StringCharIterator
});
var hx_strings_Pattern = function(pattern,options) {
	this.pattern = pattern;
	this.options = options;
	this.ereg = new EReg(pattern,options);
	this.options += "u";
};
$hxClasses["hx.strings.Pattern"] = hx_strings_Pattern;
hx_strings_Pattern.__name__ = true;
hx_strings_Pattern.compile = function(pattern,options) {
	if(options == null) {
		return new hx_strings_Pattern(pattern,"");
	}
	var _g = options;
	var tmp;
	switch(_g._hx_index) {
	case 0:
		var str = _g.v;
		var str1 = hx_strings_Strings.toLowerCase8(str);
		if(str1 == null || str1.length == 0) {
			tmp = str1;
		} else {
			var _g1 = [];
			var _g2 = 0;
			var _g3 = hx_strings_Strings.toChars(str1);
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				if(v == hx_strings_Strings.charCodeAt8("i",0) || v == hx_strings_Strings.charCodeAt8("m",0) || v == hx_strings_Strings.charCodeAt8("g",0)) {
					_g1.push(v);
				}
			}
			var _this = _g1;
			var result = new Array(_this.length);
			var _g1 = 0;
			var _g2 = _this.length;
			while(_g1 < _g2) {
				var i = _g1++;
				result[i] = String.fromCodePoint(_this[i]);
			}
			tmp = result.join("");
		}
		break;
	case 1:
		var opt = _g.v;
		tmp = Std.string(opt);
		break;
	case 2:
		var arr = _g.v;
		var _g = [];
		var _g1 = 0;
		var _g2 = arr;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v != null) {
				_g.push(v);
			}
		}
		tmp = _g.join("");
		break;
	}
	return new hx_strings_Pattern(pattern,tmp);
};
hx_strings_Pattern.prototype = {
	pattern: null
	,options: null
	,ereg: null
	,matcher: function(str) {
		return new hx_strings__$Pattern_MatcherImpl(this.ereg,this.pattern,this.options,str);
	}
	,replace: function(str,replaceWith) {
		return str.replace(this.ereg.r,replaceWith);
	}
	,remove: function(str) {
		return str.replace(this.ereg.r,"");
	}
	,split: function(str) {
		return this.ereg.split(str);
	}
	,__class__: hx_strings_Pattern
};
var hx_strings_Matcher = function() { };
$hxClasses["hx.strings.Matcher"] = hx_strings_Matcher;
hx_strings_Matcher.__name__ = true;
hx_strings_Matcher.__isInterface__ = true;
hx_strings_Matcher.prototype = {
	iterate: null
	,map: null
	,matched: null
	,matchedPos: null
	,matches: null
	,matchesInRegion: null
	,reset: null
	,substringAfterMatch: null
	,substringBeforeMatch: null
	,__class__: hx_strings_Matcher
};
var hx_strings__$Pattern_MatcherImpl = function(ereg,pattern,options,str) {
	var clone = new EReg(pattern,options);
	this.ereg = clone;
	this.str = str;
};
$hxClasses["hx.strings._Pattern.MatcherImpl"] = hx_strings__$Pattern_MatcherImpl;
hx_strings__$Pattern_MatcherImpl.__name__ = true;
hx_strings__$Pattern_MatcherImpl.__interfaces__ = [hx_strings_Matcher];
hx_strings__$Pattern_MatcherImpl.prototype = {
	ereg: null
	,isMatch: null
	,str: null
	,reset: function(str) {
		this.str = str;
		this.isMatch = null;
		return this;
	}
	,iterate: function(onMatch) {
		var startAt = 0;
		while(this.ereg.matchSub(this.str,startAt)) {
			this.isMatch = true;
			var matchedPos = this.ereg.matchedPos();
			onMatch(this);
			startAt = matchedPos.pos + matchedPos.len;
		}
		this.isMatch = false;
	}
	,map: function(mapper) {
		var _gthis = this;
		return this.ereg.map(this.str,function(ereg) {
			_gthis.isMatch = true;
			return mapper(_gthis);
		});
	}
	,matched: function(n) {
		if(n == null) {
			n = 0;
		}
		if(!this.matches()) {
			throw haxe_Exception.thrown("No string matched");
		}
		var result = this.ereg.matched(n);
		return result;
	}
	,matches: function() {
		if(this.isMatch == null) {
			this.isMatch = this.ereg.match(this.str);
		}
		return this.isMatch;
	}
	,matchesInRegion: function(pos,len) {
		if(len == null) {
			len = -1;
		}
		return this.isMatch = this.ereg.matchSub(this.str,pos,len);
	}
	,matchedPos: function() {
		if(!this.matches()) {
			throw haxe_Exception.thrown("No string matched");
		}
		return this.ereg.matchedPos();
	}
	,substringAfterMatch: function() {
		if(!this.matches()) {
			return "";
		}
		return this.ereg.matchedRight();
	}
	,substringBeforeMatch: function() {
		if(!this.matches()) {
			return "";
		}
		return this.ereg.matchedLeft();
	}
	,_cloneEReg: function(from,pattern,options) {
		var clone = new EReg(pattern,options);
		return clone;
	}
	,__class__: hx_strings__$Pattern_MatcherImpl
};
var hx_strings_StringBuilder = function(initialContent) {
	this.len = 0;
	this.pre = null;
	this.sb = new StringBuf();
	if(initialContent != null) {
		this.add(initialContent);
	}
};
$hxClasses["hx.strings.StringBuilder"] = hx_strings_StringBuilder;
hx_strings_StringBuilder.__name__ = true;
hx_strings_StringBuilder.prototype = {
	sb: null
	,pre: null
	,len: null
	,get_length: function() {
		return this.len;
	}
	,add: function(item) {
		this.sb.b += Std.string(item == null ? "null" : item);
		this.len += item == null ? 0 : item.length;
		return this;
	}
	,addChar: function(ch) {
		if(ch > -1 && ch < 128) {
			this.sb.b += String.fromCodePoint(ch);
		} else {
			var _this = this.sb;
			var x = String.fromCodePoint(ch);
			_this.b += Std.string(x);
		}
		this.len++;
		return this;
	}
	,addAll: function(items) {
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.sb.b += Std.string(item);
			this.len += item == null ? 0 : item.length;
		}
		return this;
	}
	,clear: function() {
		this.pre = null;
		this.sb = new StringBuf();
		this.len = 0;
		return this;
	}
	,isEmpty: function() {
		return this.len == 0;
	}
	,newLine: function() {
		this.sb.b += "\n";
		this.len++;
		return this;
	}
	,insert: function(pos,item) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.add(item);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			this.pre.unshift(item);
			this.len += item == null ? 0 : item.length;
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var pre = this.pre;
			var i = pre.length;
			var _g = 0;
			var _g1 = pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					pre.splice(i + 1,0,item);
					this.len += item == null ? 0 : item.length;
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(pre[i],[pos - pre_len]);
					pre[i] = preSplitted[0];
					pre.splice(i + 1,0,item);
					pre.splice(i + 2,0,preSplitted[1]);
					this.len += item == null ? 0 : item.length;
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			this.add(item);
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		this.sb.b += Std.string(item);
		this.len += item == null ? 0 : item.length;
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,insertChar: function(pos,ch) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.addChar(ch);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			this.pre.unshift(String.fromCodePoint(ch));
			this.len++;
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var pre = this.pre;
			var i = pre.length;
			var _g = 0;
			var _g1 = pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					var x = String.fromCodePoint(ch);
					pre.splice(i + 1,0,x);
					this.len++;
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(pre[i],[pos - pre_len]);
					pre[i] = preSplitted[0];
					var x1 = String.fromCodePoint(ch);
					pre.splice(i + 1,0,x1);
					pre.splice(i + 2,0,preSplitted[1]);
					this.len++;
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			this.addChar(ch);
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		this.addChar(ch);
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,insertAll: function(pos,items) {
		if(pos < 0) {
			throw haxe_Exception.thrown("[pos] must not be negative");
		}
		if(pos > this.len) {
			throw haxe_Exception.thrown("[pos] must not be greater than this.length");
		}
		if(pos == this.len) {
			this.addAll(items);
			return this;
		}
		if(pos == 0) {
			if(this.pre == null) {
				this.pre = [];
			}
			var pre = this.pre;
			var i = items.length;
			while(i-- > 0) {
				var item = items[i];
				pre.unshift(item);
				this.len += item == null ? 0 : item.length;
			}
			return this;
		}
		var pre_len = 0;
		if(this.pre != null) {
			var pre = this.pre;
			var i = pre.length;
			var _g = 0;
			var _g1 = pre.length;
			while(_g < _g1) {
				var i = _g++;
				var str = pre[i];
				var next_pre_len = pre_len + (str == null ? 0 : str.length);
				if(next_pre_len == pos) {
					var j = items.length;
					while(j-- > 0) {
						var item = items[j];
						pre.splice(i + 1,0,item);
						this.len += item == null ? 0 : item.length;
					}
					return this;
				}
				if(next_pre_len > pos) {
					var preSplitted = hx_strings_Strings.splitAt(pre[i],[pos - pre_len]);
					pre[i] = preSplitted[0];
					pre.splice(i + 1,0,preSplitted[1]);
					var j1 = items.length;
					while(j1-- > 0) {
						var item1 = items[j1];
						pre.splice(i + 1,0,item1);
						this.len += item1 == null ? 0 : item1.length;
					}
					return this;
				}
				pre_len = next_pre_len;
			}
		}
		if(this.sb.b.length == 0) {
			var _g = 0;
			while(_g < items.length) {
				var item = items[_g];
				++_g;
				this.add(item);
			}
			return this;
		}
		var sbSplitted = hx_strings_Strings.splitAt(this.sb.b,[pos - pre_len]);
		this.sb = new StringBuf();
		this.sb.b += Std.string(sbSplitted[0]);
		var _g = 0;
		while(_g < items.length) {
			var item = items[_g];
			++_g;
			this.sb.b += Std.string(item);
			this.len += item == null ? 0 : item.length;
		}
		this.sb.b += Std.string(sbSplitted[1]);
		return this;
	}
	,asOutput: function() {
		return new hx_strings__$StringBuilder_OutputWrapper(this);
	}
	,toString: function() {
		if(this.pre == null) {
			return this.sb.b;
		}
		var str = this.pre.join("") + this.sb.b;
		this.clear();
		this.add(str);
		return str;
	}
	,__class__: hx_strings_StringBuilder
	,__properties__: {get_length:"get_length"}
};
var hx_strings__$StringBuilder_OutputWrapper = function(sb) {
	this.sb = sb;
};
$hxClasses["hx.strings._StringBuilder.OutputWrapper"] = hx_strings__$StringBuilder_OutputWrapper;
hx_strings__$StringBuilder_OutputWrapper.__name__ = true;
hx_strings__$StringBuilder_OutputWrapper.__super__ = haxe_io_Output;
hx_strings__$StringBuilder_OutputWrapper.prototype = $extend(haxe_io_Output.prototype,{
	sb: null
	,bo: null
	,flush: function() {
		if(this.bo != null && this.bo.b.pos > 0) {
			this.sb.add(this.bo.getBytes().toString());
		}
	}
	,writeByte: function(c) {
		if(this.bo == null) {
			this.bo = new haxe_io_BytesOutput();
		}
		this.bo.writeByte(c);
	}
	,writeString: function(str,encoding) {
		this.flush();
		this.sb.add(str);
	}
	,__class__: hx_strings__$StringBuilder_OutputWrapper
});
var hx_strings_internal_OS = function() { };
$hxClasses["hx.strings.internal.OS"] = hx_strings_internal_OS;
hx_strings_internal_OS.__name__ = true;
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var hx_strings_internal__$Either3__$Either3 = $hxEnums["hx.strings.internal._Either3._Either3"] = { __ename__:true,__constructs__:null
	,a: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="a",$_.__params__ = ["v"],$_)
	,b: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="b",$_.__params__ = ["v"],$_)
	,c: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hx.strings.internal._Either3._Either3",toString:$estr}; },$_._hx_name="c",$_.__params__ = ["v"],$_)
};
hx_strings_internal__$Either3__$Either3.__constructs__ = [hx_strings_internal__$Either3__$Either3.a,hx_strings_internal__$Either3__$Either3.b,hx_strings_internal__$Either3__$Either3.c];
var hx_strings_Strings = function() { };
$hxClasses["hx.strings.Strings"] = hx_strings_Strings;
hx_strings_Strings.__name__ = true;
hx_strings_Strings._length = function(str) {
	return str.length;
};
hx_strings_Strings._getNotFoundDefault = function(str,notFoundDefault) {
	switch(notFoundDefault) {
	case 1:
		return null;
	case 2:
		return "";
	case 3:
		return str;
	}
};
hx_strings_Strings._charCodeAt8Unsafe = function(str,pos) {
	return HxOverrides.cca(str,pos);
};
hx_strings_Strings._splitAsciiWordsUnsafe = function(str) {
	var words = [];
	var currentWord = new hx_strings_StringBuilder();
	var chars = hx_strings_Strings.toChars(str);
	var len = chars.length;
	var lastIndex = len - 1;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		var ch = chars[i];
		if(ch > 64 && ch < 91 || ch > 96 && ch < 123) {
			var chNext = i < lastIndex ? chars[i + 1] : -1;
			currentWord.addChar(ch);
			if(chNext > 47 && chNext < 58) {
				words.push(currentWord.toString());
				currentWord.clear();
			} else if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(ch)) {
				if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chNext) && chars.length > i + 2) {
					if(!hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chars[i + 2])) {
						words.push(currentWord.toString());
						currentWord.clear();
					}
				}
			} else if(hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h.hasOwnProperty(chNext)) {
				words.push(currentWord.toString());
				currentWord.clear();
			}
		} else if(ch > 47 && ch < 58) {
			currentWord.addChar(ch);
			var chNext1 = i < lastIndex ? chars[i + 1] : -1;
			if(!(chNext1 > 47 && chNext1 < 58)) {
				words.push(currentWord.toString());
				currentWord.clear();
			}
		} else if(currentWord.len > 0) {
			words.push(currentWord.toString());
			currentWord.clear();
		}
	}
	if(currentWord.len > 0) {
		words.push(currentWord.toString());
	}
	return words;
};
hx_strings_Strings.ansiToHtml = function(str,renderMethod,initialState) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(renderMethod == null) {
		renderMethod = hx_strings_AnsiToHtmlRenderMethod.StyleAttributes;
	}
	var styleOrClassAttribute;
	switch(renderMethod._hx_index) {
	case 0:
		styleOrClassAttribute = "style";
		break;
	case 1:
		styleOrClassAttribute = "class";
		break;
	case 2:
		var cb = renderMethod.func;
		styleOrClassAttribute = "class";
		break;
	}
	var sb = new hx_strings_StringBuilder();
	if(initialState != null && (initialState.fgcolor != null || initialState.bgcolor != null || initialState.bold || initialState.underline || initialState.blink)) {
		sb.add("<span " + styleOrClassAttribute + "=\"").add(initialState.toCSS(renderMethod)).add("\">");
	}
	var effectiveState = new hx_strings_AnsiState(initialState);
	var strLenMinus1 = (str == null ? 0 : str.length) - 1;
	var i = -1;
	var lookAhead = new hx_strings_StringBuilder();
	while(i < strLenMinus1) {
		++i;
		var ch = HxOverrides.cca(str,i);
		if(ch == 27 && i < strLenMinus1 && HxOverrides.cca(str,i + 1) == 91) {
			lookAhead.clear();
			var currentState = new hx_strings_AnsiState(effectiveState);
			var currentGraphicModeParam = 0;
			var isValidEscapeSequence = false;
			++i;
			_hx_loop2: while(i < strLenMinus1) {
				++i;
				var ch2 = HxOverrides.cca(str,i);
				lookAhead.addChar(ch2);
				switch(ch2) {
				case 48:
					currentGraphicModeParam *= 10;
					break;
				case 49:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 1;
					break;
				case 50:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 2;
					break;
				case 51:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 3;
					break;
				case 52:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 4;
					break;
				case 53:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 5;
					break;
				case 54:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 6;
					break;
				case 55:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 7;
					break;
				case 56:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 8;
					break;
				case 57:
					currentGraphicModeParam = currentGraphicModeParam * 10 + 9;
					break;
				case 59:
					currentState.setGraphicModeParameter(currentGraphicModeParam);
					currentGraphicModeParam = 0;
					break;
				case 109:
					currentState.setGraphicModeParameter(currentGraphicModeParam);
					if(effectiveState.fgcolor != null || effectiveState.bgcolor != null || effectiveState.bold || effectiveState.underline || effectiveState.blink) {
						sb.add("</span>");
					}
					if(currentState.fgcolor != null || currentState.bgcolor != null || currentState.bold || currentState.underline || currentState.blink) {
						sb.add("<span " + styleOrClassAttribute + "=\"").add(currentState.toCSS(renderMethod)).add("\">");
					}
					effectiveState = currentState;
					isValidEscapeSequence = true;
					break _hx_loop2;
				default:
					break _hx_loop2;
				}
			}
			if(!isValidEscapeSequence) {
				sb.addChar(27).add("[").add(Std.string(lookAhead));
			}
		} else {
			sb.addChar(ch);
		}
	}
	if(effectiveState.fgcolor != null || effectiveState.bgcolor != null || effectiveState.bold || effectiveState.underline || effectiveState.blink) {
		sb.add("</span>");
	}
	return sb.toString();
};
hx_strings_Strings.appendIfMissing = function(str,suffix) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return Std.string(str) + Std.string(suffix);
	}
	if(hx_strings_Strings.endsWith(str,suffix)) {
		return str;
	}
	return Std.string(str) + Std.string(suffix);
};
hx_strings_Strings.base64Encode = function(plain) {
	if(plain == null) {
		return null;
	}
	return haxe_crypto_Base64.encode(plain == null ? null : haxe_io_Bytes.ofString(plain));
};
hx_strings_Strings.base64Decode = function(encoded) {
	if(encoded == null) {
		return null;
	}
	return haxe_crypto_Base64.decode(encoded).toString();
};
hx_strings_Strings.charAt8 = function(str,pos,resultIfOutOfBound) {
	if(resultIfOutOfBound == null) {
		resultIfOutOfBound = "";
	}
	if(str == null || str.length == 0 || pos < 0 || pos >= (str == null ? 0 : str.length)) {
		return resultIfOutOfBound;
	}
	return str.charAt(pos);
};
hx_strings_Strings.charCodeAt8 = function(str,pos,resultIfOutOfBound) {
	if(resultIfOutOfBound == null) {
		resultIfOutOfBound = -1;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0 || pos < 0 || pos >= strLen) {
		return resultIfOutOfBound;
	}
	return HxOverrides.cca(str,pos);
};
hx_strings_Strings.compact = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var needWhiteSpace = false;
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(str);
	while(_g < _g1.length) {
		var char = _g1[_g];
		++_g;
		if(char > 8 && char < 14 || char == 32) {
			if(sb.len != 0) {
				needWhiteSpace = true;
			}
			continue;
		} else if(needWhiteSpace) {
			sb.addChar(32);
			needWhiteSpace = false;
		}
		sb.addChar(char);
	}
	return sb.toString();
};
hx_strings_Strings.contains = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == "") {
		return true;
	}
	return searchIn.indexOf(searchFor) > -1;
};
hx_strings_Strings.containsOnly = function(searchIn,allowedChars) {
	if(searchIn == null || searchIn.length == 0) {
		return true;
	}
	if(allowedChars == null) {
		return false;
	}
	var allowedCharsArray;
	var _g = allowedChars;
	switch(_g._hx_index) {
	case 0:
		var str = _g.v;
		allowedCharsArray = hx_strings_Strings.toChars(str);
		break;
	case 1:
		var chars = _g.v;
		allowedCharsArray = chars;
		break;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(searchIn);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(allowedCharsArray.indexOf(ch) < 0) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAll = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(!(searchIn == null || candidate == null ? false : candidate == "" ? true : searchIn.indexOf(candidate) > -1)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAllIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = searchIn.toLowerCase();
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		var searchFor1 = candidate.toLowerCase();
		if(!(searchIn == null || searchFor1 == null ? false : searchFor1 == "" ? true : searchIn.indexOf(searchFor1) > -1)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.containsAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(searchIn == null || candidate == null ? false : candidate == "" ? true : searchIn.indexOf(candidate) > -1) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.containsAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = searchIn.toLowerCase();
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		var searchFor1 = candidate.toLowerCase();
		if(searchIn == null || searchFor1 == null ? false : searchFor1 == "" ? true : searchIn.indexOf(searchFor1) > -1) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.containsNone = function(searchIn,searchFor) {
	return !hx_strings_Strings.containsAny(searchIn,searchFor);
};
hx_strings_Strings.containsNoneIgnoreCase = function(searchIn,searchFor) {
	return !hx_strings_Strings.containsAnyIgnoreCase(searchIn,searchFor);
};
hx_strings_Strings.containsWhitespaces = function(searchIn) {
	if(searchIn == null) {
		return false;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(searchIn);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(ch > 8 && ch < 14 || ch == 32) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.countMatches = function(searchIn,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0) || startAt >= searchIn.length) {
		return 0;
	}
	if(startAt < 0) {
		startAt = 0;
	}
	var count = 0;
	var foundAt = startAt > -1 ? startAt - 1 : 0;
	while(true) {
		foundAt = searchIn.indexOf(searchFor,foundAt + 1);
		if(!(foundAt > -1)) {
			break;
		}
		++count;
	}
	return count;
};
hx_strings_Strings.countMatchesIgnoreCase = function(searchIn,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0) || startAt >= searchIn.length) {
		return 0;
	}
	if(startAt < 0) {
		startAt = 0;
	}
	searchIn = searchIn.toLowerCase();
	searchFor = searchFor.toLowerCase();
	var count = 0;
	var foundAt = startAt > -1 ? startAt - 1 : 0;
	while(true) {
		foundAt = searchIn.indexOf(searchFor,foundAt + 1);
		if(!(foundAt > -1)) {
			break;
		}
		++count;
	}
	return count;
};
hx_strings_Strings.compare = function(str,other) {
	if(str == null) {
		if(other == null) {
			return 0;
		} else {
			return -1;
		}
	}
	if(other == null) {
		if(str == null) {
			return 0;
		} else {
			return 1;
		}
	}
	if(str > other) {
		return 1;
	} else if(str == other) {
		return 0;
	} else {
		return -1;
	}
};
hx_strings_Strings.compareIgnoreCase = function(str,other) {
	if(str == null) {
		if(other == null) {
			return 0;
		} else {
			return -1;
		}
	}
	if(other == null) {
		if(str == null) {
			return 0;
		} else {
			return 1;
		}
	}
	var str1 = hx_strings_Strings.toLowerCase8(str);
	var other1 = hx_strings_Strings.toLowerCase8(other);
	if(str1 > other1) {
		return 1;
	} else if(str1 == other1) {
		return 0;
	} else {
		return -1;
	}
};
hx_strings_Strings.diff = function(left,right) {
	var diff = new hx_strings_StringDiff();
	diff.at = hx_strings_Strings.diffAt(left,right);
	diff.left = hx_strings_Strings.substr8(left,diff.at);
	diff.right = hx_strings_Strings.substr8(right,diff.at);
	return diff;
};
hx_strings_Strings.diffAt = function(str,other) {
	if(str == other) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var otherLen = other == null ? 0 : other.length;
	if(strLen == 0 || otherLen == 0) {
		return 0;
	}
	var checkLen = strLen > otherLen ? otherLen : strLen;
	var _g = 0;
	var _g1 = checkLen;
	while(_g < _g1) {
		var i = _g++;
		if(HxOverrides.cca(str,i) != HxOverrides.cca(other,i)) {
			return i;
		}
	}
	return checkLen;
};
hx_strings_Strings.ellipsizeLeft = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	return ellipsis + Std.string(hx_strings_Strings.right(str,maxLength - ellipsisLen));
};
hx_strings_Strings.ellipsizeMiddle = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	var maxStrLen = maxLength - ellipsisLen;
	var leftLen = Math.round(maxStrLen / 2);
	var rightLen = maxStrLen - leftLen;
	return Std.string((str == null ? 0 : str.length) <= leftLen ? str : hx_strings_Strings.substring8(str,0,leftLen)) + ellipsis + Std.string(hx_strings_Strings.right(str,rightLen));
};
hx_strings_Strings.ellipsizeRight = function(str,maxLength,ellipsis) {
	if(ellipsis == null) {
		ellipsis = "...";
	}
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	}
	var ellipsisLen = ellipsis == null ? 0 : ellipsis.length;
	if(maxLength < ellipsisLen) {
		throw haxe_Exception.thrown("[maxLength] must not be smaller than " + ellipsisLen);
	}
	var len = maxLength - ellipsisLen;
	return Std.string((str == null ? 0 : str.length) <= len ? str : hx_strings_Strings.substring8(str,0,len)) + ellipsis;
};
hx_strings_Strings.endsWith = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	return StringTools.endsWith(searchIn,searchFor);
};
hx_strings_Strings.endsWithAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.endsWith(searchIn,candidate)) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.endsWithAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = hx_strings_Strings.toLowerCase8(searchIn);
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.endsWith(searchIn,hx_strings_Strings.toLowerCase8(candidate))) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.endsWithIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	return hx_strings_Strings.endsWith(searchIn.toLowerCase(),searchFor.toLowerCase());
};
hx_strings_Strings.equals = function(str,other) {
	return str == other;
};
hx_strings_Strings.equalsIgnoreCase = function(str,other) {
	return hx_strings_Strings.toLowerCase8(str) == hx_strings_Strings.toLowerCase8(other);
};
hx_strings_Strings.filter = function(str,filter,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hx_strings_Strings.split8(str,[separator]);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(filter(v)) {
			_g.push(v);
		}
	}
	return _g.join(separator);
};
hx_strings_Strings.filterChars = function(str,filter) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hx_strings_Strings.toChars(str);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(filter(v)) {
			_g.push(v);
		}
	}
	var _this = _g;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = String.fromCodePoint(_this[i]);
	}
	return result.join("");
};
hx_strings_Strings.getFuzzyDistance = function(left,right) {
	if(left == null || left.length == 0 || (right == null || right.length == 0)) {
		return 0;
	}
	left = hx_strings_Strings.toLowerCase8(left);
	right = hx_strings_Strings.toLowerCase8(right);
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var leftLastMatchAt = -100;
	var rightLastMatchAt = -100;
	var score = 0;
	var _g = 0;
	var _g1 = leftChars.length;
	while(_g < _g1) {
		var leftIdx = _g++;
		var leftChar = leftChars[leftIdx];
		var _g2 = rightLastMatchAt > -1 ? rightLastMatchAt + 1 : 0;
		var _g3 = rightChars.length;
		while(_g2 < _g3) {
			var rightIdx = _g2++;
			var rightChar = rightChars[rightIdx];
			if(leftChar == rightChar) {
				++score;
				if(leftLastMatchAt == leftIdx - 1 && rightLastMatchAt == rightIdx - 1) {
					score += 2;
				}
				leftLastMatchAt = leftIdx;
				rightLastMatchAt = rightIdx;
				break;
			}
		}
	}
	return score;
};
hx_strings_Strings.getLevenshteinDistance = function(left,right) {
	var leftLen = left == null ? 0 : left.length;
	var rightLen = right == null ? 0 : right.length;
	if(leftLen == 0) {
		return rightLen;
	}
	if(rightLen == 0) {
		return leftLen;
	}
	if(leftLen > rightLen) {
		var tmp = left;
		left = right;
		right = tmp;
		var tmpLen = leftLen;
		leftLen = rightLen;
		rightLen = tmpLen;
	}
	var prevCosts = [];
	var costs = [];
	var _g = 0;
	var _g1 = leftLen + 1;
	while(_g < _g1) {
		var leftIdx = _g++;
		prevCosts.push(leftIdx);
		costs.push(0);
	}
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var min = function(a,b) {
		if(a > b) {
			return b;
		} else {
			return a;
		}
	};
	var _g = 1;
	var _g1 = rightLen + 1;
	while(_g < _g1) {
		var rightIdx = _g++;
		var rightChar = rightChars[rightIdx - 1];
		costs[0] = rightIdx;
		var _g2 = 1;
		var _g3 = leftLen + 1;
		while(_g2 < _g3) {
			var leftIdx = _g2++;
			var leftIdxMinus1 = leftIdx - 1;
			var cost = leftChars[leftIdxMinus1] == rightChar ? 0 : 1;
			costs[leftIdx] = min(min(costs[leftIdxMinus1] + 1,prevCosts[leftIdx] + 1),prevCosts[leftIdxMinus1] + cost);
		}
		var tmp = prevCosts;
		prevCosts = costs;
		costs = tmp;
	}
	return prevCosts[leftLen];
};
hx_strings_Strings.getLongestCommonSubstring = function(left,right) {
	if(left == null || right == null) {
		return null;
	}
	var leftLen = left == null ? 0 : left.length;
	var rightLen = right == null ? 0 : right.length;
	if(leftLen == 0 || rightLen == 0) {
		return "";
	}
	var leftChars = hx_strings_Strings.toChars(left);
	var rightChars = hx_strings_Strings.toChars(right);
	var leftSubStartAt = 0;
	var leftSubLen = 0;
	var _g = 0;
	var _g1 = leftLen;
	while(_g < _g1) {
		var leftIdx = _g++;
		var _g2 = 0;
		var _g3 = rightLen;
		while(_g2 < _g3) {
			var rightIdx = _g2++;
			var currLen = 0;
			while(leftChars[leftIdx + currLen] == rightChars[rightIdx + currLen]) {
				++currLen;
				if(leftIdx + currLen >= leftLen || rightIdx + currLen >= rightLen) {
					break;
				}
			}
			if(currLen > leftSubLen) {
				leftSubLen = currLen;
				leftSubStartAt = leftIdx;
			}
		}
	}
	return hx_strings_Strings.substr8(left,leftSubStartAt,leftSubLen);
};
hx_strings_Strings.hashCode = function(str,algo) {
	if(str == null || str.length == 0) {
		return 0;
	}
	if(algo == null) {
		algo = hx_strings_HashCodeAlgorithm.PLATFORM_SPECIFIC;
	}
	if(algo == null) {
		return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
	} else {
		switch(algo._hx_index) {
		case 1:
			return haxe_crypto_Adler32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		case 2:
			return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		case 3:
			var hc = 5381;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = ((hc << 5) + hc | 0) ^ ch;
			}
			return hc;
		case 4:
			var hc = 0;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = ((hc << 5) - hc | 0) + ch | 0;
			}
			return hc;
		case 5:
			var hc = 0;
			var _g = 0;
			var _g1 = hx_strings_Strings.toChars(str);
			while(_g < _g1.length) {
				var ch = _g1[_g];
				++_g;
				hc = (((hc << 6) + (hc << 16) | 0) - hc | 0) + ch | 0;
			}
			return hc;
		default:
			return haxe_crypto_Crc32.make(str == null ? null : haxe_io_Bytes.ofString(str));
		}
	}
};
hx_strings_Strings.htmlDecode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings.REGEX_HTML_UNESCAPE;
	return new hx_strings__$Pattern_MatcherImpl(_this.ereg,_this.pattern,_this.options,str).map(function(m) {
		var match = m.matched();
		switch(match) {
		case "&amp;":
			return "&";
		case "&apos;":
			return "'";
		case "&gt;":
			return ">";
		case "&lt;":
			return "<";
		case "&nbsp;":
			return " ";
		case "&quot;":
			return "\"";
		default:
			var number = Std.parseInt(hx_strings_Strings.substr8(match,2,(match == null ? 0 : match.length) - 3));
			if(number == null) {
				throw haxe_Exception.thrown("Invalid HTML value " + match);
			}
			var this1 = number;
			return String.fromCodePoint(this1);
		}
	});
};
hx_strings_Strings.htmlEncode = function(str,escapeQuotes) {
	if(escapeQuotes == null) {
		escapeQuotes = false;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var isFirstSpace = true;
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = HxOverrides.cca(str,i);
		switch(ch) {
		case 32:
			if(isFirstSpace) {
				sb.add(" ");
				isFirstSpace = false;
			} else {
				sb.add("&nbsp;");
			}
			break;
		case 34:
			sb.add(escapeQuotes ? "&quot;" : "\"");
			break;
		case 38:
			sb.add("&amp;");
			break;
		case 39:
			sb.add(escapeQuotes ? "&#039;" : "'");
			break;
		case 60:
			sb.add("&lt;");
			break;
		case 62:
			sb.add("&gt;");
			break;
		default:
			if(ch > 127) {
				sb.add("&#").add(Std.string(ch)).add(";");
			} else {
				sb.addChar(ch);
			}
		}
		if(ch != 32) {
			isFirstSpace = true;
		}
	}
	return sb.toString();
};
hx_strings_Strings.insertAt = function(str,pos,insertion) {
	if(str == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(pos < 0) {
		pos = strLen + pos;
	}
	if(pos < 0 || pos > strLen) {
		throw haxe_Exception.thrown("Absolute value of [pos] must be <= str.length");
	}
	if(insertion == null || insertion.length == 0) {
		return str;
	}
	return Std.string(hx_strings_Strings.substring8(str,0,pos)) + insertion + Std.string(hx_strings_Strings.substring8(str,pos));
};
hx_strings_Strings.ifBlank = function(str,fallback) {
	if(str == null ? true : StringTools.trim(str).length == 0) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.ifEmpty = function(str,fallback) {
	if(str == null || str.length == 0) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.ifNull = function(str,fallback) {
	if(str == null) {
		return fallback;
	} else {
		return str;
	}
};
hx_strings_Strings.indentLines = function(str,indentWith) {
	if(str == null) {
		return null;
	}
	if(str.length == 0 || (indentWith == null || indentWith.length == 0)) {
		return str;
	}
	var isFirstLine = true;
	var sb = new hx_strings_StringBuilder();
	var _g = 0;
	var _g1 = hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	while(_g < _g1.length) {
		var line = _g1[_g];
		++_g;
		if(isFirstLine) {
			isFirstLine = false;
		} else {
			sb.newLine();
		}
		sb.add(indentWith);
		sb.add(line);
	}
	return sb.toString();
};
hx_strings_Strings.indexOf8 = function(str,searchFor,startAt) {
	if(startAt == null) {
		startAt = 0;
	}
	if(str == null || searchFor == null) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var searchForLen = searchFor == null ? 0 : searchFor.length;
	if(startAt < 0) {
		startAt = 0;
	}
	if(searchForLen == 0) {
		if(startAt == 0) {
			return 0;
		}
		if(startAt > 0 && startAt < strLen) {
			return startAt;
		}
		return strLen;
	}
	if(startAt >= strLen) {
		return -1;
	}
	return str.indexOf(searchFor,startAt);
};
hx_strings_Strings.isBlank = function(str) {
	if(str == null) {
		return true;
	} else {
		return StringTools.trim(str).length == 0;
	}
};
hx_strings_Strings.isDigits = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = HxOverrides.cca(str,i);
		if(!(this1 > 47 && this1 < 58)) {
			return false;
		}
	}
	return true;
};
hx_strings_Strings.isEmpty = function(str) {
	if(str != null) {
		return str.length == 0;
	} else {
		return true;
	}
};
hx_strings_Strings.isNotBlank = function(str) {
	if(str != null) {
		return StringTools.trim(str).length > 0;
	} else {
		return false;
	}
};
hx_strings_Strings.isNotEmpty = function(str) {
	if(str != null) {
		return str.length > 0;
	} else {
		return false;
	}
};
hx_strings_Strings.isLowerCase = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	return str == hx_strings_Strings.toLowerCase8(str);
};
hx_strings_Strings.isUpperCase = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	return str == hx_strings_Strings.toUpperCase8(str);
};
hx_strings_Strings.iterate = function(str,callback,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null || str.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = hx_strings_Strings.split8(str,[separator]);
	while(_g < _g1.length) {
		var sub = _g1[_g];
		++_g;
		callback(sub);
	}
};
hx_strings_Strings.iterateChars = function(str,callback) {
	if(str == null || str.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		callback(HxOverrides.cca(str,i));
	}
};
hx_strings_Strings.lastIndexOf8 = function(str,searchFor,startAt) {
	if(str == null || searchFor == null) {
		return -1;
	}
	var strLen = str == null ? 0 : str.length;
	var searchForLen = searchFor == null ? 0 : searchFor.length;
	if(startAt == null) {
		startAt = strLen;
	}
	if(searchForLen == 0) {
		if(startAt < 0) {
			return 0;
		}
		if(startAt > strLen) {
			return strLen;
		}
		return startAt;
	}
	if(startAt < 0) {
		return -1;
	} else if(startAt >= strLen) {
		startAt = strLen - 1;
	}
	var strNeedsUTF8Workaround = str.length != strLen;
	var searchForNeedsUTF8Workaround = searchFor.length != searchForLen;
	if(!strNeedsUTF8Workaround && !searchForNeedsUTF8Workaround) {
		return str.lastIndexOf(searchFor,startAt);
	}
	if(searchForNeedsUTF8Workaround && !strNeedsUTF8Workaround) {
		return -1;
	}
	var searchForChars = hx_strings_Strings.toChars(searchFor);
	startAt += searchForLen - 1;
	var searchForPosToCheck = searchForLen - 1;
	var strPos = strLen;
	while(strPos-- > 0) {
		if(strPos > startAt) {
			continue;
		}
		var strCh = HxOverrides.cca(str,strPos);
		if(strCh == searchForChars[searchForPosToCheck]) {
			if(searchForPosToCheck == 0) {
				return strPos;
			}
			--searchForPosToCheck;
		} else {
			searchForPosToCheck = searchForLen - 1;
		}
	}
	return -1;
};
hx_strings_Strings.length8 = function(str) {
	if(str == null) {
		return 0;
	}
	return str.length;
};
hx_strings_Strings.left = function(str,len) {
	if((str == null ? 0 : str.length) <= len) {
		return str;
	}
	return hx_strings_Strings.substring8(str,0,len);
};
hx_strings_Strings.lpad = function(str,targetLength,padStr,canOverflow) {
	if(canOverflow == null) {
		canOverflow = true;
	}
	if(padStr == null) {
		padStr = " ";
	}
	var strLen = str == null ? 0 : str.length;
	if(str == null || strLen > targetLength) {
		return str;
	}
	if(padStr == null || padStr.length == 0) {
		padStr = " ";
	}
	var sb = [str];
	var padLen = padStr == null ? 0 : padStr.length;
	while(strLen < targetLength) {
		sb.unshift(padStr);
		strLen += padLen;
	}
	if(canOverflow) {
		return sb.join("");
	}
	return hx_strings_Strings.right(sb.join(""),targetLength);
};
hx_strings_Strings.map = function(str,mapper,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null) {
		return null;
	}
	if(separator == null) {
		throw haxe_Exception.thrown("[separator] must not be null");
	}
	var _this = hx_strings_Strings.split8(str,[separator]);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = mapper(_this[i]);
	}
	return result;
};
hx_strings_Strings.prependIfMissing = function(str,suffix) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return suffix + Std.string(str);
	}
	if(hx_strings_Strings.startsWith(str,suffix)) {
		return str;
	}
	return suffix + Std.string(str);
};
hx_strings_Strings.quoteDouble = function(str) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return "\"\"";
	}
	if(!(str == null ? false : str.indexOf("\"") > -1)) {
		return "\"" + Std.string(str) + "\"";
	}
	return "\"" + Std.string(hx_strings_Strings.replaceAll(str,"\"","\\\"")) + "\"";
};
hx_strings_Strings.quoteSingle = function(str) {
	if(str == null) {
		return null;
	}
	if(str.length == 0) {
		return "''";
	}
	if(!(str == null ? false : str.indexOf("'") > -1)) {
		return "'" + Std.string(str) + "'";
	}
	return "'" + Std.string(hx_strings_Strings.replaceAll(str,"'","\\'")) + "'";
};
hx_strings_Strings.removeAfter = function(str,searchFor) {
	return hx_strings_Strings.substringBefore(str,searchFor);
};
hx_strings_Strings.removeAfterLast = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeLast(str,searchFor);
};
hx_strings_Strings.removeAfterIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAfterLastIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringBeforeLastIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAt = function(str,pos,length) {
	if(str == null || str.length == 0 || length < 1) {
		return str;
	}
	var strLen = str == null ? 0 : str.length;
	if(pos < 0) {
		pos = strLen + pos;
	}
	if(pos < 0) {
		throw haxe_Exception.thrown("[pos] must be smaller than -1 * str.length");
	}
	if(pos + length >= strLen) {
		return hx_strings_Strings.substring8(str,0,pos);
	}
	return Std.string(hx_strings_Strings.substring8(str,0,pos)) + Std.string(hx_strings_Strings.substring8(str,pos + length));
};
hx_strings_Strings.removeBefore = function(str,searchFor) {
	return hx_strings_Strings.substringAfter(str,searchFor);
};
hx_strings_Strings.removeBeforeLast = function(str,searchFor) {
	return hx_strings_Strings.substringAfterLast(str,searchFor);
};
hx_strings_Strings.removeBeforeIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringAfterIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeBeforeLastIgnoreCase = function(str,searchFor) {
	return hx_strings_Strings.substringAfterLastIgnoreCase(str,searchFor);
};
hx_strings_Strings.removeAll = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceAll(searchIn,searchFor,"");
};
hx_strings_Strings.removeFirst = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceFirst(searchIn,searchFor,"");
};
hx_strings_Strings.removeFirstIgnoreCase = function(searchIn,searchFor) {
	return hx_strings_Strings.replaceFirstIgnoreCase(searchIn,searchFor,"");
};
hx_strings_Strings.removeAnsi = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return str.replace(hx_strings_Strings.REGEX_ANSI_ESC.ereg.r,"");
};
hx_strings_Strings.removeLeading = function(searchIn,searchFor) {
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0)) {
		return searchIn;
	}
	while(hx_strings_Strings.startsWith(searchIn,searchFor)) searchIn = searchIn.substring(searchFor.length,searchIn.length);
	return searchIn;
};
hx_strings_Strings.removeTags = function(xml) {
	if(xml == null || xml.length == 0) {
		return xml;
	}
	return xml.replace(hx_strings_Strings.REGEX_REMOVE_XML_TAGS.ereg.r,"");
};
hx_strings_Strings.removeTrailing = function(searchIn,searchFor) {
	if(searchIn == null || searchIn.length == 0 || (searchFor == null || searchFor.length == 0)) {
		return searchIn;
	}
	while(hx_strings_Strings.endsWith(searchIn,searchFor)) searchIn = searchIn.substring(0,searchIn.length - searchFor.length);
	return searchIn;
};
hx_strings_Strings.repeat = function(str,count,separator) {
	if(separator == null) {
		separator = "";
	}
	if(str == null) {
		return null;
	}
	if(count < 1) {
		return "";
	}
	if(count == 1) {
		return str;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = count;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(str);
	}
	return _g.join(separator);
};
hx_strings_Strings.replaceAll = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	return StringTools.replace(searchIn,searchFor,replaceWith);
};
hx_strings_Strings.replaceFirst = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	var foundAt;
	if(searchFor.length == 0) {
		if((searchIn == null ? 0 : searchIn.length) > 1) {
			foundAt = 1;
		} else {
			return searchIn;
		}
	} else {
		foundAt = hx_strings_Strings.indexOf8(searchIn,searchFor);
	}
	return Std.string(hx_strings_Strings.substr8(searchIn,0,foundAt)) + replaceWith + Std.string(hx_strings_Strings.substr8(searchIn,foundAt + (searchFor == null ? 0 : searchFor.length)));
};
hx_strings_Strings.replaceFirstIgnoreCase = function(searchIn,searchFor,replaceWith) {
	if(searchIn == null || (searchIn == null || searchIn.length == 0) || searchFor == null) {
		return searchIn;
	}
	if(replaceWith == null) {
		replaceWith = "null";
	}
	searchFor = searchFor.toLowerCase();
	var foundAt;
	if(searchFor.length == 0) {
		if((searchIn == null ? 0 : searchIn.length) > 1) {
			foundAt = 1;
		} else {
			return searchIn;
		}
	} else {
		foundAt = hx_strings_Strings.indexOf8(searchIn.toLowerCase(),searchFor);
	}
	return Std.string(hx_strings_Strings.substr8(searchIn,0,foundAt)) + replaceWith + Std.string(hx_strings_Strings.substr8(searchIn,foundAt + (searchFor == null ? 0 : searchFor.length)));
};
hx_strings_Strings.reverse = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var chars = hx_strings_Strings.split8(str,[""]);
	chars.reverse();
	return chars.join("");
};
hx_strings_Strings.right = function(str,len) {
	if(str == null || str.length == 0) {
		return str;
	}
	return hx_strings_Strings.substring8(str,(str == null ? 0 : str.length) - len);
};
hx_strings_Strings.rpad = function(str,targetLength,padStr,canOverflow) {
	if(canOverflow == null) {
		canOverflow = true;
	}
	if(padStr == null) {
		padStr = " ";
	}
	var strLen = str == null ? 0 : str.length;
	if(str == null || strLen > targetLength) {
		return str;
	}
	if(padStr == null || padStr.length == 0) {
		padStr = " ";
	}
	var padLen = padStr == null ? 0 : padStr.length;
	var sb = new hx_strings_StringBuilder(str);
	while(strLen < targetLength) {
		sb.add(padStr);
		strLen += padLen;
	}
	if(canOverflow) {
		return sb.toString();
	}
	var str = sb.toString();
	return (str == null ? 0 : str.length) <= targetLength ? str : hx_strings_Strings.substring8(str,0,targetLength);
};
hx_strings_Strings.split8 = function(str,separator,maxParts) {
	if(maxParts == null) {
		maxParts = 0;
	}
	if(str == null || separator == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [];
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = separator;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v != null) {
			_g.push(v);
		}
	}
	var separators = _g;
	if(separators.length == 0) {
		return null;
	}
	if(maxParts <= 0 && separators.length == 1) {
		return str.split(separators[0]);
	}
	if(separators.indexOf("") > -1) {
		if(maxParts <= 0) {
			var _g = [];
			var _g1 = 0;
			var _g2 = strLen;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(HxOverrides.substr(str,i,1));
			}
			return _g;
		}
		if(maxParts > strLen) {
			maxParts = strLen;
		}
		--maxParts;
		var _g = [];
		var _g1 = 0;
		var _g2 = maxParts;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(HxOverrides.substr(str,i,1));
		}
		var result = _g;
		result.push(HxOverrides.substr(str,maxParts,strLen - maxParts));
		return result;
	}
	var _g = [];
	var _g1 = 0;
	while(_g1 < separators.length) {
		var sep = separators[_g1];
		++_g1;
		_g.push(sep == null ? 0 : sep.length);
	}
	var separatorsLengths = _g;
	var lastFoundAt = 0;
	var result = [];
	var resultCount = 0;
	while(true) {
		var separatorLen = 0;
		var foundAt = -1;
		var _g = 0;
		var _g1 = separators.length;
		while(_g < _g1) {
			var i = _g++;
			var sepFoundAt = hx_strings_Strings.indexOf8(str,separators[i],lastFoundAt);
			if(sepFoundAt != -1) {
				if(foundAt == -1 || sepFoundAt < foundAt) {
					foundAt = sepFoundAt;
					separatorLen = separatorsLengths[i];
				}
			}
		}
		++resultCount;
		if(foundAt == -1 || resultCount == maxParts) {
			result.push(HxOverrides.substr(str,lastFoundAt,strLen - lastFoundAt));
			break;
		}
		result.push(HxOverrides.substr(str,lastFoundAt,foundAt - lastFoundAt));
		lastFoundAt = foundAt + separatorLen;
	}
	return result;
};
hx_strings_Strings.splitAt = function(str,splitPos) {
	if(str == null) {
		return null;
	}
	if(splitPos == null || splitPos.length == 0) {
		return [str];
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [str];
	}
	var pos = [];
	var _g = 0;
	var _g1 = splitPos;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		if(p < 0) {
			p = strLen + p;
		}
		if(p < 0 || p >= strLen) {
			continue;
		}
		if(pos.indexOf(p) > -1) {
			continue;
		}
		pos.push(p);
	}
	pos.sort(function(a,b) {
		if(a < b) {
			return -1;
		} else if(a > b) {
			return 1;
		} else {
			return 0;
		}
	});
	var result = [];
	var lastPos = 0;
	var _g = 0;
	while(_g < pos.length) {
		var p = pos[_g];
		++_g;
		var chunk = hx_strings_Strings.substring8(str,lastPos,p);
		if(chunk != null && chunk.length > 0) {
			result.push(chunk);
		}
		lastPos = p;
	}
	var chunk = hx_strings_Strings.substring8(str,lastPos);
	if(chunk != null && chunk.length > 0) {
		result.push(chunk);
	}
	return result;
};
hx_strings_Strings.splitEvery = function(str,count) {
	if(str == null) {
		return null;
	}
	if(count < 1) {
		throw haxe_Exception.thrown("[count] must be greater than 0");
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0 || count >= strLen) {
		return [str];
	}
	var result = [];
	var pos = 0;
	while(true) {
		var chunk = hx_strings_Strings.substr8(str,pos,count);
		pos += count;
		if(chunk == null || chunk.length == 0) {
			break;
		}
		result.push(chunk);
	}
	return result;
};
hx_strings_Strings.splitLines = function(str) {
	if(str == null || str.length == 0) {
		return [];
	} else {
		return hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	}
};
hx_strings_Strings.startsWith = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == null || searchFor.length == 0 || searchIn == searchFor) {
		return true;
	}
	return StringTools.startsWith(searchIn,searchFor);
};
hx_strings_Strings.startsWithAny = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.startsWith(searchIn,candidate)) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.startsWithAnyIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	searchIn = hx_strings_Strings.toLowerCase8(searchIn);
	var _g = 0;
	while(_g < searchFor.length) {
		var candidate = searchFor[_g];
		++_g;
		if(candidate != null && hx_strings_Strings.startsWith(searchIn,hx_strings_Strings.toLowerCase8(candidate))) {
			return true;
		}
	}
	return false;
};
hx_strings_Strings.startsWithIgnoreCase = function(searchIn,searchFor) {
	if(searchIn == null || searchFor == null) {
		return false;
	}
	if(searchFor == null || searchFor.length == 0) {
		return true;
	}
	return hx_strings_Strings.startsWith(searchIn.toLowerCase(),searchFor.toLowerCase());
};
hx_strings_Strings.substr8 = function(str,startAt,len) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(len == null) {
		len = str == null ? 0 : str.length;
	}
	if(len <= 0) {
		return "";
	}
	if(startAt < 0) {
		startAt += str == null ? 0 : str.length;
		if(startAt < 0) {
			startAt = 0;
		}
	}
	return HxOverrides.substr(str,startAt,len);
};
hx_strings_Strings.substring8 = function(str,startAt,endAt) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(endAt == null) {
		endAt = str == null ? 0 : str.length;
	}
	return str.substring(startAt,endAt);
};
hx_strings_Strings.substringAfter = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return str;
	}
	if(str == "" || searchFor == null || searchFor == "") {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringAfterIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringBetween = function(str,after,before,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(before == null) {
		before = after;
	}
	if(str == "" || (after == null || after.length == 0) || (before == null || before.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAfterAt = str.indexOf(after);
	if(foundAfterAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundBeforeAt = str.indexOf(before,foundAfterAt + after.length);
	if(foundBeforeAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAfterAt + after.length,foundBeforeAt);
};
hx_strings_Strings.substringBetweenIgnoreCase = function(str,after,before,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(before == null) {
		before = after;
	}
	if(str == "" || (after == null || after.length == 0) || (before == null || before.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var strLower = hx_strings_Strings.toLowerCase8(str);
	var after1 = hx_strings_Strings.toLowerCase8(after);
	var before1 = hx_strings_Strings.toLowerCase8(before);
	var foundAfterAt = strLower.indexOf(after1);
	if(foundAfterAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundBeforeAt = strLower.indexOf(before1,foundAfterAt + after1.length);
	if(foundBeforeAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAfterAt + after1.length,foundBeforeAt);
};
hx_strings_Strings.substringAfterLast = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringAfterLastIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(foundAt + searchFor.length);
};
hx_strings_Strings.substringBefore = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().indexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeLast = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	var foundAt = str.lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.substringBeforeLastIgnoreCase = function(str,searchFor,notFoundDefault) {
	if(notFoundDefault == null) {
		notFoundDefault = 2;
	}
	if(str == null) {
		return null;
	}
	if(str == "" || (searchFor == null || searchFor.length == 0)) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	searchFor = searchFor.toLowerCase();
	var foundAt = str.toLowerCase().lastIndexOf(searchFor);
	if(foundAt == -1) {
		var tmp;
		switch(notFoundDefault) {
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = "";
			break;
		case 3:
			tmp = str;
			break;
		}
		return tmp;
	}
	return str.substring(0,foundAt);
};
hx_strings_Strings.toBool = function(str) {
	if(str == null || str.length == 0) {
		return false;
	}
	switch(str.toLowerCase()) {
	case "0":case "false":case "no":
		return false;
	default:
		return true;
	}
};
hx_strings_Strings.toBytes = function(str) {
	if(str == null) {
		return null;
	}
	return haxe_io_Bytes.ofString(str);
};
hx_strings_Strings.toChar = function(charCode) {
	return charCode;
};
hx_strings_Strings.toCharIterator = function(str) {
	if(str == null) {
		return hx_strings__$CharIterator_NullCharIterator.INSTANCE;
	} else {
		return new hx_strings__$CharIterator_StringCharIterator(str,0);
	}
};
hx_strings_Strings.toChars = function(str) {
	if(str == null) {
		return null;
	}
	var strLen = str == null ? 0 : str.length;
	if(strLen == 0) {
		return [];
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = strLen;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(HxOverrides.cca(str,i));
	}
	return _g;
};
hx_strings_Strings.toPattern = function(str,options) {
	if(str == null) {
		return null;
	}
	return hx_strings_Pattern.compile(str,options);
};
hx_strings_Strings.toEReg = function(str,opt) {
	if(opt == null) {
		opt = "";
	}
	if(str == null) {
		throw haxe_Exception.thrown("[str] must not be null");
	}
	return new EReg(str,opt);
};
hx_strings_Strings.toFloat = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = parseFloat(str);
	if(isNaN(result)) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toFloatOrNull = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = parseFloat(str);
	if(isNaN(result)) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toHex = function(num,minDigits,upperCase) {
	if(upperCase == null) {
		upperCase = true;
	}
	if(minDigits == null) {
		minDigits = 0;
	}
	var hexed = StringTools.hex(num,0);
	if(!upperCase) {
		return hexed.toLowerCase();
	}
	if(hexed.length >= minDigits) {
		return hexed;
	}
	return hx_strings_Strings.lpad(hexed,minDigits,"0");
};
hx_strings_Strings.toInt = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = Std.parseInt(str);
	if(result == null) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toIntOrNull = function(str,ifUnparseable) {
	if(str == null) {
		return ifUnparseable;
	}
	var result = Std.parseInt(str);
	if(result == null) {
		return ifUnparseable;
	} else {
		return result;
	}
};
hx_strings_Strings.toLowerCase8 = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return str.toLowerCase();
};
hx_strings_Strings.toLowerCaseFirstChar = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var this1 = HxOverrides.cca(str,0);
	var lowerChar = hx_strings_Char.CHAR_CASE_MAPPER.mapU2L.h[this1];
	var firstChar = lowerChar == null ? this1 : lowerChar;
	if(str.length == 1) {
		return String.fromCodePoint(firstChar);
	}
	var other = hx_strings_Strings.substr8(str,1);
	return String.fromCodePoint(firstChar) + other;
};
hx_strings_Strings.toLowerCamel = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	if(keepUppercasedWords) {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(word));
		}
	} else {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(word)));
		}
	}
	return hx_strings_Strings.toLowerCaseFirstChar(sb.toString());
};
hx_strings_Strings.toLowerHyphen = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toLowerCase8(_this[i]);
	}
	return result.join("-");
};
hx_strings_Strings.toLowerUnderscore = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toLowerCase8(_this[i]);
	}
	return result.join("_");
};
hx_strings_Strings.toTitle = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	if(keepUppercasedWords) {
		var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var s = _this[i];
			result[i] = hx_strings_Strings.toUpperCase8(s) == s ? s : hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(s));
		}
		return result.join(" ");
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(_this[i]));
	}
	return result.join(" ");
};
hx_strings_Strings.toUpperCamel = function(str,keepUppercasedWords) {
	if(keepUppercasedWords == null) {
		keepUppercasedWords = true;
	}
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	if(keepUppercasedWords) {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(word));
		}
	} else {
		var _g = 0;
		var _g1 = hx_strings_Strings._splitAsciiWordsUnsafe(str);
		while(_g < _g1.length) {
			var word = _g1[_g];
			++_g;
			sb.add(hx_strings_Strings.toUpperCaseFirstChar(hx_strings_Strings.toLowerCase8(word)));
		}
	}
	return sb.toString();
};
hx_strings_Strings.toUpperUnderscore = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings._splitAsciiWordsUnsafe(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.toUpperCase8(_this[i]);
	}
	return result.join("_");
};
hx_strings_Strings.toString = function(str) {
	if(str == null) {
		return "null";
	} else {
		return str;
	}
};
hx_strings_Strings.toUpperCase8 = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var _g = 0;
	var _g1 = str == null ? 0 : str.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = HxOverrides.cca(str,i);
		var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
		sb.addChar(upperChar == null ? this1 : upperChar);
	}
	return sb.toString();
};
hx_strings_Strings.toUpperCaseFirstChar = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	var this1 = HxOverrides.cca(str,0);
	var upperChar = hx_strings_Char.CHAR_CASE_MAPPER.mapL2U.h[this1];
	var firstChar = upperChar == null ? this1 : upperChar;
	if(str.length == 1) {
		return String.fromCodePoint(firstChar);
	}
	var other = hx_strings_Strings.substr8(str,1);
	return String.fromCodePoint(firstChar) + other;
};
hx_strings_Strings.trim = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.trim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	return hx_strings_Strings.trimLeft(hx_strings_Strings.trimRight(str,hx_strings_internal__$Either2__$Either2.b(removableChars)),hx_strings_internal__$Either2__$Either2.b(removableChars));
};
hx_strings_Strings.trimRight = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.rtrim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	if(removableChars.length == 0) {
		return str;
	}
	var len = str == null ? 0 : str.length;
	var i = len - 1;
	while(i > -1 && removableChars.indexOf(hx_strings_Strings.charCodeAt8(hx_strings_Strings.charAt8(str,i),0)) > -1) --i;
	if(i < len - 1) {
		return hx_strings_Strings.substring8(str,0,i + 1);
	}
	return str;
};
hx_strings_Strings.trimLeft = function(str,charsToRemove) {
	if(str == null) {
		return str;
	}
	if(charsToRemove == null) {
		return StringTools.ltrim(str);
	}
	var removableChars;
	var _g = charsToRemove;
	switch(_g._hx_index) {
	case 0:
		var str1 = _g.v;
		removableChars = hx_strings_Strings.toChars(str1);
		break;
	case 1:
		var chars = _g.v;
		removableChars = chars;
		break;
	}
	if(removableChars.length == 0) {
		return str;
	}
	var len = str == null ? 0 : str.length;
	var i = 0;
	while(i < len && removableChars.indexOf(hx_strings_Strings.charCodeAt8(hx_strings_Strings.charAt8(str,i),0)) > -1) ++i;
	if(i > 0) {
		return hx_strings_Strings.substring8(str,i,len);
	}
	return str;
};
hx_strings_Strings.trimLines = function(str,charsToRemove) {
	if(str == null || str.length == 0) {
		return str;
	}
	var _this = hx_strings_Strings.REGEX_SPLIT_LINES.ereg.split(str);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = hx_strings_Strings.trim(_this[i],charsToRemove);
	}
	return result.join("\n");
};
hx_strings_Strings.trimToNull = function(str) {
	if(str == null) {
		return null;
	}
	var trimmed = hx_strings_Strings.trim(str);
	if(trimmed == null || trimmed.length == 0) {
		return null;
	}
	return trimmed;
};
hx_strings_Strings.trimToEmpty = function(str) {
	var trimmed = hx_strings_Strings.trim(str);
	if(trimmed == null || trimmed.length == 0) {
		return "";
	}
	return trimmed;
};
hx_strings_Strings.truncate = function(str,maxLength) {
	if((str == null ? 0 : str.length) <= maxLength) {
		return str;
	} else {
		return hx_strings_Strings.substring8(str,0,maxLength);
	}
};
hx_strings_Strings.urlDecode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return decodeURIComponent(str.split("+").join(" "));
};
hx_strings_Strings.urlEncode = function(str) {
	if(str == null || str.length == 0) {
		return str;
	}
	return encodeURIComponent(str);
};
hx_strings_Strings.wrap = function(str,maxLineLength,splitLongWords,newLineSeparator) {
	if(newLineSeparator == null) {
		newLineSeparator = "\n";
	}
	if(splitLongWords == null) {
		splitLongWords = true;
	}
	if((str == null ? 0 : str.length) <= maxLineLength || maxLineLength < 1) {
		return str;
	}
	var sb = new hx_strings_StringBuilder();
	var wordChars = [];
	var currLineLength = 0;
	var _g = 0;
	var _g1 = hx_strings_Strings.toChars(str);
	while(_g < _g1.length) {
		var ch = _g1[_g];
		++_g;
		if(ch > 8 && ch < 14 || ch == 32) {
			if(wordChars.length > 0) {
				var _g2 = 0;
				while(_g2 < wordChars.length) {
					var wordCh = wordChars[_g2];
					++_g2;
					if(currLineLength == maxLineLength && splitLongWords) {
						sb.add(newLineSeparator);
						currLineLength = 0;
					}
					++currLineLength;
					sb.addChar(wordCh);
				}
				wordChars = [];
			}
			if(currLineLength >= maxLineLength) {
				sb.add(newLineSeparator);
				currLineLength = 0;
			}
			sb.addChar(ch);
			++currLineLength;
		} else {
			wordChars.push(ch);
		}
	}
	if(wordChars.length > 0) {
		var _g = 0;
		while(_g < wordChars.length) {
			var wordCh = wordChars[_g];
			++_g;
			if(currLineLength == maxLineLength && splitLongWords) {
				sb.add(newLineSeparator);
				currLineLength = 0;
			}
			++currLineLength;
			sb.addChar(wordCh);
		}
	}
	return sb.toString();
};
var hx_strings_StringDiff = function() {
	this.at = -1;
};
$hxClasses["hx.strings.StringDiff"] = hx_strings_StringDiff;
hx_strings_StringDiff.__name__ = true;
hx_strings_StringDiff.prototype = {
	at: null
	,left: null
	,right: null
	,toString: function() {
		return "StringDiff[at=" + this.at + ", left=" + this.left + ", right=" + this.right + "]";
	}
	,__class__: hx_strings_StringDiff
};
var hx_strings_HashCodeAlgorithm = $hxEnums["hx.strings.HashCodeAlgorithm"] = { __ename__:true,__constructs__:null
	,PLATFORM_SPECIFIC: {_hx_name:"PLATFORM_SPECIFIC",_hx_index:0,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,ADLER32: {_hx_name:"ADLER32",_hx_index:1,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,CRC32B: {_hx_name:"CRC32B",_hx_index:2,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,DJB2A: {_hx_name:"DJB2A",_hx_index:3,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,JAVA: {_hx_name:"JAVA",_hx_index:4,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
	,SDBM: {_hx_name:"SDBM",_hx_index:5,__enum__:"hx.strings.HashCodeAlgorithm",toString:$estr}
};
hx_strings_HashCodeAlgorithm.__constructs__ = [hx_strings_HashCodeAlgorithm.PLATFORM_SPECIFIC,hx_strings_HashCodeAlgorithm.ADLER32,hx_strings_HashCodeAlgorithm.CRC32B,hx_strings_HashCodeAlgorithm.DJB2A,hx_strings_HashCodeAlgorithm.JAVA,hx_strings_HashCodeAlgorithm.SDBM];
var hx_strings_AnsiToHtmlRenderMethod = $hxEnums["hx.strings.AnsiToHtmlRenderMethod"] = { __ename__:true,__constructs__:null
	,StyleAttributes: {_hx_name:"StyleAttributes",_hx_index:0,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}
	,CssClasses: {_hx_name:"CssClasses",_hx_index:1,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}
	,CssClassesCallback: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"hx.strings.AnsiToHtmlRenderMethod",toString:$estr}; },$_._hx_name="CssClassesCallback",$_.__params__ = ["func"],$_)
};
hx_strings_AnsiToHtmlRenderMethod.__constructs__ = [hx_strings_AnsiToHtmlRenderMethod.StyleAttributes,hx_strings_AnsiToHtmlRenderMethod.CssClasses,hx_strings_AnsiToHtmlRenderMethod.CssClassesCallback];
var hx_strings_AnsiState = function(copyFrom) {
	this.underline = false;
	this.bold = false;
	this.blink = false;
	if(copyFrom == null) {
		this.reset();
	} else {
		this.copyFrom(copyFrom);
	}
};
$hxClasses["hx.strings.AnsiState"] = hx_strings_AnsiState;
hx_strings_AnsiState.__name__ = true;
hx_strings_AnsiState.defaultCssClassesCallback = function(state) {
	var classes = [];
	if(state.fgcolor != null) {
		classes.push("ansi_fg_" + state.fgcolor);
	}
	if(state.bgcolor != null) {
		classes.push("ansi_bg_" + state.bgcolor);
	}
	if(state.bold) {
		classes.push("ansi_bold");
	}
	if(state.underline) {
		classes.push("ansi_underline");
	}
	if(state.blink) {
		classes.push("ansi_blink");
	}
	return classes.join(" ");
};
hx_strings_AnsiState.prototype = {
	bgcolor: null
	,blink: null
	,bold: null
	,fgcolor: null
	,underline: null
	,isActive: function() {
		if(!(this.fgcolor != null || this.bgcolor != null || this.bold || this.underline)) {
			return this.blink;
		} else {
			return true;
		}
	}
	,reset: function() {
		this.fgcolor = null;
		this.bgcolor = null;
		this.bold = false;
		this.underline = false;
		this.blink = false;
	}
	,copyFrom: function(other) {
		this.fgcolor = other.fgcolor;
		this.bgcolor = other.bgcolor;
		this.bold = other.bold;
		this.underline = other.underline;
		this.blink = other.blink;
	}
	,setGraphicModeParameter: function(param) {
		switch(param) {
		case 0:
			this.reset();
			break;
		case 1:
			this.bold = true;
			break;
		case 4:
			this.underline = true;
			break;
		case 5:
			this.blink = true;
			break;
		case 30:
			this.fgcolor = "black";
			break;
		case 31:
			this.fgcolor = "red";
			break;
		case 32:
			this.fgcolor = "green";
			break;
		case 33:
			this.fgcolor = "yellow";
			break;
		case 34:
			this.fgcolor = "blue";
			break;
		case 35:
			this.fgcolor = "magenta";
			break;
		case 36:
			this.fgcolor = "cyan";
			break;
		case 37:
			this.fgcolor = "white";
			break;
		case 40:
			this.bgcolor = "black";
			break;
		case 41:
			this.bgcolor = "red";
			break;
		case 42:
			this.bgcolor = "green";
			break;
		case 43:
			this.bgcolor = "yellow";
			break;
		case 44:
			this.bgcolor = "blue";
			break;
		case 45:
			this.bgcolor = "magenta";
			break;
		case 46:
			this.bgcolor = "cyan";
			break;
		case 47:
			this.bgcolor = "white";
			break;
		}
	}
	,toCSS: function(renderMethod) {
		if(this.fgcolor != null || this.bgcolor != null || this.bold || this.underline || this.blink) {
			var sb = new hx_strings_StringBuilder();
			if(renderMethod == null) {
				renderMethod = hx_strings_AnsiToHtmlRenderMethod.StyleAttributes;
			}
			switch(renderMethod._hx_index) {
			case 0:
				if(this.fgcolor != null) {
					sb.add("color:").add(this.fgcolor).add(";");
				}
				if(this.bgcolor != null) {
					sb.add("background-color:").add(this.bgcolor).add(";");
				}
				if(this.bold) {
					sb.add("font-weight:bold;");
				}
				if(this.underline) {
					sb.add("text-decoration:underline;");
				}
				if(this.blink) {
					sb.add("text-decoration:blink;");
				}
				break;
			case 1:
				sb.add(hx_strings_AnsiState.defaultCssClassesCallback(this));
				break;
			case 2:
				var func = renderMethod.func;
				sb.add(func(this));
				break;
			}
			return sb.toString();
		}
		return "";
	}
	,__class__: hx_strings_AnsiState
};
var hx_strings_internal_Bits = function() { };
$hxClasses["hx.strings.internal.Bits"] = hx_strings_internal_Bits;
hx_strings_internal_Bits.__name__ = true;
hx_strings_internal_Bits.clearBit = function(num,bitPos) {
	return num & ~(1 << bitPos - 1);
};
hx_strings_internal_Bits.setBit = function(num,bitPos) {
	return num | 1 << bitPos - 1;
};
hx_strings_internal_Bits.toggleBit = function(num,bitPos) {
	return num ^ 1 << bitPos - 1;
};
hx_strings_internal_Bits.getBit = function(num,bitPos) {
	return 1 == (num >> bitPos - 1 & 1);
};
var hx_strings_internal_Either2 = {};
hx_strings_internal_Either2.__properties__ = {get_value:"get_value"};
hx_strings_internal_Either2._new = function(value) {
	return value;
};
hx_strings_internal_Either2.get_value = function(this1) {
	return this1;
};
hx_strings_internal_Either2.fromA = function(value) {
	return hx_strings_internal__$Either2__$Either2.a(value);
};
hx_strings_internal_Either2.fromB = function(value) {
	return hx_strings_internal__$Either2__$Either2.b(value);
};
var hx_strings_internal__$Either2__$Either2 = $hxEnums["hx.strings.internal._Either2._Either2"] = { __ename__:true,__constructs__:null
	,a: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hx.strings.internal._Either2._Either2",toString:$estr}; },$_._hx_name="a",$_.__params__ = ["v"],$_)
	,b: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hx.strings.internal._Either2._Either2",toString:$estr}; },$_._hx_name="b",$_.__params__ = ["v"],$_)
};
hx_strings_internal__$Either2__$Either2.__constructs__ = [hx_strings_internal__$Either2__$Either2.a,hx_strings_internal__$Either2__$Either2.b];
var hx_strings_internal_Either3 = {};
hx_strings_internal_Either3.__properties__ = {get_value:"get_value"};
hx_strings_internal_Either3._new = function(value) {
	return value;
};
hx_strings_internal_Either3.get_value = function(this1) {
	return this1;
};
hx_strings_internal_Either3.fromA = function(value) {
	return hx_strings_internal__$Either3__$Either3.a(value);
};
hx_strings_internal_Either3.fromB = function(value) {
	return hx_strings_internal__$Either3__$Either3.b(value);
};
hx_strings_internal_Either3.fromC = function(value) {
	return hx_strings_internal__$Either3__$Either3.c(value);
};
var hx_strings_internal_OneOrMany = {};
hx_strings_internal_OneOrMany.fromSingle = function(value) {
	return [value];
};
var hx_strings_internal_RingBuffer = {};
hx_strings_internal_RingBuffer._new = function(size) {
	return new hx_strings_internal__$RingBuffer_RingBufferImpl(size);
};
hx_strings_internal_RingBuffer.get = function(this1,index) {
	return this1.get(index);
};
var hx_strings_internal__$RingBuffer_RingBufferIterator = function(buff) {
	this.idx = -1;
	this.buff = buff;
};
$hxClasses["hx.strings.internal._RingBuffer.RingBufferIterator"] = hx_strings_internal__$RingBuffer_RingBufferIterator;
hx_strings_internal__$RingBuffer_RingBufferIterator.__name__ = true;
hx_strings_internal__$RingBuffer_RingBufferIterator.prototype = {
	buff: null
	,idx: null
	,hasNext: function() {
		return this.idx + 1 < this.buff.length;
	}
	,next: function() {
		this.idx++;
		return this.buff.get(this.idx);
	}
	,__class__: hx_strings_internal__$RingBuffer_RingBufferIterator
};
var js_node_ChildProcess = require("child_process");
var js_node_Fs = require("fs");
var js_node_KeyValue = {};
js_node_KeyValue.__properties__ = {get_value:"get_value",get_key:"get_key"};
js_node_KeyValue.get_key = function(this1) {
	return this1[0];
};
js_node_KeyValue.get_value = function(this1) {
	return this1[1];
};
var js_node_Path = require("path");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_stream_WritableNewOptionsAdapter = {};
js_node_stream_WritableNewOptionsAdapter.from = function(options) {
	if(!Object.prototype.hasOwnProperty.call(options,"final")) {
		Object.defineProperty(options,"final",{ get : function() {
			return options.final_;
		}});
	}
	return options;
};
var js_node_url_URLSearchParamsEntry = {};
js_node_url_URLSearchParamsEntry.__properties__ = {get_value:"get_value",get_name:"get_name"};
js_node_url_URLSearchParamsEntry._new = function(name,value) {
	return [name,value];
};
js_node_url_URLSearchParamsEntry.get_name = function(this1) {
	return this1[0];
};
js_node_url_URLSearchParamsEntry.get_value = function(this1) {
	return this1[1];
};
var kiss_FuzzyMap = {};
kiss_FuzzyMap._new = function(m) {
	return m != null ? m : new haxe_ds_StringMap();
};
kiss_FuzzyMap.fromMap = function(m) {
	return m != null ? m : new haxe_ds_StringMap();
};
kiss_FuzzyMap.toMap = function(this1) {
	return this1;
};
kiss_FuzzyMap.bestMatch = function(this1,fuzzySearchKey,throwIfNone) {
	if(throwIfNone == null) {
		throwIfNone = true;
	}
	return kiss_FuzzyMapTools.bestMatch(this1,fuzzySearchKey,throwIfNone);
};
kiss_FuzzyMap.get = function(this1,fuzzySearchKey) {
	var match = kiss_FuzzyMap.bestMatch(this1,fuzzySearchKey);
	var value = this1.h[match];
	if(match != null) {
		kiss_FuzzyMapTools.onMatchMade(this1,fuzzySearchKey,value);
	}
	return value;
};
kiss_FuzzyMap.remove = function(this1,fuzzySearchKey) {
	var key = kiss_FuzzyMap.bestMatch(this1,fuzzySearchKey,false);
	if(key == null) {
		return false;
	}
	if(Object.prototype.hasOwnProperty.call(this1.h,key)) {
		delete(this1.h[key]);
		return true;
	} else {
		return false;
	}
};
kiss_FuzzyMap.exists = function(this1,fuzzySearchKey) {
	return kiss_FuzzyMap.bestMatch(this1,fuzzySearchKey,false) != null;
};
kiss_FuzzyMap.existsExactly = function(this1,searchKey) {
	return Object.prototype.hasOwnProperty.call(this1.h,searchKey);
};
kiss_FuzzyMap.set = function(this1,key,v) {
	this1.h[key] = v;
	return v;
};
var kiss_FuzzyMapTools = function() { };
$hxClasses["kiss.FuzzyMapTools"] = kiss_FuzzyMapTools;
kiss_FuzzyMapTools.__name__ = true;
kiss_FuzzyMapTools.serializeMatches = function(m,file) {
	var this1 = kiss_FuzzyMapTools.serializingMaps;
	var v = { file : file, matches : new haxe_ds_StringMap()};
	this1.set(m,v);
};
kiss_FuzzyMapTools.fuzzyMatchScore = function(key,fuzzySearchKey) {
	return 1 - hx_strings_Strings.getLevenshteinDistance(key.toLowerCase(),fuzzySearchKey.toLowerCase()) / Math.max(key.length,fuzzySearchKey.length);
};
kiss_FuzzyMapTools.bestMatch = function(map,fuzzySearchKey,throwIfNone) {
	if(throwIfNone == null) {
		throwIfNone = true;
	}
	if(Object.prototype.hasOwnProperty.call(map.h,fuzzySearchKey)) {
		return fuzzySearchKey;
	}
	var bestScore = 0.0;
	var bestKey = null;
	var h = map.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var score = kiss_FuzzyMapTools.fuzzyMatchScore(key,fuzzySearchKey);
		if(score > bestScore) {
			bestScore = score;
			bestKey = key;
		}
	}
	if(bestScore < kiss_FuzzyMapTools.threshold) {
		if(throwIfNone) {
			throw haxe_Exception.thrown("No good match for " + fuzzySearchKey + " in " + Std.string(map) + " -- best was " + bestKey + " with " + bestScore);
		} else {
			return null;
		}
	}
	haxe_Log.trace("Fuzzy match " + bestKey + " for " + fuzzySearchKey + " score: " + bestScore,{ fileName : "kiss/FuzzyMapTools.hx", lineNumber : 51, className : "kiss.FuzzyMapTools", methodName : "bestMatch"});
	return bestKey;
};
kiss_FuzzyMapTools.onMatchMade = function(m,key,value) {
	if(kiss_FuzzyMapTools.serializingMaps.h.__keys__[m.__id__] != null) {
		var info = kiss_FuzzyMapTools.serializingMaps.h[m.__id__];
		var v = value;
		info.matches.h[key] = v;
		js_node_Fs.writeFileSync(info.file,JSON.stringify(info.matches));
	}
};
kiss_FuzzyMapTools.loadMatches = function(m,json) {
	var savedMatches = JSON.parse(json);
	var access = savedMatches;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g_value = _g_access[key];
		var _g_key = key;
		var key1 = _g_key;
		var value = _g_value;
		m.h[key1] = value;
	}
};
var kiss_KissInterp = function(nullForUnknownVar) {
	if(nullForUnknownVar == null) {
		nullForUnknownVar = false;
	}
	this.cacheConvertedHScript = false;
	this.parser = new hscript_Parser();
	hscript_Interp.call(this);
	this.nullForUnknownVar = nullForUnknownVar;
	this.variables.h["Reflect"] = Reflect;
	this.variables.h["Type"] = Type;
	this.variables.h["Prelude"] = kiss_Prelude;
	this.variables.h["Lambda"] = Lambda;
	this.variables.h["Std"] = Std;
	this.variables.h["Keep"] = kiss_ExtraElementHandling.Keep;
	this.variables.h["Drop"] = kiss_ExtraElementHandling.Drop;
	this.variables.h["Throw"] = kiss_ExtraElementHandling.Throw;
	this.variables.h["Math"] = Math;
	this.variables.h["Json"] = JSON;
	this.variables.h["StringMap"] = haxe_ds_StringMap;
	this.variables.h["FuzzyMapTools"] = kiss_FuzzyMapTools;
	this.variables.h["StringTools"] = StringTools;
	this.variables.h["Path"] = haxe_io_Path;
	this.variables.h["Sys"] = Sys;
	this.variables.h["FileSystem"] = sys_FileSystem;
	this.variables.h["File"] = sys_io_File;
	this.variables.h["kiss"] = { };
};
$hxClasses["kiss.KissInterp"] = kiss_KissInterp;
kiss_KissInterp.__name__ = true;
kiss_KissInterp.__super__ = hscript_Interp;
kiss_KissInterp.prototype = $extend(hscript_Interp.prototype,{
	nullForUnknownVar: null
	,parser: null
	,cacheConvertedHScript: null
	,evalKiss: function(kissStr) {
		var convert = this.cacheConvertedHScript ? kiss_Prelude.cachedConvertToHScript : kiss_Prelude.convertToHScript;
		return this.evalHaxe(convert(kissStr));
	}
	,evalHaxe: function(hscriptStr) {
		return this.execute(this.parser.parseString(hscriptStr));
	}
	,resolve: function(id) {
		if(this.nullForUnknownVar) {
			try {
				return hscript_Interp.prototype.resolve.call(this,id);
			} catch( _g ) {
				return null;
			}
		} else {
			return hscript_Interp.prototype.resolve.call(this,id);
		}
	}
	,exprReturn: function(e) {
		return hscript_Interp.prototype.exprReturn.call(this,e);
	}
	,publicExprReturn: function(e) {
		return this.exprReturn(e);
	}
	,getLocals: function() {
		return this.locals;
	}
	,setLocals: function(l) {
		this.locals = l;
	}
	,__class__: kiss_KissInterp
});
var kiss_List = {};
kiss_List._new = function(a) {
	return a;
};
kiss_List.fromArray = function(a) {
	return a;
};
kiss_List.toArray = function(this1) {
	return this1;
};
kiss_List.realIndex = function(this1,idx) {
	if(idx < 0) {
		return this1.length + idx;
	} else {
		return idx;
	}
};
kiss_List.get = function(this1,idx) {
	return this1[idx < 0 ? this1.length + idx : idx];
};
kiss_List.arrayWrite = function(this1,idx,v) {
	this1[idx < 0 ? this1.length + idx : idx] = v;
	return v;
};
kiss_List.insert = function(this1,idx,v) {
	this1.splice(idx < 0 ? this1.length + idx : idx,0,v);
};
kiss_List.slice = function(this1,start,end) {
	if(end == null) {
		end = this1.length;
	}
	return this1.slice(start < 0 ? this1.length + start : start,end < 0 ? this1.length + end : end);
};
kiss_List.splice = function(this1,start,len) {
	return this1.splice(start < 0 ? this1.length + start : start,len);
};
var kiss_ExtraElementHandling = $hxEnums["kiss.ExtraElementHandling"] = { __ename__:true,__constructs__:null
	,Keep: {_hx_name:"Keep",_hx_index:0,__enum__:"kiss.ExtraElementHandling",toString:$estr}
	,Drop: {_hx_name:"Drop",_hx_index:1,__enum__:"kiss.ExtraElementHandling",toString:$estr}
	,Throw: {_hx_name:"Throw",_hx_index:2,__enum__:"kiss.ExtraElementHandling",toString:$estr}
};
kiss_ExtraElementHandling.__constructs__ = [kiss_ExtraElementHandling.Keep,kiss_ExtraElementHandling.Drop,kiss_ExtraElementHandling.Throw];
var kiss_KissTarget = $hxEnums["kiss.KissTarget"] = { __ename__:true,__constructs__:null
	,Cpp: {_hx_name:"Cpp",_hx_index:0,__enum__:"kiss.KissTarget",toString:$estr}
	,CSharp: {_hx_name:"CSharp",_hx_index:1,__enum__:"kiss.KissTarget",toString:$estr}
	,Haxe: {_hx_name:"Haxe",_hx_index:2,__enum__:"kiss.KissTarget",toString:$estr}
	,JavaScript: {_hx_name:"JavaScript",_hx_index:3,__enum__:"kiss.KissTarget",toString:$estr}
	,NodeJS: {_hx_name:"NodeJS",_hx_index:4,__enum__:"kiss.KissTarget",toString:$estr}
	,Python: {_hx_name:"Python",_hx_index:5,__enum__:"kiss.KissTarget",toString:$estr}
	,Macro: {_hx_name:"Macro",_hx_index:6,__enum__:"kiss.KissTarget",toString:$estr}
};
kiss_KissTarget.__constructs__ = [kiss_KissTarget.Cpp,kiss_KissTarget.CSharp,kiss_KissTarget.Haxe,kiss_KissTarget.JavaScript,kiss_KissTarget.NodeJS,kiss_KissTarget.Python,kiss_KissTarget.Macro];
var sys_FileSystem = function() { };
$hxClasses["sys.FileSystem"] = sys_FileSystem;
sys_FileSystem.__name__ = true;
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _g ) {
		return false;
	}
};
sys_FileSystem.rename = function(path,newPath) {
	js_node_Fs.renameSync(path,newPath);
};
sys_FileSystem.isDirectory = function(path) {
	try {
		return js_node_Fs.statSync(path).isDirectory();
	} catch( _g ) {
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		if(e.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _g1 ) {
				throw e;
			}
			if(!stat.isDirectory()) {
				throw e;
			}
		}
	}
};
sys_FileSystem.deleteFile = function(path) {
	js_node_Fs.unlinkSync(path);
};
sys_FileSystem.deleteDirectory = function(path) {
	if(sys_FileSystem.exists(path)) {
		var _g = 0;
		var _g1 = js_node_Fs.readdirSync(path);
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			var curPath = path + "/" + file;
			if(sys_FileSystem.isDirectory(curPath)) {
				sys_FileSystem.deleteDirectory(curPath);
			} else {
				js_node_Fs.unlinkSync(curPath);
			}
		}
		js_node_Fs.rmdirSync(path);
	}
};
var kiss_Prelude = function() { };
$hxClasses["kiss.Prelude"] = kiss_Prelude;
kiss_Prelude.__name__ = true;
kiss_Prelude.stringOrFloat = function(d) {
	switch(Type.typeof(d)._hx_index) {
	case 1:case 2:
		return haxe_ds_Either.Right(0.0 + d);
	default:
		if(typeof(d) == "string") {
			return haxe_ds_Either.Left(d);
		} else {
			throw haxe_Exception.thrown("cannot use " + Std.string(d) + " in multiplication");
		}
	}
};
kiss_Prelude._and = function(values) {
	var _g = 0;
	while(_g < values.length) {
		var value = values[_g];
		++_g;
		if(!kiss_Prelude.truthy(value)) {
			return false;
		}
	}
	return values[values.length - 1];
};
kiss_Prelude._or = function(values) {
	var _g = 0;
	while(_g < values.length) {
		var value = values[_g];
		++_g;
		if(kiss_Prelude.truthy(value)) {
			return value;
		}
	}
	return values[values.length - 1];
};
kiss_Prelude.makeVarArgsWithArrayCheck = function(f,name) {
	var fWithArrayCheck = function(args) {
		if(args.length == 1 && ((args[0]) instanceof Array)) {
			throw haxe_Exception.thrown("Array " + Std.string(args[0]) + " was passed to variadic function " + name + ". Use (apply " + name + " args) instead");
		}
		return f(args);
	};
	return Reflect.makeVarArgs(fWithArrayCheck);
};
kiss_Prelude._add = function(values) {
	var sum = values[0];
	var _g = 0;
	var _g1 = values.slice(1);
	while(_g < _g1.length) {
		var value = _g1[_g];
		++_g;
		sum += value;
	}
	return sum;
};
kiss_Prelude._subtract = function(values) {
	var difference = values[0];
	var _g = 0;
	var _g1 = values.slice(1);
	while(_g < _g1.length) {
		var value = _g1[_g];
		++_g;
		difference -= value;
	}
	return difference;
};
kiss_Prelude._multiply2 = function(a,b) {
	var _g = kiss_Prelude.stringOrFloat(a);
	var _g1 = kiss_Prelude.stringOrFloat(b);
	switch(_g._hx_index) {
	case 0:
		var _g2 = _g.v;
		switch(_g1._hx_index) {
		case 0:
			var b1 = _g1.v;
			var a1 = _g2;
			throw haxe_Exception.thrown("cannot multiply strings \"" + a1 + "\" and \"" + b1 + "\"");
		case 1:
			var i = _g1.v;
			var s = _g2;
			if(i % 1 == 0) {
				var result = "";
				var _g2 = 0;
				var _g3 = Math.floor(i);
				while(_g2 < _g3) {
					var _ = _g2++;
					result += s;
				}
				return result;
			} else {
				throw haxe_Exception.thrown("cannot multiply " + Std.string(a) + " and " + Std.string(b));
			}
			break;
		default:
			throw haxe_Exception.thrown("cannot multiply " + Std.string(a) + " and " + Std.string(b));
		}
		break;
	case 1:
		var _g2 = _g.v;
		switch(_g1._hx_index) {
		case 0:
			var s = _g1.v;
			var i = _g2;
			if(i % 1 == 0) {
				var result = "";
				var _g = 0;
				var _g3 = Math.floor(i);
				while(_g < _g3) {
					var _ = _g++;
					result += s;
				}
				return result;
			} else {
				throw haxe_Exception.thrown("cannot multiply " + Std.string(a) + " and " + Std.string(b));
			}
			break;
		case 1:
			var f2 = _g1.v;
			var f = _g2;
			return f * f2;
		default:
			throw haxe_Exception.thrown("cannot multiply " + Std.string(a) + " and " + Std.string(b));
		}
		break;
	}
};
kiss_Prelude._multiply = function(values) {
	var product = values[0];
	var _g = 0;
	var _g1 = values.slice(1);
	while(_g < _g1.length) {
		var value = _g1[_g];
		++_g;
		product = kiss_Prelude._multiply2(product,value);
	}
	return product;
};
kiss_Prelude._divide = function(values) {
	var quotient = values[0];
	var _g = 0;
	var _g1 = values.slice(1);
	while(_g < _g1.length) {
		var value = _g1[_g];
		++_g;
		quotient /= value;
	}
	return quotient;
};
kiss_Prelude.mod = function(top,bottom) {
	return top % bottom;
};
kiss_Prelude.pow = function(base,exponent) {
	return Math.pow(base,exponent);
};
kiss_Prelude._min = function(values) {
	var min = values[0];
	var _g = 0;
	var _g1 = values.slice(1);
	while(_g < _g1.length) {
		var value = _g1[_g];
		++_g;
		min = Math.min(min,value);
	}
	return min;
};
kiss_Prelude._max = function(values) {
	var max = values[0];
	var _g = 0;
	var _g1 = values.slice(1);
	while(_g < _g1.length) {
		var value = _g1[_g];
		++_g;
		max = Math.max(max,value);
	}
	return max;
};
kiss_Prelude._comparison = function(op,values) {
	var _g = 1;
	var _g1 = values.length;
	while(_g < _g1) {
		var idx = _g++;
		var a = values[idx - 1];
		var b = values[idx];
		var check;
		switch(op) {
		case "<":
			check = a < b;
			break;
		case "<=":
			check = a <= b;
			break;
		case "==":
			check = a == b;
			break;
		case ">":
			check = a > b;
			break;
		case ">=":
			check = a >= b;
			break;
		default:
			throw haxe_Exception.thrown("Unreachable case");
		}
		if(!check) {
			return false;
		}
	}
	return true;
};
kiss_Prelude.iFraction = function(num,denom) {
	return num / denom | 0;
};
kiss_Prelude.fFraction = function(num,denom) {
	return num / denom;
};
kiss_Prelude.sort = function(a,comp) {
	if(comp == null) {
		comp = Reflect.compare;
	}
	var sorted = a.slice();
	sorted.sort(comp);
	return sorted;
};
kiss_Prelude.sortBy = function(a,index,comp) {
	if(comp == null) {
		comp = Reflect.compare;
	}
	return kiss_Prelude.sort(a,function(v1,v2) {
		return comp(index(v1),index(v2));
	});
};
kiss_Prelude.groups = function(a,size,extraHandling) {
	if(extraHandling == null) {
		extraHandling = kiss_ExtraElementHandling.Throw;
	}
	var numFullGroups = Math.floor(a.length / size);
	var _g = [];
	var _g1 = 0;
	var _g2 = numFullGroups;
	while(_g1 < _g2) {
		var num = _g1++;
		var start = num * size;
		var end = (num + 1) * size;
		_g.push(a.slice(start,end));
	}
	var fullGroups = _g;
	if(a.length % size != 0) {
		switch(extraHandling._hx_index) {
		case 0:
			fullGroups.push(a.slice(numFullGroups * size));
			break;
		case 1:
			break;
		case 2:
			throw haxe_Exception.thrown("groups was given a non-divisible number of elements: " + Std.string(a) + ", " + size);
		}
	}
	return fullGroups;
};
kiss_Prelude._concat = function(arrays) {
	var arr = arrays[0];
	var _g = 0;
	var _g1 = arrays.slice(1);
	while(_g < _g1.length) {
		var nextArr = _g1[_g];
		++_g;
		arr = arr.concat(nextArr);
	}
	return arr;
};
kiss_Prelude._zip = function(iterables,extraHandling) {
	var lists = [];
	var _g = [];
	var _g1 = 0;
	while(_g1 < iterables.length) {
		var iterable = iterables[_g1];
		++_g1;
		_g.push($getIterator(iterable));
	}
	var iterators = _g;
	_hx_loop2: while(true) {
		var zipped = [];
		var someNonNull = false;
		var _g = 0;
		while(_g < iterators.length) {
			var it = iterators[_g];
			++_g;
			if(extraHandling._hx_index == 0) {
				var tmp;
				if(it.hasNext()) {
					someNonNull = true;
					tmp = it.next();
				} else {
					tmp = null;
				}
				zipped.push(tmp);
			} else if(it.hasNext()) {
				zipped.push(it.next());
			}
		}
		if(zipped.length == 0) {
			break;
		} else {
			switch(extraHandling._hx_index) {
			case 0:
				if(!someNonNull) {
					break _hx_loop2;
				}
				break;
			case 1:
				if(zipped.length != iterators.length) {
					break _hx_loop2;
				}
				break;
			case 2:
				if(zipped.length != iterators.length) {
					throw haxe_Exception.thrown("zip" + Std.string(extraHandling) + " was given iterables of mis-matched size: " + Std.string(iterables));
				}
				break;
			default:
			}
		}
		lists.push(zipped);
	}
	return lists;
};
kiss_Prelude._intersect = function(iterables) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < iterables.length) {
		var iterable = iterables[_g1];
		++_g1;
		_g.push($getIterator(iterable));
	}
	var iterators = _g;
	var _g = [];
	var elem = iterators.shift();
	while(elem.hasNext()) {
		var elem1 = elem.next();
		_g.push([elem1]);
	}
	var intersections = _g;
	var _g = 0;
	while(_g < iterators.length) {
		var iterator = iterators[_g];
		++_g;
		var _g1 = [];
		var elem = iterator;
		while(elem.hasNext()) {
			var elem1 = elem.next();
			var _g2 = [];
			var _g3 = 0;
			while(_g3 < intersections.length) {
				var intersection = intersections[_g3];
				++_g3;
				_g2.push(intersection.concat([elem1]));
			}
			_g1.push(_g2);
		}
		intersections = kiss_Prelude._concat(_g1);
	}
	return intersections;
};
kiss_Prelude.enumerate = function(l,startingIdx) {
	if(startingIdx == null) {
		startingIdx = 0;
	}
	return kiss_Prelude.zipThrow(kiss_Prelude.range(startingIdx,startingIdx + l.length,1),l);
};
kiss_Prelude.pairs = function(l,loopAround) {
	if(loopAround == null) {
		loopAround = false;
	}
	var l1 = kiss_List.slice(l,0,l.length - 1);
	var l2 = kiss_List.slice(l,1,l.length);
	if(loopAround) {
		l1.push(l[l.length + (-1)]);
		l2.unshift(l[0]);
	}
	return kiss_Prelude.zipThrow(l1,l2);
};
kiss_Prelude.reverse = function(l) {
	var c = l.slice();
	c.reverse();
	return c;
};
kiss_Prelude.range = function(min,max,step) {
	if(step <= 0 || max < min) {
		throw haxe_Exception.thrown("(range...) can only count up");
	}
	var count = min;
	var iterator = { next : function() {
		var oldCount = count;
		count += step;
		return oldCount;
	}, hasNext : function() {
		return count < max;
	}};
	return { iterator : function() {
		return iterator;
	}, next : function() {
		return iterator.next();
	}, hasNext : function() {
		return iterator.hasNext();
	}};
};
kiss_Prelude._joinPath = function(parts) {
	var _g = [];
	var _g1 = 0;
	while(_g1 < parts.length) {
		var part = parts[_g1];
		++_g1;
		_g.push(js_Boot.__cast(part , String));
	}
	return haxe_io_Path.join(_g);
};
kiss_Prelude.isNull = function(v) {
	if(Type.typeof(v)._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
kiss_Prelude.truthy = function(v) {
	switch(Type.typeof(v)._hx_index) {
	case 0:
		return false;
	case 3:
		return js_Boot.__cast(v , Bool);
	default:
		if(typeof(v) == "string") {
			var str = v;
			return str.length > 0;
		} else if(((v) instanceof Array)) {
			var lst = v;
			return lst.length > 0;
		} else {
			return true;
		}
	}
};
kiss_Prelude.chooseRandom = function(l) {
	var idx = Std.random(l.length);
	return l[idx < 0 ? l.length + idx : idx];
};
kiss_Prelude.memoize = function(func,caller,jsonFile,jsonArgMap) {
	var argMap = jsonArgMap != null ? jsonArgMap : new haxe_ds_StringMap();
	var f = function(args) {
		var argString = args.join("|");
		if(Object.prototype.hasOwnProperty.call(argMap.h,argString)) {
			return argMap.h[argString];
		} else {
			var ret = func.apply(caller,args);
			argMap.h[argString] = ret;
			if(jsonFile != null) {
				var content = JSON.stringify(argMap);
				js_node_Fs.writeFileSync(jsonFile,content);
			}
			return ret;
		}
	};
	f = Reflect.makeVarArgs(f);
	return f;
};
kiss_Prelude.fsMemoize = function(func,funcName,cacheDirectory,caller) {
	if(cacheDirectory == null) {
		cacheDirectory = "";
	}
	var fileName = "" + funcName + ".memoized";
	if(cacheDirectory.length > 0) {
		sys_FileSystem.createDirectory(cacheDirectory);
		fileName = "" + cacheDirectory + "/" + fileName;
	}
	if(!sys_FileSystem.exists(fileName)) {
		js_node_Fs.writeFileSync(fileName,"{}");
	}
	var pastResults = JSON.parse(js_node_Fs.readFileSync(fileName,{ encoding : "utf8"}));
	var _g = new haxe_ds_StringMap();
	var access = pastResults;
	var _g_access = access;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g_value = _g_access[key];
		var _g_key = key;
		var key1 = _g_key;
		var value = _g_value;
		_g.h[key1] = value;
	}
	var argMap = _g;
	return kiss_Prelude.memoize(func,caller,fileName,argMap);
};
kiss_Prelude._printStr = function(s) {
	process.stdout.write(Std.string(s));
	process.stdout.write("\n");
};
kiss_Prelude._externPrintStr = function(s) {
	var logContent;
	try {
		logContent = js_node_Fs.readFileSync(kiss_Prelude.externLogFile,{ encoding : "utf8"});
	} catch( _g ) {
		logContent = "";
	}
	js_node_Fs.writeFileSync(kiss_Prelude.externLogFile,"" + logContent + s + "\n");
};
kiss_Prelude.withLabel = function(v,label) {
	if(label == null) {
		label = "";
	}
	var toPrint = label;
	if(label.length > 0) {
		toPrint += ": ";
	}
	toPrint += v == null ? "null" : Std.string(v);
	return toPrint;
};
kiss_Prelude.print = function(v,label) {
	if(label == null) {
		label = "";
	}
	var toPrint = kiss_Prelude.withLabel(v,label);
	kiss_Prelude.printStr(toPrint);
	return v;
};
kiss_Prelude.symbolNameValue = function(s,allowTyped,allowMeta) {
	if(allowMeta == null) {
		allowMeta = false;
	}
	if(allowTyped == null) {
		allowTyped = false;
	}
	var _g = s.def;
	switch(_g._hx_index) {
	case 3:
		var name = _g.name;
		return name;
	case 6:
		var _g1 = _g.path;
		var innerExp = _g.exp;
		if(allowTyped) {
			return kiss_Prelude.symbolNameValue(innerExp,false);
		} else {
			throw haxe_Exception.thrown("expected " + Std.string(s) + " to be a plain symbol");
		}
		break;
	case 7:
		var _g1 = _g.meta;
		var innerExp = _g.exp;
		if(allowMeta) {
			return kiss_Prelude.symbolNameValue(innerExp,allowTyped,false);
		} else {
			throw haxe_Exception.thrown("expected " + Std.string(s) + " to be a plain symbol");
		}
		break;
	default:
		throw haxe_Exception.thrown("expected " + Std.string(s) + " to be a plain symbol");
	}
};
kiss_Prelude.uuid = function() {
	return uuid_Uuid.toShort(uuid_Uuid.v4());
};
kiss_Prelude.symbol = function(name) {
	if(name == null) {
		name = "_" + uuid_Uuid.toShort(uuid_Uuid.v4());
	}
	return kiss_ReaderExpDef.Symbol(name);
};
kiss_Prelude.symbolName = function(s,allowTyped,allowMeta) {
	if(allowMeta == null) {
		allowMeta = false;
	}
	if(allowTyped == null) {
		allowTyped = false;
	}
	var _g = s.def;
	switch(_g._hx_index) {
	case 3:
		var name = _g.name;
		return kiss_ReaderExpDef.StrExp(name);
	case 6:
		var _g1 = _g.path;
		var innerExp = _g.exp;
		if(allowTyped) {
			return kiss_Prelude.symbolName(innerExp,false);
		} else {
			throw haxe_Exception.thrown("expected " + Std.string(s) + " to be a plain symbol");
		}
		break;
	case 7:
		var _g1 = _g.meta;
		var innerExp = _g.exp;
		if(allowMeta) {
			return kiss_Prelude.symbolName(innerExp,allowTyped,false);
		} else {
			throw haxe_Exception.thrown("expected " + Std.string(s) + " to be a plain symbol");
		}
		break;
	default:
		throw haxe_Exception.thrown("expected " + Std.string(s) + " to be a plain symbol");
	}
};
kiss_Prelude.expList = function(s) {
	var _g = s.def;
	if(_g._hx_index == 1) {
		var exps = _g.exps;
		return exps;
	} else {
		throw haxe_Exception.thrown("expected " + Std.string(s) + " to be a list expression");
	}
};
kiss_Prelude.isListExp = function(s) {
	var _g = s.def;
	if(_g._hx_index == 1) {
		var exps = _g.exps;
		return true;
	} else {
		return false;
	}
};
kiss_Prelude.walkDirectory = function(basePath,directory,processFile,filterFolderBefore,processFolderAfter) {
	var _g = 0;
	var _g1 = js_node_Fs.readdirSync(kiss_Prelude.joinPath(basePath,directory));
	while(_g < _g1.length) {
		var fileOrFolder = _g1[_g];
		++_g;
		var folder = fileOrFolder;
		if(sys_FileSystem.isDirectory(kiss_Prelude.joinPath(basePath,directory,folder))) {
			var subdirectory = kiss_Prelude.joinPath(directory,folder);
			if(filterFolderBefore != null) {
				if(filterFolderBefore(subdirectory)) {
					continue;
				}
			}
			kiss_Prelude.walkDirectory(basePath,subdirectory,processFile,filterFolderBefore,processFolderAfter);
			if(processFolderAfter != null) {
				processFolderAfter(subdirectory);
			}
		} else {
			var file = fileOrFolder;
			processFile(kiss_Prelude.joinPath(directory,file));
		}
	}
};
kiss_Prelude.purgeDirectory = function(directory) {
	kiss_Prelude.walkDirectory("",directory,sys_FileSystem.deleteFile,null,sys_FileSystem.deleteDirectory);
	if(sys_FileSystem.exists(directory)) {
		var _g = 0;
		var _g1 = js_node_Fs.readdirSync(directory);
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			var curPath = directory + "/" + file;
			if(sys_FileSystem.isDirectory(curPath)) {
				if(sys_FileSystem.exists(curPath)) {
					var _g2 = 0;
					var _g3 = js_node_Fs.readdirSync(curPath);
					while(_g2 < _g3.length) {
						var file1 = _g3[_g2];
						++_g2;
						var curPath1 = curPath + "/" + file1;
						if(sys_FileSystem.isDirectory(curPath1)) {
							sys_FileSystem.deleteDirectory(curPath1);
						} else {
							js_node_Fs.unlinkSync(curPath1);
						}
					}
					js_node_Fs.rmdirSync(curPath);
				}
			} else {
				js_node_Fs.unlinkSync(curPath);
			}
		}
		js_node_Fs.rmdirSync(directory);
	}
};
kiss_Prelude.convertToHScript = function(kissStr) {
	var hscript;
	try {
		hscript = kiss_Prelude.assertProcess("haxelib",["run","kiss","convert","--all","--hscript"],kissStr.split("\n"));
	} catch( _g ) {
		var e = haxe_Exception.caught(_g);
		throw haxe_Exception.thrown("failed to convert " + kissStr + " to hscript:\n" + Std.string(e));
	}
	if(StringTools.startsWith(hscript,">>> ")) {
		hscript = HxOverrides.substr(hscript,4,null);
	}
	return StringTools.trim(hscript);
};
kiss_Prelude.userHome = function() {
	var msysHome = process.env["MSYSHOME"];
	var home = process.env["HOME"];
	var userProfile = process.env["UserProfile"];
	if(msysHome != null) {
		return msysHome;
	} else if(home != null) {
		return home;
	} else if(userProfile != null) {
		return userProfile;
	} else {
		throw haxe_Exception.thrown("Cannot find user's home directory");
	}
};
kiss_Prelude.getTarget = function() {
	return kiss_KissTarget.NodeJS;
};
kiss_Prelude.assertProcess = function(command,args,inputLines,fullProcess,cwd) {
	if(fullProcess == null) {
		fullProcess = true;
	}
	return kiss_Prelude.tryProcess(command,args,function(error) {
		throw haxe_Exception.thrown(error);
	},inputLines,fullProcess,cwd);
};
kiss_Prelude.tryProcess = function(command,args,handleError,inputLines,fullProcess,cwd) {
	if(fullProcess == null) {
		fullProcess = true;
	}
	kiss_Prelude.print("running " + command + " " + Std.string(args) + " " + Std.string(inputLines) + " from " + Std.string(kiss_Prelude.getTarget()));
	if(inputLines != null) {
		var _g = 0;
		while(_g < inputLines.length) {
			var line = inputLines[_g];
			++_g;
			if(line.indexOf("\n") != -1) {
				handleError("newline is not allowed in the middle of a process input line: \"" + StringTools.replace(line,"\n","\n") + "\"");
				return null;
			}
		}
	}
	var p = inputLines != null ? js_node_ChildProcess.spawnSync(command,args,{ input : inputLines.join("\n"), cwd : cwd}) : js_node_ChildProcess.spawnSync(command,args,{ cwd : cwd});
	var output;
	if(p.status == 0) {
		var output1 = p.stdout;
		if(output1 == null) {
			output1 = js_node_buffer_Buffer.alloc(0);
		}
		output = output1.toString();
	} else {
		var output1 = p.stdout;
		if(output1 == null) {
			output1 = js_node_buffer_Buffer.alloc(0);
		}
		var error = p.stderr;
		if(error == null) {
			error = js_node_buffer_Buffer.alloc(0);
		}
		handleError("process " + command + " " + Std.string(args) + " failed:\n" + (output1.toString() + error.toString()));
		return null;
	}
	return StringTools.trim(output);
};
kiss_Prelude.libPath = function(haxelibName) {
	return StringTools.trim(kiss_Prelude.assertProcess("haxelib",["libpath",haxelibName]));
};
kiss_Prelude.shellExecute = function(script,shell) {
	if(shell.length == 0) {
		shell = Sys.systemName() == "Windows" ? "cmd /c" : "bash";
	}
	var tempScript = "tempScript" + kiss_Prelude.shellCount++ + "." + shell.split(" ")[0];
	js_node_Fs.writeFileSync(tempScript,script);
	try {
		if(Sys.systemName() != "Windows") {
			tempScript = kiss_Prelude.joinPath(process.cwd(),tempScript);
		}
		var parts = shell.split(" ").concat([tempScript]);
		var shell = parts.shift();
		kiss_Prelude.assertProcess(shell,parts);
		js_node_Fs.unlinkSync(tempScript);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g);
		kiss_Prelude.printStr("# Failing script:");
		kiss_Prelude.printStr(script);
		kiss_Prelude.printStr("#################");
		js_node_Fs.unlinkSync(tempScript);
		throw haxe_Exception.thrown(e);
	}
};
kiss_Prelude.filter = function(l,p) {
	if(p == null) {
		p = kiss_Prelude.truthy;
	}
	return Lambda.filter(l,p);
};
kiss_Prelude.readDirectory = function(dir) {
	var _g = [];
	var _g1 = 0;
	var _g2 = js_node_Fs.readdirSync(dir);
	while(_g1 < _g2.length) {
		var file = _g2[_g1];
		++_g1;
		_g.push(kiss_Prelude.joinPath(dir,file));
	}
	return _g;
};
kiss_Prelude.substr = function(str,startIdx,endIdx) {
	var negIdx = function(idx) {
		if(idx < 0) {
			return str.length + idx;
		} else {
			return idx;
		}
	};
	if(endIdx == null) {
		endIdx = str.length;
	}
	return str.substring(negIdx(startIdx),negIdx(endIdx));
};
kiss_Prelude.runtimeInsertAssertionMessage = function(message,error,colonsInPrefix) {
	var colonIdx = 0;
	var _g = 0;
	var _g1 = colonsInPrefix;
	while(_g < _g1) {
		var _ = _g++;
		colonIdx = error.indexOf(":",colonIdx) + 1;
	}
	++colonIdx;
	return HxOverrides.substr(error,0,colonIdx) + message + HxOverrides.substr(error,colonIdx,null);
};
var kiss_ReaderExpDef = $hxEnums["kiss.ReaderExpDef"] = { __ename__:true,__constructs__:null
	,CallExp: ($_=function(func,args) { return {_hx_index:0,func:func,args:args,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="CallExp",$_.__params__ = ["func","args"],$_)
	,ListExp: ($_=function(exps) { return {_hx_index:1,exps:exps,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="ListExp",$_.__params__ = ["exps"],$_)
	,StrExp: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="StrExp",$_.__params__ = ["s"],$_)
	,Symbol: ($_=function(name) { return {_hx_index:3,name:name,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="Symbol",$_.__params__ = ["name"],$_)
	,RawHaxe: ($_=function(code) { return {_hx_index:4,code:code,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="RawHaxe",$_.__params__ = ["code"],$_)
	,RawHaxeBlock: ($_=function(code) { return {_hx_index:5,code:code,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="RawHaxeBlock",$_.__params__ = ["code"],$_)
	,TypedExp: ($_=function(path,exp) { return {_hx_index:6,path:path,exp:exp,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="TypedExp",$_.__params__ = ["path","exp"],$_)
	,MetaExp: ($_=function(meta,exp) { return {_hx_index:7,meta:meta,exp:exp,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="MetaExp",$_.__params__ = ["meta","exp"],$_)
	,FieldExp: ($_=function(field,exp) { return {_hx_index:8,field:field,exp:exp,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="FieldExp",$_.__params__ = ["field","exp"],$_)
	,KeyValueExp: ($_=function(key,value) { return {_hx_index:9,key:key,value:value,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="KeyValueExp",$_.__params__ = ["key","value"],$_)
	,Quasiquote: ($_=function(exp) { return {_hx_index:10,exp:exp,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="Quasiquote",$_.__params__ = ["exp"],$_)
	,Unquote: ($_=function(exp) { return {_hx_index:11,exp:exp,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="Unquote",$_.__params__ = ["exp"],$_)
	,UnquoteList: ($_=function(exp) { return {_hx_index:12,exp:exp,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="UnquoteList",$_.__params__ = ["exp"],$_)
	,ListEatingExp: ($_=function(exps) { return {_hx_index:13,exps:exps,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="ListEatingExp",$_.__params__ = ["exps"],$_)
	,ListRestExp: ($_=function(name) { return {_hx_index:14,name:name,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="ListRestExp",$_.__params__ = ["name"],$_)
	,TypeParams: ($_=function(types) { return {_hx_index:15,types:types,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="TypeParams",$_.__params__ = ["types"],$_)
	,HaxeMeta: ($_=function(name,params,exp) { return {_hx_index:16,name:name,params:params,exp:exp,__enum__:"kiss.ReaderExpDef",toString:$estr}; },$_._hx_name="HaxeMeta",$_.__params__ = ["name","params","exp"],$_)
	,None: {_hx_name:"None",_hx_index:17,__enum__:"kiss.ReaderExpDef",toString:$estr}
};
kiss_ReaderExpDef.__constructs__ = [kiss_ReaderExpDef.CallExp,kiss_ReaderExpDef.ListExp,kiss_ReaderExpDef.StrExp,kiss_ReaderExpDef.Symbol,kiss_ReaderExpDef.RawHaxe,kiss_ReaderExpDef.RawHaxeBlock,kiss_ReaderExpDef.TypedExp,kiss_ReaderExpDef.MetaExp,kiss_ReaderExpDef.FieldExp,kiss_ReaderExpDef.KeyValueExp,kiss_ReaderExpDef.Quasiquote,kiss_ReaderExpDef.Unquote,kiss_ReaderExpDef.UnquoteList,kiss_ReaderExpDef.ListEatingExp,kiss_ReaderExpDef.ListRestExp,kiss_ReaderExpDef.TypeParams,kiss_ReaderExpDef.HaxeMeta,kiss_ReaderExpDef.None];
var kiss_StreamError = function(position,message) {
	this.position = position;
	this.message = message;
};
$hxClasses["kiss.StreamError"] = kiss_StreamError;
kiss_StreamError.__name__ = true;
kiss_StreamError.prototype = {
	position: null
	,message: null
	,toString: function() {
		return "\nKiss reader error!\n" + kiss_Stream.toPrint(this.position) + (": " + this.message + "\n");
	}
	,__class__: kiss_StreamError
};
var kiss_Stream = function(file,content) {
	this.lineLengths = [];
	this.startOfLine = true;
	this.absolutePerNewline = 1;
	this.file = StringTools.replace(file,"\\","/");
	if(content.indexOf("\r") >= 0) {
		this.absolutePerNewline = 2;
		content = StringTools.replace(content,"\r","");
	}
	if(content.charAt(content.length - 1) != "\n") {
		content += "\n";
	}
	this.content = content;
	this.line = 1;
	this.column = 1;
	this.absoluteChar = 0;
};
$hxClasses["kiss.Stream"] = kiss_Stream;
kiss_Stream.__name__ = true;
kiss_Stream.fromFile = function(file) {
	return new kiss_Stream(file,js_node_Fs.readFileSync(file,{ encoding : "utf8"}));
};
kiss_Stream.fromString = function(content,position) {
	var file = "string";
	if(position != null) {
		file = position.file;
	}
	var s = new kiss_Stream(file,content);
	if(position != null) {
		s.line = position.line;
		s.column = position.column;
		s.absoluteChar = position.absoluteChar;
	}
	return s;
};
kiss_Stream.toPrint = function(p) {
	return "" + p.file + ":" + p.line + ":" + p.column;
};
kiss_Stream.error = function(stream,message) {
	throw haxe_Exception.thrown(new kiss_StreamError(stream.position(),message));
};
kiss_Stream.prototype = {
	content: null
	,file: null
	,line: null
	,column: null
	,absoluteChar: null
	,absolutePerNewline: null
	,startOfLine: null
	,peekChars: function(chars) {
		if(this.content.length < chars) {
			return haxe_ds_Option.None;
		}
		return haxe_ds_Option.Some(HxOverrides.substr(this.content,0,chars));
	}
	,isEmpty: function() {
		return this.content.length == 0;
	}
	,position: function() {
		return { file : this.file, line : this.line, column : this.column, absoluteChar : this.absoluteChar};
	}
	,startsWith: function(s) {
		var _g = this.peekChars(s.length);
		if(_g._hx_index == 0) {
			var s1 = _g.v;
			if(s == s1) {
				return true;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,lineLengths: null
	,dropChars: function(count) {
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var idx = _g++;
			var _g2 = this.content.charAt(idx);
			if(_g2 == "\n") {
				this.absoluteChar += this.absolutePerNewline;
				this.line += 1;
				this.lineLengths.push(this.column);
				this.column = 1;
				this.startOfLine = true;
			} else {
				var c = _g2;
				if(StringTools.trim(c) == "") {
					this.absoluteChar += 1;
					this.column += 1;
				} else {
					this.absoluteChar += 1;
					this.column += 1;
					this.startOfLine = false;
				}
			}
		}
		this.content = HxOverrides.substr(this.content,count,null);
	}
	,putBackString: function(s) {
		var idx = s.length - 1;
		while(idx >= 0) {
			this.absoluteChar -= 1;
			if(s.charAt(idx) == "\n") {
				this.line -= 1;
				this.column = this.lineLengths.pop();
			} else {
				this.column -= 1;
			}
			--idx;
		}
		this.content = s + this.content;
	}
	,takeChars: function(count) {
		if(count > this.content.length) {
			return haxe_ds_Option.None;
		}
		var toReturn = HxOverrides.substr(this.content,0,count);
		this.dropChars(count);
		return haxe_ds_Option.Some(toReturn);
	}
	,dropString: function(s) {
		var toDrop = HxOverrides.substr(this.content,0,s.length);
		if(toDrop != s) {
			kiss_Stream.error(this,"Expected " + s);
		}
		this.dropChars(s.length);
	}
	,dropStringIf: function(s) {
		var toDrop = HxOverrides.substr(this.content,0,s.length);
		if(toDrop == s) {
			this.dropString(toDrop);
			return true;
		}
		return false;
	}
	,dropUntil: function(s) {
		this.dropChars(this.content.indexOf(s));
	}
	,dropWhitespace: function() {
		var trimmed = StringTools.ltrim(this.content);
		this.dropChars(this.content.length - trimmed.length);
	}
	,takeUntilOneOf: function(terminators,allowEOF) {
		if(allowEOF == null) {
			allowEOF = false;
		}
		var _g = [];
		var _g1 = 0;
		while(_g1 < terminators.length) {
			var term = terminators[_g1];
			++_g1;
			_g.push(this.content.indexOf(term));
		}
		var _g1 = [];
		var _g2 = 0;
		var _g3 = _g;
		while(_g2 < _g3.length) {
			var v = _g3[_g2];
			++_g2;
			if(v >= 0) {
				_g1.push(v);
			}
		}
		var indices = _g1;
		if(indices.length == 0) {
			if(allowEOF) {
				return haxe_ds_Option.Some(this.takeRest());
			} else {
				return haxe_ds_Option.None;
			}
		}
		var firstIndex = Math.floor(Lambda.fold(indices,Math.min,indices[0]));
		return this.takeChars(firstIndex);
	}
	,takeUntil: function(s,allowEOF) {
		if(allowEOF == null) {
			allowEOF = false;
		}
		return this.takeUntilOneOf([s],allowEOF);
	}
	,takeUntilAndDrop: function(s,allowEOF) {
		if(allowEOF == null) {
			allowEOF = false;
		}
		var idx = this.content.indexOf(s);
		if(idx < 0) {
			if(allowEOF) {
				return haxe_ds_Option.Some(this.takeRest());
			} else {
				return haxe_ds_Option.None;
			}
		}
		var toReturn = HxOverrides.substr(this.content,0,idx);
		this.dropChars(toReturn.length + s.length);
		return haxe_ds_Option.Some(toReturn);
	}
	,takeBetween: function(open,close,escapeSeq) {
		if(!this.startsWith(open)) {
			return haxe_ds_Option.None;
		}
		this.dropString(open);
		var taken = "";
		while(true) if(this.startsWith(close)) {
			this.dropString(close);
			return haxe_ds_Option.Some(taken);
		} else if(this.startsWith(open)) {
			kiss_Stream.error(this,"takeBetween() does not support nested delimiter pairs");
		} else if(escapeSeq != null && this.startsWith(escapeSeq)) {
			this.dropString(escapeSeq);
			if(this.startsWith(open)) {
				this.dropString(open);
				taken += open;
			} else if(this.startsWith(close)) {
				this.dropString(close);
				taken += close;
			} else if(this.startsWith(escapeSeq)) {
				this.dropString(escapeSeq);
				taken += escapeSeq;
			} else {
				kiss_Stream.error(this,"invalid escape sequence");
			}
		} else {
			var next;
			var _g = this.takeChars(1);
			if(_g._hx_index == 0) {
				var n = _g.v;
				next = n;
			} else {
				kiss_Stream.error(this,"Ran out of characters before closing delimiter " + close);
				next = "";
			}
			taken += next;
		}
	}
	,takeRest: function() {
		var toReturn = this.content;
		this.dropChars(this.content.length);
		return toReturn;
	}
	,takeLine: function() {
		var _g = this.takeUntilAndDrop("\n");
		switch(_g._hx_index) {
		case 0:
			var line = _g.v;
			return haxe_ds_Option.Some(line);
		case 1:
			if(this.content.length > 0) {
				return haxe_ds_Option.Some(this.takeRest());
			} else {
				return haxe_ds_Option.None;
			}
			break;
		default:
			return haxe_ds_Option.None;
		}
	}
	,takeLineAsStream: function() {
		var lineNo = this.line;
		var column = this.column;
		var absoluteChar = this.absoluteChar;
		var _g = this.takeLine();
		if(_g._hx_index == 0) {
			var line = _g.v;
			var s = kiss_Stream.fromString(line);
			s.line = lineNo;
			s.column = column;
			s.file = this.file;
			s.absoluteChar = absoluteChar;
			return haxe_ds_Option.Some(s);
		} else {
			return haxe_ds_Option.None;
		}
	}
	,expect: function(whatToExpect,f) {
		var position = this.position();
		var _g = f();
		if(_g._hx_index == 0) {
			var s = _g.v;
			return s;
		} else {
			kiss_Stream.error(this,"Expected " + whatToExpect);
			return null;
		}
	}
	,__class__: kiss_Stream
};
var kiss_$tools_ShortcutKey = $hxEnums["kiss_tools.ShortcutKey"] = { __ename__:true,__constructs__:null
	,Cancel: ($_=function(key) { return {_hx_index:0,key:key,__enum__:"kiss_tools.ShortcutKey",toString:$estr}; },$_._hx_name="Cancel",$_.__params__ = ["key"],$_)
	,Final: ($_=function(item) { return {_hx_index:1,item:item,__enum__:"kiss_tools.ShortcutKey",toString:$estr}; },$_._hx_name="Final",$_.__params__ = ["item"],$_)
	,Prefix: ($_=function(keys) { return {_hx_index:2,keys:keys,__enum__:"kiss_tools.ShortcutKey",toString:$estr}; },$_._hx_name="Prefix",$_.__params__ = ["keys"],$_)
};
kiss_$tools_ShortcutKey.__constructs__ = [kiss_$tools_ShortcutKey.Cancel,kiss_$tools_ShortcutKey.Final,kiss_$tools_ShortcutKey.Prefix];
var kiss_$tools_KeyShortcutHandler = function() {
	this.onBadShortcut = null;
	this.onBadKey = null;
	this.onFinishOrCancel = null;
	this.onSelectItem = null;
	this.onSelectPrefixMap = null;
	this.cancelKey = null;
	this.currentMap = null;
	this.rootMap = new haxe_ds_StringMap();
};
$hxClasses["kiss_tools.KeyShortcutHandler"] = kiss_$tools_KeyShortcutHandler;
kiss_$tools_KeyShortcutHandler.__name__ = true;
kiss_$tools_KeyShortcutHandler.prototype = {
	rootMap: null
	,currentMap: null
	,cancelKey: null
	,onSelectPrefixMap: null
	,onSelectItem: null
	,onFinishOrCancel: null
	,onBadKey: null
	,onBadShortcut: null
	,_selectMap: function(m) {
		this.currentMap = m;
		var _cYy1CsmVKZ9EdKh75dPz7 = this.onSelectPrefixMap;
		if(kiss_Prelude.truthy(_cYy1CsmVKZ9EdKh75dPz7)) {
			var _7m4pcxZWBpuJV8ATbnBkn7 = _cYy1CsmVKZ9EdKh75dPz7;
			if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_7m4pcxZWBpuJV8ATbnBkn7))) {
				var handler = _cYy1CsmVKZ9EdKh75dPz7;
				handler(m,this.prefixMapToStrings(m));
			}
		}
	}
	,start: function() {
		this._selectMap(this.rootMap);
	}
	,cancel: function() {
		this.currentMap = null;
		var _s3XfMwXLZSPmWrmfgcAQF6 = this.onFinishOrCancel;
		if(kiss_Prelude.truthy(_s3XfMwXLZSPmWrmfgcAQF6)) {
			var _jAgUWGGvdMrUgjYESas76u = _s3XfMwXLZSPmWrmfgcAQF6;
			if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_jAgUWGGvdMrUgjYESas76u))) {
				var handler = _s3XfMwXLZSPmWrmfgcAQF6;
				handler();
			}
		}
	}
	,clear: function() {
		this.rootMap.h = Object.create(null);
	}
	,handleKey: function(key) {
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(this.currentMap))) {
			var _b9Tg4eihRgAcr32GzyYk8n = this.onBadKey;
			if(kiss_Prelude.truthy(_b9Tg4eihRgAcr32GzyYk8n)) {
				var _66CTFHPeSyrsbCkLVd5Usv = _b9Tg4eihRgAcr32GzyYk8n;
				if(kiss_Prelude.truthy(kiss_Prelude.isNull(_66CTFHPeSyrsbCkLVd5Usv))) {
					throw haxe_Exception.thrown(kiss_Prelude.add("Tried to handle key ",key == null ? "null" : "" + key," without calling start() first"));
				} else {
					var handler = _b9Tg4eihRgAcr32GzyYk8n;
					handler(key,null);
					return;
				}
			} else {
				throw haxe_Exception.thrown(kiss_Prelude.add("Tried to handle key ",key == null ? "null" : "" + key," without calling start() first"));
			}
		}
		if(kiss_Prelude.truthy(kiss_Prelude.areEqual(this.cancelKey,key))) {
			this.cancel();
		} else {
			var _g = this.currentMap.h[key];
			var _8ebxw3ffGJcAFFF444cqjX = _g;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_8ebxw3ffGJcAFFF444cqjX))) {
				var _fpLEuCNduHyatcHQ1F3ciA = this.onBadKey;
				if(kiss_Prelude.truthy(_fpLEuCNduHyatcHQ1F3ciA)) {
					var _iv54yPPMHd6veDkgWVY72H = _fpLEuCNduHyatcHQ1F3ciA;
					if(kiss_Prelude.truthy(kiss_Prelude.isNull(_iv54yPPMHd6veDkgWVY72H))) {
						var tmp = kiss_Prelude.add;
						var tmp1 = this.currentMap == null ? "null" : this.currentMap.toString();
						throw haxe_Exception.thrown(tmp("Key ",key == null ? "null" : "" + key," is not defined in ",tmp1," and no onBadKey event was given"));
					} else {
						var handler = _fpLEuCNduHyatcHQ1F3ciA;
						handler(key,this.currentMap);
						return;
					}
				} else {
					var tmp = kiss_Prelude.add;
					var tmp1 = this.currentMap == null ? "null" : this.currentMap.toString();
					throw haxe_Exception.thrown(tmp("Key ",key == null ? "null" : "" + key," is not defined in ",tmp1," and no onBadKey event was given"));
				}
			} else if(_g == null) {
				var _fpLEuCNduHyatcHQ1F3ciA = this.onBadKey;
				if(kiss_Prelude.truthy(_fpLEuCNduHyatcHQ1F3ciA)) {
					var _iv54yPPMHd6veDkgWVY72H = _fpLEuCNduHyatcHQ1F3ciA;
					if(kiss_Prelude.truthy(kiss_Prelude.isNull(_iv54yPPMHd6veDkgWVY72H))) {
						var tmp = kiss_Prelude.add;
						var tmp1 = this.currentMap == null ? "null" : this.currentMap.toString();
						throw haxe_Exception.thrown(tmp("Key ",key == null ? "null" : "" + key," is not defined in ",tmp1," and no onBadKey event was given"));
					} else {
						var handler = _fpLEuCNduHyatcHQ1F3ciA;
						handler(key,this.currentMap);
						return;
					}
				} else {
					var tmp = kiss_Prelude.add;
					var tmp1 = this.currentMap == null ? "null" : this.currentMap.toString();
					throw haxe_Exception.thrown(tmp("Key ",key == null ? "null" : "" + key," is not defined in ",tmp1," and no onBadKey event was given"));
				}
			} else {
				switch(_g._hx_index) {
				case 1:
					var item = _g.item;
					this.cancel();
					var _hNXaXVdwXNCpLvPN3n46gv = this.onSelectItem;
					if(kiss_Prelude.truthy(_hNXaXVdwXNCpLvPN3n46gv)) {
						var _5eaRibNsXcgaqdHQ9x9YtU = _hNXaXVdwXNCpLvPN3n46gv;
						if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_5eaRibNsXcgaqdHQ9x9YtU))) {
							var handler = _hNXaXVdwXNCpLvPN3n46gv;
							handler(item);
						}
					}
					break;
				case 2:
					var nextMap = _g.keys;
					this._selectMap(nextMap);
					break;
				default:
					var _fpLEuCNduHyatcHQ1F3ciA = this.onBadKey;
					if(kiss_Prelude.truthy(_fpLEuCNduHyatcHQ1F3ciA)) {
						var _iv54yPPMHd6veDkgWVY72H = _fpLEuCNduHyatcHQ1F3ciA;
						if(kiss_Prelude.truthy(kiss_Prelude.isNull(_iv54yPPMHd6veDkgWVY72H))) {
							var tmp = kiss_Prelude.add;
							var tmp1 = this.currentMap == null ? "null" : this.currentMap.toString();
							throw haxe_Exception.thrown(tmp("Key ",key == null ? "null" : "" + key," is not defined in ",tmp1," and no onBadKey event was given"));
						} else {
							var handler = _fpLEuCNduHyatcHQ1F3ciA;
							handler(key,this.currentMap);
							return;
						}
					} else {
						var tmp = kiss_Prelude.add;
						var tmp1 = this.currentMap == null ? "null" : this.currentMap.toString();
						throw haxe_Exception.thrown(tmp("Key ",key == null ? "null" : "" + key," is not defined in ",tmp1," and no onBadKey event was given"));
					}
				}
			}
		}
	}
	,extractKeyboardShortcuts: function(str,stream,shortcuts) {
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(stream))) {
			stream = kiss_Stream.fromString(str);
		}
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(shortcuts))) {
			shortcuts = [];
		}
		var _g = stream.takeUntilOneOf(["[","{"],false);
		var _f3CW5m5u3GWccuKEEK8APL = _g;
		if(kiss_Prelude.truthy(kiss_Prelude.isNull(_f3CW5m5u3GWccuKEEK8APL))) {
			return shortcuts;
		} else if(_g._hx_index == 0) {
			var _g1 = _g.v;
			var _g = stream.takeChars(1);
			var _e2WSQHrscF2TQ6Z7FBk3e = _g;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_e2WSQHrscF2TQ6Z7FBk3e))) {
				throw haxe_Exception.thrown("takeUntilOneOf lied");
			} else if(_g._hx_index == 0) {
				switch(_g.v) {
				case "[":
					var _g = stream.takeUntilAndDrop("]");
					var _f5qevYh3Y9ciRi2MqQxJBR = _g;
					if(kiss_Prelude.truthy(kiss_Prelude.isNull(_f5qevYh3Y9ciRi2MqQxJBR))) {
						var _u1qeFKLMho7zaDGQJez5GQ = this.onBadShortcut;
						if(kiss_Prelude.truthy(_u1qeFKLMho7zaDGQJez5GQ)) {
							var _gEb9DpgibZhVKBqQvkapyg = _u1qeFKLMho7zaDGQJez5GQ;
							if(kiss_Prelude.truthy(kiss_Prelude.isNull(_gEb9DpgibZhVKBqQvkapyg))) {
								throw haxe_Exception.thrown(kiss_Prelude.add("unclosed [ in ",str == null ? "null" : "" + str,""));
							} else {
								var handler = _u1qeFKLMho7zaDGQJez5GQ;
								handler(str,null);
								return null;
							}
						} else {
							throw haxe_Exception.thrown(kiss_Prelude.add("unclosed [ in ",str == null ? "null" : "" + str,""));
						}
					} else if(_g._hx_index == 0) {
						var newShortcuts = _g.v;
						return this.extractKeyboardShortcuts(str,stream,shortcuts.concat(newShortcuts.split("")));
					} else {
						var _u1qeFKLMho7zaDGQJez5GQ = this.onBadShortcut;
						if(kiss_Prelude.truthy(_u1qeFKLMho7zaDGQJez5GQ)) {
							var _gEb9DpgibZhVKBqQvkapyg = _u1qeFKLMho7zaDGQJez5GQ;
							if(kiss_Prelude.truthy(kiss_Prelude.isNull(_gEb9DpgibZhVKBqQvkapyg))) {
								throw haxe_Exception.thrown(kiss_Prelude.add("unclosed [ in ",str == null ? "null" : "" + str,""));
							} else {
								var handler = _u1qeFKLMho7zaDGQJez5GQ;
								handler(str,null);
								return null;
							}
						} else {
							throw haxe_Exception.thrown(kiss_Prelude.add("unclosed [ in ",str == null ? "null" : "" + str,""));
						}
					}
					break;
				case "{":
					var _g = stream.takeUntilAndDrop("}");
					var _3F2aG7bZtYheD3kHGVjGbA = _g;
					if(kiss_Prelude.truthy(kiss_Prelude.isNull(_3F2aG7bZtYheD3kHGVjGbA))) {
						var _di3GwxuKLARpQdw4apkz5s = this.onBadShortcut;
						if(kiss_Prelude.truthy(_di3GwxuKLARpQdw4apkz5s)) {
							var _oWAE7kVeGk9G8nuG2mvV8S = _di3GwxuKLARpQdw4apkz5s;
							if(kiss_Prelude.truthy(kiss_Prelude.isNull(_oWAE7kVeGk9G8nuG2mvV8S))) {
								throw haxe_Exception.thrown(kiss_Prelude.add("unclosed { in ",str == null ? "null" : "" + str,""));
							} else {
								var handler = _di3GwxuKLARpQdw4apkz5s;
								handler(str,null);
								return null;
							}
						} else {
							throw haxe_Exception.thrown(kiss_Prelude.add("unclosed { in ",str == null ? "null" : "" + str,""));
						}
					} else if(_g._hx_index == 0) {
						var newShortcut = _g.v;
						return this.extractKeyboardShortcuts(str,stream,shortcuts.concat([newShortcut]));
					} else {
						var _di3GwxuKLARpQdw4apkz5s = this.onBadShortcut;
						if(kiss_Prelude.truthy(_di3GwxuKLARpQdw4apkz5s)) {
							var _oWAE7kVeGk9G8nuG2mvV8S = _di3GwxuKLARpQdw4apkz5s;
							if(kiss_Prelude.truthy(kiss_Prelude.isNull(_oWAE7kVeGk9G8nuG2mvV8S))) {
								throw haxe_Exception.thrown(kiss_Prelude.add("unclosed { in ",str == null ? "null" : "" + str,""));
							} else {
								var handler = _di3GwxuKLARpQdw4apkz5s;
								handler(str,null);
								return null;
							}
						} else {
							throw haxe_Exception.thrown(kiss_Prelude.add("unclosed { in ",str == null ? "null" : "" + str,""));
						}
					}
					break;
				default:
					throw haxe_Exception.thrown("takeUntilOneOf lied");
				}
			} else {
				throw haxe_Exception.thrown("takeUntilOneOf lied");
			}
		} else {
			return shortcuts;
		}
	}
	,registerShortcut: function(keys,description,item,force,prefixMap) {
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(prefixMap))) {
			prefixMap = this.rootMap;
		}
		var firstKey = keys.shift();
		var tmp = kiss_Prelude.truthy;
		var _ocLiFZQZVccFnVnj8jcr5T = !kiss_Prelude.truthy(force);
		var tmp1;
		if(kiss_Prelude.truthy(_ocLiFZQZVccFnVnj8jcr5T)) {
			var _ojez7z5Rp8kqFbzHJ9V1yj = Object.prototype.hasOwnProperty.call(prefixMap.h,firstKey);
			var _ak7xce5LL4CqubC1KHTZa7;
			if(kiss_Prelude.truthy(_ojez7z5Rp8kqFbzHJ9V1yj)) {
				_ak7xce5LL4CqubC1KHTZa7 = _ojez7z5Rp8kqFbzHJ9V1yj;
			} else {
				var _wAtMMRG6T4Sd2MXGNbAxvb = kiss_Prelude.areEqual(firstKey,this.cancelKey);
				_ak7xce5LL4CqubC1KHTZa7 = _wAtMMRG6T4Sd2MXGNbAxvb;
			}
			tmp1 = _ak7xce5LL4CqubC1KHTZa7;
		} else {
			tmp1 = _ocLiFZQZVccFnVnj8jcr5T;
		}
		if(tmp(tmp1)) {
			var existingKey = kiss_Prelude.truthy(kiss_Prelude.areEqual(firstKey,this.cancelKey)) ? kiss_$tools_ShortcutKey.Cancel(this.cancelKey) : prefixMap.h[firstKey];
			var conflictMessage = kiss_Prelude.add("Keyboard shortcut for ",description == null ? "null" : "" + description," conflicts with ",Std.string(existingKey),"");
			if(kiss_Prelude.truthy(keys)) {
				var _iUYYYCaHqVnW1Mt2BBsDJA = existingKey;
				if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_iUYYYCaHqVnW1Mt2BBsDJA))) {
					if(existingKey != null) {
						switch(existingKey._hx_index) {
						case 0:
							var otherItem = existingKey.key;
							if(kiss_Prelude.truthy(kiss_Prelude.areEqual(otherItem,item))) {
								return;
							} else {
								var _3FtPEPor6n2goByJkPkF15 = this.onBadShortcut;
								if(kiss_Prelude.truthy(_3FtPEPor6n2goByJkPkF15)) {
									var _vpgQGCKy1LmxRfibmBQ5T1 = _3FtPEPor6n2goByJkPkF15;
									if(kiss_Prelude.truthy(kiss_Prelude.isNull(_vpgQGCKy1LmxRfibmBQ5T1))) {
										throw haxe_Exception.thrown(conflictMessage);
									} else {
										var handler = _3FtPEPor6n2goByJkPkF15;
										handler(description,existingKey);
										return;
									}
								} else {
									throw haxe_Exception.thrown(conflictMessage);
								}
							}
							break;
						case 1:
							var otherItem = existingKey.item;
							if(kiss_Prelude.truthy(kiss_Prelude.areEqual(otherItem,item))) {
								return;
							} else {
								var _3FtPEPor6n2goByJkPkF15 = this.onBadShortcut;
								if(kiss_Prelude.truthy(_3FtPEPor6n2goByJkPkF15)) {
									var _vpgQGCKy1LmxRfibmBQ5T1 = _3FtPEPor6n2goByJkPkF15;
									if(kiss_Prelude.truthy(kiss_Prelude.isNull(_vpgQGCKy1LmxRfibmBQ5T1))) {
										throw haxe_Exception.thrown(conflictMessage);
									} else {
										var handler = _3FtPEPor6n2goByJkPkF15;
										handler(description,existingKey);
										return;
									}
								} else {
									throw haxe_Exception.thrown(conflictMessage);
								}
							}
							break;
						case 2:
							var innerPrefixMap = existingKey.keys;
							this.registerShortcut(keys,description,item,null,innerPrefixMap);
							break;
						}
					}
				}
			} else {
				var _8hdsjcjpxSYsdthwVh2WqS = this.onBadShortcut;
				if(kiss_Prelude.truthy(_8hdsjcjpxSYsdthwVh2WqS)) {
					var _4iQUcAERbdXQpbekA1UDMQ = _8hdsjcjpxSYsdthwVh2WqS;
					if(kiss_Prelude.truthy(kiss_Prelude.isNull(_4iQUcAERbdXQpbekA1UDMQ))) {
						throw haxe_Exception.thrown(conflictMessage);
					} else {
						var handler = _8hdsjcjpxSYsdthwVh2WqS;
						handler(description,existingKey);
						return;
					}
				} else {
					throw haxe_Exception.thrown(conflictMessage);
				}
			}
		} else if(kiss_Prelude.truthy(true)) {
			if(kiss_Prelude.truthy(keys)) {
				var innerPrefixMap = new haxe_ds_StringMap();
				var v = kiss_$tools_ShortcutKey.Prefix(innerPrefixMap);
				prefixMap.h[firstKey] = v;
				this.registerShortcut(keys,description,item,force,innerPrefixMap);
			} else {
				var v = kiss_$tools_ShortcutKey.Final(item);
				prefixMap.h[firstKey] = v;
			}
		}
	}
	,registerItem: function(description,item,force) {
		var _aj93QYcchW6PULCdSVJWKF = this.extractKeyboardShortcuts(description);
		if(kiss_Prelude.truthy(_aj93QYcchW6PULCdSVJWKF)) {
			var _9WEEew6ncH1JKfrFKFdq2p = _aj93QYcchW6PULCdSVJWKF;
			if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_9WEEew6ncH1JKfrFKFdq2p))) {
				var keyboardShortcut = _aj93QYcchW6PULCdSVJWKF;
				this.registerShortcut(keyboardShortcut,description,item,force);
			}
		}
	}
	,prefixMapToStrings: function(map) {
		var _g = new haxe_ds_StringMap();
		var h = map.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g_key = key;
			var _g_value = _g_h[key];
			var key1 = _g_key;
			var mapping = _g_value;
			var value;
			var _uhX32SpzzTpmaqk5KT9RPR = mapping;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_uhX32SpzzTpmaqk5KT9RPR))) {
				throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("case should never match pattern null","/home/nat/repos/kisslang/projects/kiss-tools/src/kiss_tools/KeyShortcutHandler.kiss:110:25: Assertion failed: \nFrom:[(never null)]",4));
			} else {
				switch(mapping._hx_index) {
				case 0:
					var _g1 = mapping.key;
					value = "cancel";
					break;
				case 1:
					var thing = mapping.item;
					value = Std.string(thing);
					break;
				case 2:
					var map = mapping.keys;
					var _g2 = [];
					var h = map.h;
					var elem_h = h;
					var elem_keys = Object.keys(h);
					var elem_length = elem_keys.length;
					var elem_current = 0;
					while(elem_current < elem_length) {
						var elem = elem_keys[elem_current++];
						_g2.push(elem);
					}
					value = _g2.join(", ");
					break;
				}
			}
			_g.h[key1] = value;
		}
		return _g;
	}
	,__class__: kiss_$tools_KeyShortcutHandler
};
var nat_Archive = function(archiveDir) {
	this.defaultInitializer = null;
	this.systems = [];
	var gitDir = kiss_Prelude.joinPath(archiveDir,".git");
	this.gitDir = kiss_Prelude.truthy(sys_FileSystem.exists(gitDir)) ? haxe_ds_Option.Some(gitDir) : haxe_ds_Option.None;
	var entryDir = kiss_Prelude.joinPath(archiveDir,"entries");
	var filesDir = kiss_Prelude.joinPath(archiveDir,"files");
	var _g1XiErUZGAr2fJPyhLZ7ck = sys_FileSystem.exists(archiveDir);
	if(!kiss_Prelude.truthy(_g1XiErUZGAr2fJPyhLZ7ck)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage(kiss_Prelude.add("Archive directory ",archiveDir == null ? "null" : "" + archiveDir," does not exist"),"/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/Archive.kiss:14:17: Assertion failed: \nFrom:[(assert (FileSystem.exists archiveDir) (the String (+ \"Archive directory \" (Std.string archiveDir) \" does not exist\")))]",4));
	}
	var _2kmSgWhX9Foxhhn4f3Qsga = sys_FileSystem.isDirectory(archiveDir);
	if(!kiss_Prelude.truthy(_2kmSgWhX9Foxhhn4f3Qsga)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage(kiss_Prelude.add("",archiveDir == null ? "null" : "" + archiveDir," is not a directory"),"/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/Archive.kiss:15:17: Assertion failed: \nFrom:[(assert (FileSystem.isDirectory archiveDir) (the String (+ \"\" (Std.string archiveDir) \" is not a directory\")))]",4));
	}
	sys_FileSystem.createDirectory(entryDir);
	sys_FileSystem.createDirectory(filesDir);
	var _vTJUADUBBygMJZu7Nf3qWA = this.gitDir;
	if(kiss_Prelude.truthy(_vTJUADUBBygMJZu7Nf3qWA)) {
		var _5HdxbLGd1Ked3zZeUjTr8q = _vTJUADUBBygMJZu7Nf3qWA;
		if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_5HdxbLGd1Ked3zZeUjTr8q))) {
			if(_vTJUADUBBygMJZu7Nf3qWA._hx_index == 0) {
				var gitDir = _vTJUADUBBygMJZu7Nf3qWA.v;
				kiss_Prelude.assertProcess("git",["pull"],[],true,archiveDir);
			}
		}
	}
	var entryFiles = js_node_Fs.readdirSync(entryDir);
	var _g = new haxe_ds_StringMap();
	var _g1 = 0;
	while(_g1 < entryFiles.length) {
		var file = entryFiles[_g1];
		++_g1;
		var key = haxe_io_Path.withoutExtension(file);
		var value = new tink_json_Parser0().parse(js_node_Fs.readFileSync(kiss_Prelude.joinPath(archiveDir,"entries",file),{ encoding : "utf8"}));
		_g.h[key] = value;
	}
	this.entries = _g;
	var playgroundsFile = kiss_Prelude.joinPath(archiveDir,"playgrounds.json");
	if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(playgroundsFile)))) {
		js_node_Fs.writeFileSync(playgroundsFile,"{\n\t\"default\": \"Playground-MAIN\",\n\t\"Playground-MAIN\": {\n\t\t\"catsMatch\": \"true\"\n\t}\n}\n");
	}
	this.playgrounds = JSON.parse(js_node_Fs.readFileSync(playgroundsFile,{ encoding : "utf8"}));
	this.archiveDir = archiveDir;
};
$hxClasses["nat.Archive"] = nat_Archive;
nat_Archive.__name__ = true;
nat_Archive.prototype = {
	systems: null
	,gitDir: null
	,entries: null
	,playgrounds: null
	,archiveDir: null
	,changePlaygrounds: function(change) {
		change(this.playgrounds);
		js_node_Fs.writeFileSync(kiss_Prelude.joinPath(this.archiveDir,"playgrounds.json"),JSON.stringify(this.playgrounds,null,"\t"));
		return this.gitSync();
	}
	,currentPlayground: function() {
		return this.playgrounds["default"];
	}
	,addSystem: function(system) {
		this.systems.push(system);
		return system;
	}
	,addAndProcessSystem: function(system,ui) {
		this.addSystem(system);
		this.refreshSystem(system);
		system.process(this,ui);
		return system;
	}
	,refreshSystem: function(system) {
		var h = this.entries.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g_key = key;
			var _g_value = _g_h[key];
			var id = _g_key;
			var e = _g_value;
			system.checkEntryInOrOut(this,e);
		}
		return null;
	}
	,forceProcessAll: function(ui) {
		var _g = 0;
		var _g1 = this.systems;
		while(_g < _g1.length) {
			var system = _g1[_g];
			++_g;
			this.refreshSystem(system);
		}
		return this.processSystems();
	}
	,processSystems: function(ui) {
		var _g = 0;
		var _g1 = this.systems;
		while(_g < _g1.length) {
			var system = _g1[_g];
			++_g;
			system.process(this,ui);
		}
		return null;
	}
	,defaultInitializer: null
	,createEntry: function(initializer) {
		var e = new nat_Entry();
		if(kiss_Prelude.truthy(this.defaultInitializer)) {
			this.defaultInitializer(e);
		}
		initializer(e);
		this.entries.h[e.id] = e;
		this.refreshEntry(e);
		return e;
	}
	,refreshEntry: function(e) {
		this._saveEntry(e);
		var _g = 0;
		var _g1 = this.systems;
		while(_g < _g1.length) {
			var system = _g1[_g];
			++_g;
			system.checkEntryInOrOut(this,e);
		}
		return null;
	}
	,gitSync: function() {
		var _gthis = this;
		var _5nvxoY18XFoW5eJwNxaeZu = this.gitDir;
		if(kiss_Prelude.truthy(_5nvxoY18XFoW5eJwNxaeZu)) {
			var _57LrPE593RqYMMf7RqaLby = _5nvxoY18XFoW5eJwNxaeZu;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_57LrPE593RqYMMf7RqaLby))) {
				return null;
			} else if(_5nvxoY18XFoW5eJwNxaeZu._hx_index == 0) {
				var gitDir = _5nvxoY18XFoW5eJwNxaeZu.v;
				var _hvsMWQGxHqkj2VPGjzd1kw = function(gitArgs) {
					return kiss_Prelude.assertProcess("git",gitArgs,[],true,_gthis.archiveDir);
				};
				if(kiss_Prelude.truthy(_hvsMWQGxHqkj2VPGjzd1kw)) {
					var _ujE5W3jNJ5QVQAHRiiDTb1 = _hvsMWQGxHqkj2VPGjzd1kw;
					if(kiss_Prelude.truthy(kiss_Prelude.isNull(_ujE5W3jNJ5QVQAHRiiDTb1))) {
						return null;
					} else {
						var gitDo = _hvsMWQGxHqkj2VPGjzd1kw;
						gitDo(["add","playgrounds.json"]);
						gitDo(["add","entries"]);
						gitDo(["add","files"]);
						gitDo(["commit","--no-verify","--allow-empty","-m",kiss_Prelude.add("",Std.string(new Date()),"")]);
						return gitDo(["push"]);
					}
				} else {
					return null;
				}
			} else {
				return null;
			}
		} else {
			return null;
		}
	}
	,_saveEntry: function(e) {
		js_node_Fs.writeFileSync(kiss_Prelude.joinPath(this.archiveDir,"entries",haxe_io_Path.withExtension(e.id,"json")),new tink_json_Writer1().write(e));
		return this.gitSync();
	}
	,fullString: function(e) {
		return JSON.stringify(e,null,"\t");
	}
	,filePath: function(file) {
		return kiss_Prelude.joinPath(this.archiveDir,"files",file);
	}
	,__class__: nat_Archive
};
var nat_CommandArgType = $hxEnums["nat.CommandArgType"] = { __ename__:true,__constructs__:null
	,SelectedEntry: {_hx_name:"SelectedEntry",_hx_index:0,__enum__:"nat.CommandArgType",toString:$estr}
	,SelectedEntries: ($_=function(min,max) { return {_hx_index:1,min:min,max:max,__enum__:"nat.CommandArgType",toString:$estr}; },$_._hx_name="SelectedEntries",$_.__params__ = ["min","max"],$_)
	,Text: ($_=function(maxLength) { return {_hx_index:2,maxLength:maxLength,__enum__:"nat.CommandArgType",toString:$estr}; },$_._hx_name="Text",$_.__params__ = ["maxLength"],$_)
	,VarText: ($_=function(maxLength) { return {_hx_index:3,maxLength:maxLength,__enum__:"nat.CommandArgType",toString:$estr}; },$_._hx_name="VarText",$_.__params__ = ["maxLength"],$_)
	,Number: ($_=function(min,max,inStepsOf) { return {_hx_index:4,min:min,max:max,inStepsOf:inStepsOf,__enum__:"nat.CommandArgType",toString:$estr}; },$_._hx_name="Number",$_.__params__ = ["min","max","inStepsOf"],$_)
	,Numbers: ($_=function(min,max,inStepsOf) { return {_hx_index:5,min:min,max:max,inStepsOf:inStepsOf,__enum__:"nat.CommandArgType",toString:$estr}; },$_._hx_name="Numbers",$_.__params__ = ["min","max","inStepsOf"],$_)
	,OneEntry: {_hx_name:"OneEntry",_hx_index:6,__enum__:"nat.CommandArgType",toString:$estr}
	,Entries: ($_=function(min,max) { return {_hx_index:7,min:min,max:max,__enum__:"nat.CommandArgType",toString:$estr}; },$_._hx_name="Entries",$_.__params__ = ["min","max"],$_)
	,TagsFromAll: {_hx_name:"TagsFromAll",_hx_index:8,__enum__:"nat.CommandArgType",toString:$estr}
	,TagsFromSelected: {_hx_name:"TagsFromSelected",_hx_index:9,__enum__:"nat.CommandArgType",toString:$estr}
	,Position: {_hx_name:"Position",_hx_index:10,__enum__:"nat.CommandArgType",toString:$estr}
};
nat_CommandArgType.__constructs__ = [nat_CommandArgType.SelectedEntry,nat_CommandArgType.SelectedEntries,nat_CommandArgType.Text,nat_CommandArgType.VarText,nat_CommandArgType.Number,nat_CommandArgType.Numbers,nat_CommandArgType.OneEntry,nat_CommandArgType.Entries,nat_CommandArgType.TagsFromAll,nat_CommandArgType.TagsFromSelected,nat_CommandArgType.Position];
var nat_ArchiveController = function(archive,ui) {
	this.playgroundSystem = null;
	var _gthis = this;
	this._selectedEntries = [];
	this.lastChangeSet = [];
	this.commands = new haxe_ds_StringMap();
	this.nameSystem = new nat_systems_NameSystem();
	this.archive = archive;
	this.ui = ui;
	ui.controller = this;
	archive.addAndProcessSystem(this.nameSystem,ui);
	archive.addSystem(new nat_systems_RemarkableAPISystem());
	archive.addSystem(new nat_systems_WikipediaImageSystem());
	archive.addSystem(new nat_systems_ImageAttachmentSystem());
	archive.addAndProcessSystem(new nat_systems_KeyShortcutSystem(this),ui);
	archive.addSystem(new nat_systems_DLSystem());
	archive.addSystem(new nat_systems_AutoStepperSystem());
	var colorEqual = function(c1,c2) {
		var _jBMrRPwnCThCazdQSqphgV = kiss_Prelude.areEqual(c1.r,c2.r);
		if(kiss_Prelude.truthy(_jBMrRPwnCThCazdQSqphgV)) {
			var _jiBbfb1PMkah5beyCt1ka9 = kiss_Prelude.areEqual(c1.g,c2.g);
			if(kiss_Prelude.truthy(_jiBbfb1PMkah5beyCt1ka9)) {
				var _2EdtFLTxrhfAnFQVHwiVrt = kiss_Prelude.areEqual(c1.b,c2.b);
				if(kiss_Prelude.truthy(_2EdtFLTxrhfAnFQVHwiVrt)) {
					var _wrPn9fTLvJuYKJMHST61vU = kiss_Prelude.areEqual(c1.a,c2.a);
					return _wrPn9fTLvJuYKJMHST61vU;
				} else {
					return _2EdtFLTxrhfAnFQVHwiVrt;
				}
			} else {
				return _jiBbfb1PMkah5beyCt1ka9;
			}
		} else {
			return _jBMrRPwnCThCazdQSqphgV;
		}
	};
	var colorsContain = function(cs,c1) {
		var _g = 0;
		while(_g < cs.length) {
			var c2 = cs[_g];
			++_g;
			if(kiss_Prelude.truthy(colorEqual(c2,c1))) {
				return true;
			}
		}
		return false;
	};
	var addColorTagSystems = function(info) {
		var _g = [];
		var h = info.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_h[elem_keys[elem_current++]];
			_g.push(elem);
		}
		var colors = _g;
		var h = info.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g_key = key;
			var _g_value = _g_h[key];
			var tagExp = _g_key;
			var color = [_g_value];
			archive.addSystem(new nat_systems_TagSystem(kiss_Prelude.add("ColorTagSystem{",tagExp == null ? "null" : "" + tagExp,"}"),tagExp,(function(color) {
				return function(archive,e,ui) {
					var addColorTagSystems = kiss_Prelude.truthy;
					var _cThmF5NT3mYmKd9CJ6E7T = !kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"ColorI"));
					var addColorTagSystems1;
					if(kiss_Prelude.truthy(_cThmF5NT3mYmKd9CJ6E7T)) {
						addColorTagSystems1 = _cThmF5NT3mYmKd9CJ6E7T;
					} else {
						var componentData = e.components.h["ColorI"];
						var _nrpAJafgu4VFtqxynui5cg = colorsContain(colors,new tink_json_Parser6().parse(componentData));
						addColorTagSystems1 = _nrpAJafgu4VFtqxynui5cg;
					}
					if(addColorTagSystems(addColorTagSystems1)) {
						return _gthis.AddColorIRGBA([e],color[0].r,color[0].g,color[0].b,color[0].a);
					} else {
						return null;
					}
				};
			})(color)));
		}
		return null;
	};
	var addColorTagSystems1 = addColorTagSystems;
	var _g = new haxe_ds_StringMap();
	_g.h["(or active enabled)"] = { r : 0, g : 255, b : 0, a : 255};
	_g.h["(or inactive disabled)"] = { r : 128, g : 128, b : 128, a : 255};
	_g.h["todo"] = { r : 255, g : 128, b : 0, a : 255};
	addColorTagSystems1(_g);
	var _tP8Y9KqRTtBjwEXvwDeURP = ui.playgroundSystem();
	if(kiss_Prelude.truthy(_tP8Y9KqRTtBjwEXvwDeURP)) {
		var _sin5QuZ4Re357ex4CrsdeA = _tP8Y9KqRTtBjwEXvwDeURP;
		if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_sin5QuZ4Re357ex4CrsdeA))) {
			var ps = _tP8Y9KqRTtBjwEXvwDeURP;
			this.playgroundSystem = ps;
			ps.setupProcess = true;
			archive.addAndProcessSystem(ps);
			ps.switchPlaygroundKey(archive.playgrounds["default"]);
		}
	}
	nat_ArchiveController.commandNames.push("Help");
	var v = { args : [], handler : $bind(this,this.Help)};
	this.commands.h["help"] = v;
	nat_ArchiveController.commandNames.push("SelectEntry");
	var v = { args : [{ name : "e", type : nat_CommandArgType.OneEntry}], handler : $bind(this,this.SelectEntry)};
	this.commands.h["selectentry"] = v;
	nat_ArchiveController.commandNames.push("AddSelectEntry");
	var v = { args : [{ name : "e", type : nat_CommandArgType.OneEntry}], handler : $bind(this,this.AddSelectEntry)};
	this.commands.h["addselectentry"] = v;
	nat_ArchiveController.commandNames.push("DeSelectEntry");
	var v = { args : [{ name : "e", type : nat_CommandArgType.OneEntry}], handler : $bind(this,this.DeSelectEntry)};
	this.commands.h["deselectentry"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectEntry");
	var v = { args : [{ name : "e", type : nat_CommandArgType.OneEntry}], handler : $bind(this,this.ToggleSelectEntry)};
	this.commands.h["toggleselectentry"] = v;
	nat_ArchiveController.commandNames.push("SelectEntries");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.Entries(null,null)}], handler : $bind(this,this.SelectEntries)};
	this.commands.h["selectentries"] = v;
	nat_ArchiveController.commandNames.push("AddSelectEntries");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.Entries(null,null)}], handler : $bind(this,this.AddSelectEntries)};
	this.commands.h["addselectentries"] = v;
	nat_ArchiveController.commandNames.push("DeSelectEntries");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.Entries(null,null)}], handler : $bind(this,this.DeSelectEntries)};
	this.commands.h["deselectentries"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectEntries");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.Entries(null,null)}], handler : $bind(this,this.ToggleSelectEntries)};
	this.commands.h["toggleselectentries"] = v;
	nat_ArchiveController.commandNames.push("SelectAllEntries");
	var v = { args : [], handler : $bind(this,this.SelectAllEntries)};
	this.commands.h["selectallentries"] = v;
	nat_ArchiveController.commandNames.push("AddSelectAllEntries");
	var v = { args : [], handler : $bind(this,this.AddSelectAllEntries)};
	this.commands.h["addselectallentries"] = v;
	nat_ArchiveController.commandNames.push("DeSelectAllEntries");
	var v = { args : [], handler : $bind(this,this.DeSelectAllEntries)};
	this.commands.h["deselectallentries"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectAllEntries");
	var v = { args : [], handler : $bind(this,this.ToggleSelectAllEntries)};
	this.commands.h["toggleselectallentries"] = v;
	nat_ArchiveController.commandNames.push("SelectById");
	var v = { args : [{ name : "id", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.SelectById)};
	this.commands.h["selectbyid"] = v;
	nat_ArchiveController.commandNames.push("AddSelectById");
	var v = { args : [{ name : "id", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddSelectById)};
	this.commands.h["addselectbyid"] = v;
	nat_ArchiveController.commandNames.push("DeSelectById");
	var v = { args : [{ name : "id", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.DeSelectById)};
	this.commands.h["deselectbyid"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectById");
	var v = { args : [{ name : "id", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.ToggleSelectById)};
	this.commands.h["toggleselectbyid"] = v;
	nat_ArchiveController.commandNames.push("SelectLastChangeSet");
	var v = { args : [], handler : $bind(this,this.SelectLastChangeSet)};
	this.commands.h["selectlastchangeset"] = v;
	nat_ArchiveController.commandNames.push("AddSelectLastChangeSet");
	var v = { args : [], handler : $bind(this,this.AddSelectLastChangeSet)};
	this.commands.h["addselectlastchangeset"] = v;
	nat_ArchiveController.commandNames.push("DeSelectLastChangeSet");
	var v = { args : [], handler : $bind(this,this.DeSelectLastChangeSet)};
	this.commands.h["deselectlastchangeset"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectLastChangeSet");
	var v = { args : [], handler : $bind(this,this.ToggleSelectLastChangeSet)};
	this.commands.h["toggleselectlastchangeset"] = v;
	nat_ArchiveController.commandNames.push("SelectByTags");
	var v = { args : [{ name : "tagsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.SelectByTags)};
	this.commands.h["selectbytags"] = v;
	nat_ArchiveController.commandNames.push("AddSelectByTags");
	var v = { args : [{ name : "tagsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddSelectByTags)};
	this.commands.h["addselectbytags"] = v;
	nat_ArchiveController.commandNames.push("DeSelectByTags");
	var v = { args : [{ name : "tagsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.DeSelectByTags)};
	this.commands.h["deselectbytags"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectByTags");
	var v = { args : [{ name : "tagsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.ToggleSelectByTags)};
	this.commands.h["toggleselectbytags"] = v;
	nat_ArchiveController.commandNames.push("SelectByComponents");
	var v = { args : [{ name : "componentsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.SelectByComponents)};
	this.commands.h["selectbycomponents"] = v;
	nat_ArchiveController.commandNames.push("AddSelectByComponents");
	var v = { args : [{ name : "componentsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddSelectByComponents)};
	this.commands.h["addselectbycomponents"] = v;
	nat_ArchiveController.commandNames.push("DeSelectByComponents");
	var v = { args : [{ name : "componentsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.DeSelectByComponents)};
	this.commands.h["deselectbycomponents"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectByComponents");
	var v = { args : [{ name : "componentsBoolExp", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.ToggleSelectByComponents)};
	this.commands.h["toggleselectbycomponents"] = v;
	nat_ArchiveController.commandNames.push("SelectByName");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.SelectByName)};
	this.commands.h["selectbyname"] = v;
	nat_ArchiveController.commandNames.push("AddSelectByName");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddSelectByName)};
	this.commands.h["addselectbyname"] = v;
	nat_ArchiveController.commandNames.push("DeSelectByName");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.DeSelectByName)};
	this.commands.h["deselectbyname"] = v;
	nat_ArchiveController.commandNames.push("ToggleSelectByName");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.ToggleSelectByName)};
	this.commands.h["toggleselectbyname"] = v;
	nat_ArchiveController.commandNames.push("Rename");
	var v = { args : [{ name : "e", type : nat_CommandArgType.SelectedEntry},{ name : "newName", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.Rename)};
	this.commands.h["rename"] = v;
	nat_ArchiveController.commandNames.push("PrintSelectedEntries");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)}], handler : $bind(this,this.PrintSelectedEntries)};
	this.commands.h["printselectedentries"] = v;
	nat_ArchiveController.commandNames.push("PrintComponent");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "componentType", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.PrintComponent)};
	this.commands.h["printcomponent"] = v;
	nat_ArchiveController.commandNames.push("RemoveComponent");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "componentType", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.RemoveComponent)};
	this.commands.h["removecomponent"] = v;
	nat_ArchiveController.commandNames.push("CreateEntry");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.CreateEntry)};
	this.commands.h["createentry"] = v;
	nat_ArchiveController.commandNames.push("CreateEntries");
	var v = { args : [{ name : "names", type : nat_CommandArgType.VarText(null)}], handler : $bind(this,this.CreateEntries)};
	this.commands.h["createentries"] = v;
	nat_ArchiveController.commandNames.push("CreateTaggedEntry");
	var v = { args : [{ name : "tags", type : nat_CommandArgType.TagsFromAll},{ name : "name", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.CreateTaggedEntry)};
	this.commands.h["createtaggedentry"] = v;
	nat_ArchiveController.commandNames.push("CreateTaggedEntries");
	var v = { args : [{ name : "tags", type : nat_CommandArgType.TagsFromAll},{ name : "names", type : nat_CommandArgType.VarText(null)}], handler : $bind(this,this.CreateTaggedEntries)};
	this.commands.h["createtaggedentries"] = v;
	nat_ArchiveController.commandNames.push("CreateCircleEntry");
	var v = { args : [{ name : "tags", type : nat_CommandArgType.VarText(null)},{ name : "radius", type : nat_CommandArgType.Number(0,null,null)}], handler : $bind(this,this.CreateCircleEntry)};
	this.commands.h["createcircleentry"] = v;
	nat_ArchiveController.commandNames.push("AddTags");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "tagsToAdd", type : nat_CommandArgType.TagsFromAll}], handler : $bind(this,this.AddTags)};
	this.commands.h["addtags"] = v;
	nat_ArchiveController.commandNames.push("RemoveTags");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "tagsToRemove", type : nat_CommandArgType.TagsFromSelected}], handler : $bind(this,this.RemoveTags)};
	this.commands.h["removetags"] = v;
	nat_ArchiveController.commandNames.push("AddRectangle");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "width", type : nat_CommandArgType.Number(0,null,null)},{ name : "height", type : nat_CommandArgType.Number(0,null,null)}], handler : $bind(this,this.AddRectangle)};
	this.commands.h["addrectangle"] = v;
	nat_ArchiveController.commandNames.push("CreateRectangleEntry");
	var v = { args : [{ name : "p1", type : nat_CommandArgType.Position},{ name : "p2", type : nat_CommandArgType.Position}], handler : $bind(this,this.CreateRectangleEntry)};
	this.commands.h["createrectangleentry"] = v;
	nat_ArchiveController.commandNames.push("AddDLURL");
	var v = { args : [{ name : "e", type : nat_CommandArgType.SelectedEntry},{ name : "url", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddDLURL)};
	this.commands.h["adddlurl"] = v;
	nat_ArchiveController.commandNames.push("AddYoutubeMusic");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)},{ name : "url", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddYoutubeMusic)};
	this.commands.h["addyoutubemusic"] = v;
	nat_ArchiveController.commandNames.push("AddKeyShortcut");
	var v = { args : [{ name : "e", type : nat_CommandArgType.SelectedEntry},{ name : "description", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddKeyShortcut)};
	this.commands.h["addkeyshortcut"] = v;
	nat_ArchiveController.commandNames.push("AddNATCommand");
	var v = { args : [{ name : "e", type : nat_CommandArgType.SelectedEntries(null,null)},{ name : "command", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.AddNATCommand)};
	this.commands.h["addnatcommand"] = v;
	nat_ArchiveController.commandNames.push("AddNATCommands");
	var v = { args : [{ name : "e", type : nat_CommandArgType.SelectedEntries(null,null)},{ name : "commands", type : nat_CommandArgType.VarText(null)}], handler : $bind(this,this.AddNATCommands)};
	this.commands.h["addnatcommands"] = v;
	nat_ArchiveController.commandNames.push("CreateShortcutEntry");
	var v = { args : [{ name : "description", type : nat_CommandArgType.Text(null)},{ name : "command", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.CreateShortcutEntry)};
	this.commands.h["createshortcutentry"] = v;
	nat_ArchiveController.commandNames.push("CreateMultiCommandShortcut");
	var v = { args : [{ name : "description", type : nat_CommandArgType.Text(null)},{ name : "commands", type : nat_CommandArgType.VarText(null)}], handler : $bind(this,this.CreateMultiCommandShortcut)};
	this.commands.h["createmulticommandshortcut"] = v;
	nat_ArchiveController.commandNames.push("AddFiles");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "files", type : nat_CommandArgType.VarText(null)}], handler : $bind(this,this.AddFiles)};
	this.commands.h["addfiles"] = v;
	nat_ArchiveController.commandNames.push("PinNextImage");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)}], handler : $bind(this,this.PinNextImage)};
	this.commands.h["pinnextimage"] = v;
	nat_ArchiveController.commandNames.push("PinPreviousImage");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)}], handler : $bind(this,this.PinPreviousImage)};
	this.commands.h["pinpreviousimage"] = v;
	nat_ArchiveController.commandNames.push("SetScale");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "scale", type : nat_CommandArgType.Number(0,null,null)}], handler : $bind(this,this.SetScale)};
	this.commands.h["setscale"] = v;
	nat_ArchiveController.commandNames.push("CreatePlayground");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)},{ name : "catsMatchExp", type : nat_CommandArgType.Text(null)},{ name : "defaultTags", type : nat_CommandArgType.TagsFromAll}], handler : $bind(this,this.CreatePlayground)};
	this.commands.h["createplayground"] = v;
	nat_ArchiveController.commandNames.push("SwitchPlayground");
	var v = { args : [{ name : "name", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.SwitchPlayground)};
	this.commands.h["switchplayground"] = v;
	nat_ArchiveController.commandNames.push("ChoosePlayground");
	var v = { args : [], handler : $bind(this,this.ChoosePlayground)};
	this.commands.h["chooseplayground"] = v;
	nat_ArchiveController.commandNames.push("AddConnections");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "entriesToConnect", type : nat_CommandArgType.Entries(1,null)}], handler : $bind(this,this.AddConnections)};
	this.commands.h["addconnections"] = v;
	nat_ArchiveController.commandNames.push("RemoveConnections");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "entriesToRemove", type : nat_CommandArgType.Entries(1,null)}], handler : $bind(this,this.RemoveConnections)};
	this.commands.h["removeconnections"] = v;
	nat_ArchiveController.commandNames.push("AddColorFRGBA");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "r", type : nat_CommandArgType.Number(0,1,null)},{ name : "g", type : nat_CommandArgType.Number(0,1,null)},{ name : "b", type : nat_CommandArgType.Number(0,1,null)},{ name : "a", type : nat_CommandArgType.Number(0,1,null)}], handler : $bind(this,this.AddColorFRGBA)};
	this.commands.h["addcolorfrgba"] = v;
	nat_ArchiveController.commandNames.push("AddColorIRGBA");
	var v = { args : [{ name : "entries", type : nat_CommandArgType.SelectedEntries(1,null)},{ name : "r", type : nat_CommandArgType.Number(0,255,1)},{ name : "g", type : nat_CommandArgType.Number(0,255,1)},{ name : "b", type : nat_CommandArgType.Number(0,255,1)},{ name : "a", type : nat_CommandArgType.Number(0,255,1)}], handler : $bind(this,this.AddColorIRGBA)};
	this.commands.h["addcolorirgba"] = v;
	nat_ArchiveController.commandNames.push("VibeCheck");
	var v = { args : [{ name : "accounts", type : nat_CommandArgType.Numbers(null,null,null)},{ name : "monthlyExpenses", type : nat_CommandArgType.Numbers(null,null,null)},{ name : "energy", type : nat_CommandArgType.Number(1,10,1)},{ name : "hope", type : nat_CommandArgType.Number(1,10,1)},{ name : "note", type : nat_CommandArgType.Text(null)}], handler : $bind(this,this.VibeCheck)};
	this.commands.h["vibecheck"] = v;
};
$hxClasses["nat.ArchiveController"] = nat_ArchiveController;
nat_ArchiveController.__name__ = true;
nat_ArchiveController._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_ArchiveController.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_ArchiveController.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_ArchiveController.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_ArchiveController.tagList(e));
};
nat_ArchiveController.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_ArchiveController.componentList(e));
};
nat_ArchiveController.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_ArchiveController.tagList(e),nat_ArchiveController.componentList(e)));
};
nat_ArchiveController.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _k7xSn2JNAFNcLEh6QwAh15 = null;
	archive.refreshEntry(e);
	return _k7xSn2JNAFNcLEh6QwAh15;
};
nat_ArchiveController.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _dCdzQ3m66pSgehzzt9szVJ = null;
	archive.refreshEntry(e);
	return _dCdzQ3m66pSgehzzt9szVJ;
};
nat_ArchiveController.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _mybJqtQnZ6N8xCMcoRXVCy = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _mybJqtQnZ6N8xCMcoRXVCy;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_ArchiveController._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _fEXoNNiJfKSP5DK9ivNxN = e1;
		archive1.refreshEntry(e1);
		return _fEXoNNiJfKSP5DK9ivNxN;
	}
};
nat_ArchiveController.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _hEhKDWHjWyQ4XNRqHEifqd = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _hEhKDWHjWyQ4XNRqHEifqd;
	} else {
		return null;
	}
};
nat_ArchiveController.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_ArchiveController.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _rmA5YdTx6xtrmR6ZgeFjXf = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_ArchiveController._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _invHsQL3B42GyMYJFUmhaZ = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_ArchiveController.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _6LvW6YwA7nTpz7AW475qF = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_ArchiveController.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_ArchiveController.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_ArchiveController.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_ArchiveController._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _gEp9XQ4zTYfiTf1aVJ1im4 = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_ArchiveController.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_ArchiveController._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _6FC7aKZwQARj3ztoubHXRG = e1;
	archive1.refreshEntry(e1);
	return _6FC7aKZwQARj3ztoubHXRG;
};
nat_ArchiveController.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_ArchiveController._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _5cdspCmYg2tCSJHqMWxi9G = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_ArchiveController.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_ArchiveController._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _iMP4LQMVcj95RMKwN8rMr4 = e1;
	archive1.refreshEntry(e1);
	return _iMP4LQMVcj95RMKwN8rMr4;
};
nat_ArchiveController.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _i8Goz2iGfFepFvxszDJGKH = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_i8Goz2iGfFepFvxszDJGKH)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _a3eVB3nCDWWZmtbkibycQP = func.apply(o,_g);
		return _a3eVB3nCDWWZmtbkibycQP;
	} else {
		return _i8Goz2iGfFepFvxszDJGKH;
	}
};
nat_ArchiveController.readString = function(stream) {
	var terminator;
	var _g = stream.takeChars(1);
	var _uF81WFGght9FpUAVy1LH8z = _g;
	if(kiss_Prelude.truthy(kiss_Prelude.isNull(_uF81WFGght9FpUAVy1LH8z))) {
		throw haxe_Exception.thrown("string arg must start with \" or '");
	} else if(_g._hx_index == 0) {
		switch(_g.v) {
		case "\"":
			terminator = "\"";
			break;
		case "'":
			terminator = "'";
			break;
		default:
			throw haxe_Exception.thrown("string arg must start with \" or '");
		}
	} else {
		throw haxe_Exception.thrown("string arg must start with \" or '");
	}
	var _g = stream.takeUntilAndDrop(terminator);
	var _oeVZCyJ4yoELSUNAX4DXnk = _g;
	if(kiss_Prelude.truthy(kiss_Prelude.isNull(_oeVZCyJ4yoELSUNAX4DXnk))) {
		throw haxe_Exception.thrown(kiss_Prelude.add("string arg must end with ",terminator == null ? "null" : "" + terminator,""));
	} else if(_g._hx_index == 0) {
		var s = _g.v;
		return s;
	} else {
		throw haxe_Exception.thrown(kiss_Prelude.add("string arg must end with ",terminator == null ? "null" : "" + terminator,""));
	}
};
nat_ArchiveController.readNumber = function(stream) {
	var x;
	var _g = stream.takeUntilOneOf([" "],true);
	var _8yv4WgHZhvacYoxXHp5Sev = _g;
	if(kiss_Prelude.truthy(kiss_Prelude.isNull(_8yv4WgHZhvacYoxXHp5Sev))) {
		x = "";
	} else if(_g._hx_index == 0) {
		var f = _g.v;
		x = f;
	} else {
		x = "";
	}
	return parseFloat(x);
};
nat_ArchiveController.prototype = {
	_collectAndValidateArg: function(arg,stream,continuation) {
		var _gthis = this;
		var _g = arg.type;
		var _tFeDVu6Jq3uVsssgbLfRL4 = _g;
		if(kiss_Prelude.truthy(kiss_Prelude.isNull(_tFeDVu6Jq3uVsssgbLfRL4))) {
			throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("case should never match pattern null","/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/ArchiveController.kiss:152:9: Assertion failed: \nFrom:[(never null)]",4));
		} else {
			switch(_g._hx_index) {
			case 0:
				if(kiss_Prelude.truthy(kiss_Prelude.areEqual(1,this._selectedEntries.length))) {
					continuation(this.getSelectedEntries()[0]);
				} else {
					this.ui.reportError(kiss_Prelude.add("The requested command expects 1 entry to be selected. You have selected: ",Std.string(this._selectedEntries.length),""));
				}
				break;
			case 1:
				var min = _g.min;
				var max = _g.max;
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(min))) {
					min = 0;
				}
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(max))) {
					max = Lambda.count(this.archive.entries);
				}
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.lesserEqual(min,this._selectedEntries.length,max)))) {
					this.ui.reportError(kiss_Prelude.add("The requested command expects between ",min == null ? "null" : "" + min," and ",max == null ? "null" : "" + max," entries to be selected. You have selected: ",Std.string(this._selectedEntries.length),""));
				} else {
					continuation(this.getSelectedEntries());
				}
				break;
			case 2:
				var maxLength = _g.maxLength;
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(maxLength))) {
					maxLength = Infinity;
				}
				stream.dropWhitespace();
				var trySubmit = function(text) {
					stream.dropWhitespace();
					if(kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.lesserEqual(text.length,maxLength)))) {
						_gthis.ui.reportError(kiss_Prelude.add("The requested command expected a string up to ",maxLength == null ? "null" : "" + maxLength," characters long. You entered: ",text.length == null ? "null" : "" + text.length," characters"));
					} else {
						continuation(text);
					}
				};
				var tmp = kiss_Prelude.truthy;
				var _mP2LodSJrUgX3VgpyuWmP2 = stream.isEmpty();
				var tmp1;
				if(kiss_Prelude.truthy(_mP2LodSJrUgX3VgpyuWmP2)) {
					tmp1 = _mP2LodSJrUgX3VgpyuWmP2;
				} else {
					var _tPtW4E2GMrrGUXbTZHuZS1 = stream.dropStringIf("_");
					tmp1 = _tPtW4E2GMrrGUXbTZHuZS1;
				}
				if(tmp(tmp1)) {
					this.ui.enterText(kiss_Prelude.add("",arg.name == null ? "null" : "" + arg.name," (up to ",maxLength == null ? "null" : "" + maxLength," characters):"),trySubmit,maxLength);
				} else {
					trySubmit(nat_ArchiveController.readString(stream));
				}
				break;
			case 3:
				var maxLength1 = _g.maxLength;
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(maxLength1))) {
					maxLength1 = Infinity;
				}
				stream.dropWhitespace();
				var collectedText = [];
				var enterTextAgain = null;
				enterTextAgain = function() {
					var trySubmit = function(text) {
						stream.dropWhitespace();
						if(kiss_Prelude.truthy(!kiss_Prelude.truthy(text))) {
							continuation(collectedText);
						} else if(kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.lesserEqual(text.length,maxLength1)))) {
							_gthis.ui.reportError(kiss_Prelude.add("The requested command expected a list of strings up to ",maxLength1 == null ? "null" : "" + maxLength1," characters long. You entered: ",text.length == null ? "null" : "" + text.length," characters"));
						} else {
							collectedText.push(text);
							enterTextAgain();
						}
					};
					var enterTextAgain1 = kiss_Prelude.truthy;
					var _u24RUA383hGVdJin3ygUCX = stream.isEmpty();
					var enterTextAgain2;
					if(kiss_Prelude.truthy(_u24RUA383hGVdJin3ygUCX)) {
						enterTextAgain2 = _u24RUA383hGVdJin3ygUCX;
					} else {
						var _a2XWt7o6R7ctEzAwj2axTu = stream.dropStringIf("_");
						enterTextAgain2 = _a2XWt7o6R7ctEzAwj2axTu;
					}
					if(enterTextAgain1(enterTextAgain2)) {
						_gthis.ui.enterText(kiss_Prelude.add("",arg.name == null ? "null" : "" + arg.name," (up to ",maxLength1 == null ? "null" : "" + maxLength1," characters):"),trySubmit,maxLength1);
					} else {
						trySubmit(nat_ArchiveController.readString(stream));
					}
				};
				enterTextAgain();
				break;
			case 4:
				var min = _g.min;
				var max = _g.max;
				var inStepsOf = _g.inStepsOf;
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(min))) {
					min = -Infinity;
				}
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(max))) {
					max = Infinity;
				}
				stream.dropWhitespace();
				var prompt = kiss_Prelude.add("",arg.name == null ? "null" : "" + arg.name," (",min == null ? "null" : "" + min,"-",max == null ? "null" : "" + max,"");
				if(kiss_Prelude.truthy(inStepsOf)) {
					prompt = kiss_Prelude.add(prompt,kiss_Prelude.add(" in steps of ",inStepsOf == null ? "null" : "" + inStepsOf,""));
				}
				prompt = kiss_Prelude.add(prompt,"):");
				var trySubmit1 = function(number) {
					stream.dropWhitespace();
					var minMaxError = kiss_Prelude.add("The requested command expected a number between ",min == null ? "null" : "" + min," and ",max == null ? "null" : "" + max,"");
					var stepError = kiss_Prelude.add("",minMaxError == null ? "null" : "" + minMaxError," in steps of ",inStepsOf == null ? "null" : "" + inStepsOf,"");
					var youEntered = kiss_Prelude.add(". You entered: ",number == null ? "null" : "" + number,"");
					var trySubmit = kiss_Prelude.truthy;
					var _qx1p2XCdBrfJuHbzQCMbfV = !kiss_Prelude.truthy(kiss_Prelude.lesserEqual(min,number,max));
					var trySubmit1;
					if(kiss_Prelude.truthy(_qx1p2XCdBrfJuHbzQCMbfV)) {
						trySubmit1 = _qx1p2XCdBrfJuHbzQCMbfV;
					} else {
						var _gi51dduYCaXjRszC5ovtWC = inStepsOf;
						var _6rYHs1gLKzorUbTAKxo8ib;
						if(kiss_Prelude.truthy(_gi51dduYCaXjRszC5ovtWC)) {
							var _vUvkeag9pWQW7vVrmBhYNj = !kiss_Prelude.truthy(kiss_Prelude.areEqual(0,kiss_Prelude.mod(kiss_Prelude.subtract(number,min),inStepsOf)));
							_6rYHs1gLKzorUbTAKxo8ib = _vUvkeag9pWQW7vVrmBhYNj;
						} else {
							_6rYHs1gLKzorUbTAKxo8ib = _gi51dduYCaXjRszC5ovtWC;
						}
						trySubmit1 = _6rYHs1gLKzorUbTAKxo8ib;
					}
					if(trySubmit(trySubmit1)) {
						if(kiss_Prelude.truthy(inStepsOf)) {
							_gthis.ui.reportError(kiss_Prelude.add("",stepError == null ? "null" : "" + stepError,"",youEntered == null ? "null" : "" + youEntered,""));
						} else {
							_gthis.ui.reportError(kiss_Prelude.add("",minMaxError == null ? "null" : "" + minMaxError,"",youEntered == null ? "null" : "" + youEntered,""));
						}
					} else {
						continuation(number);
					}
				};
				var tmp = kiss_Prelude.truthy;
				var _gA3imQgR8wf2d3k4aXeZCm = stream.isEmpty();
				var tmp1;
				if(kiss_Prelude.truthy(_gA3imQgR8wf2d3k4aXeZCm)) {
					tmp1 = _gA3imQgR8wf2d3k4aXeZCm;
				} else {
					var _bSKUq4GKAHGPLyLiUFQz59 = stream.dropStringIf("_");
					tmp1 = _bSKUq4GKAHGPLyLiUFQz59;
				}
				if(tmp(tmp1)) {
					this.ui.enterNumber(prompt,trySubmit1,min,max,inStepsOf);
				} else {
					trySubmit1(nat_ArchiveController.readNumber(stream));
				}
				break;
			case 5:
				var min1 = _g.min;
				var max1 = _g.max;
				var inStepsOf1 = _g.inStepsOf;
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(min1))) {
					min1 = -Infinity;
				}
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(max1))) {
					max1 = Infinity;
				}
				stream.dropWhitespace();
				var prompt = kiss_Prelude.add("",arg.name == null ? "null" : "" + arg.name," (",min1 == null ? "null" : "" + min1,"-",max1 == null ? "null" : "" + max1,"");
				var collectedNumbers = [];
				if(kiss_Prelude.truthy(inStepsOf1)) {
					prompt = kiss_Prelude.add(prompt,kiss_Prelude.add(" in steps of ",inStepsOf1 == null ? "null" : "" + inStepsOf1,""));
				}
				prompt = kiss_Prelude.add(prompt,"):");
				var enterNumAgain = null;
				enterNumAgain = function() {
					var trySubmit = function(number) {
						stream.dropWhitespace();
						var minMaxError = kiss_Prelude.add("The requested command expected numbers between ",min1 == null ? "null" : "" + min1," and ",max1 == null ? "null" : "" + max1,"");
						var stepError = kiss_Prelude.add("",minMaxError == null ? "null" : "" + minMaxError," in steps of ",inStepsOf1 == null ? "null" : "" + inStepsOf1,"");
						var youEntered = kiss_Prelude.add(". You entered: ",number == null ? "null" : "" + number,"");
						if(kiss_Prelude.truthy(isNaN(number))) {
							continuation(collectedNumbers);
						} else {
							var trySubmit = kiss_Prelude.truthy;
							var _61cc7xGpLc2Sv7TxqV2JXw = !kiss_Prelude.truthy(kiss_Prelude.lesserEqual(min1,number,max1));
							var trySubmit1;
							if(kiss_Prelude.truthy(_61cc7xGpLc2Sv7TxqV2JXw)) {
								trySubmit1 = _61cc7xGpLc2Sv7TxqV2JXw;
							} else {
								var _kU1YkVEndKdXsVDjdfxtHx = inStepsOf1;
								var _vmPAFhzAvhkq1fMnAKDUEs;
								if(kiss_Prelude.truthy(_kU1YkVEndKdXsVDjdfxtHx)) {
									var _sj1wMhAAiCb2sB8bqHsdqL = !kiss_Prelude.truthy(kiss_Prelude.areEqual(0,kiss_Prelude.mod(kiss_Prelude.subtract(number,min1),inStepsOf1)));
									_vmPAFhzAvhkq1fMnAKDUEs = _sj1wMhAAiCb2sB8bqHsdqL;
								} else {
									_vmPAFhzAvhkq1fMnAKDUEs = _kU1YkVEndKdXsVDjdfxtHx;
								}
								trySubmit1 = _vmPAFhzAvhkq1fMnAKDUEs;
							}
							if(trySubmit(trySubmit1)) {
								if(kiss_Prelude.truthy(inStepsOf1)) {
									_gthis.ui.reportError(kiss_Prelude.add("",stepError == null ? "null" : "" + stepError,"",youEntered == null ? "null" : "" + youEntered,""));
								} else {
									_gthis.ui.reportError(kiss_Prelude.add("",minMaxError == null ? "null" : "" + minMaxError,"",youEntered == null ? "null" : "" + youEntered,""));
								}
							} else {
								collectedNumbers.push(number);
								enterNumAgain();
							}
						}
					};
					var enterNumAgain1 = kiss_Prelude.truthy;
					var _7JnBEeKkGZejhC1mYtdZeK = stream.isEmpty();
					var enterNumAgain2;
					if(kiss_Prelude.truthy(_7JnBEeKkGZejhC1mYtdZeK)) {
						enterNumAgain2 = _7JnBEeKkGZejhC1mYtdZeK;
					} else {
						var _jS4DW67jbSCrt2PLAWw16t = stream.dropStringIf("_");
						enterNumAgain2 = _jS4DW67jbSCrt2PLAWw16t;
					}
					if(enterNumAgain1(enterNumAgain2)) {
						_gthis.ui.enterNumber(prompt,trySubmit,min1,max1,inStepsOf1,true);
					} else {
						trySubmit(nat_ArchiveController.readNumber(stream));
					}
				};
				enterNumAgain();
				break;
			case 6:
				this.ui.chooseEntry(kiss_Prelude.add("",arg.name == null ? "null" : "" + arg.name,":"),this.archive,continuation);
				break;
			case 7:
				var min2 = _g.min;
				var max2 = _g.max;
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(min2))) {
					min2 = 1;
				}
				if(kiss_Prelude.truthy(!kiss_Prelude.truthy(max2))) {
					max2 = Lambda.count(this.archive.entries);
				}
				this.ui.chooseEntries(kiss_Prelude.add("",arg.name == null ? "null" : "" + arg.name,":"),this.archive,function(entries) {
					var tmp = kiss_Prelude.truthy;
					var _vPJvdp3FrdsWcA6mAg3gZ9 = kiss_Prelude.greaterThan(min2,entries.length);
					var tmp1;
					if(kiss_Prelude.truthy(_vPJvdp3FrdsWcA6mAg3gZ9)) {
						tmp1 = _vPJvdp3FrdsWcA6mAg3gZ9;
					} else {
						var _awZi1XfqTFrocpDBNdrHmA = kiss_Prelude.lessThan(max2,entries.length);
						tmp1 = _awZi1XfqTFrocpDBNdrHmA;
					}
					if(tmp(tmp1)) {
						_gthis.ui.reportError(kiss_Prelude.add("The requested command expects between ",min2 == null ? "null" : "" + min2," and ",max2 == null ? "null" : "" + max2," entries. You chose: ",entries.length == null ? "null" : "" + entries.length,""));
					} else {
						continuation(entries);
					}
				},min2,max2);
				break;
			case 8:case 9:
				this.chooseFromTags(arg.type,continuation);
				break;
			case 10:
				this.ui.choosePosition(kiss_Prelude.add("",arg.name == null ? "null" : "" + arg.name,":"),continuation);
				break;
			}
		}
	}
	,allTags: function(entries) {
		var _3hKfdBWnGpijxendEyEdQ7 = entries;
		var entries;
		if(kiss_Prelude.truthy(_3hKfdBWnGpijxendEyEdQ7)) {
			entries = _3hKfdBWnGpijxendEyEdQ7;
		} else {
			var _g = [];
			var h = this.archive.entries.h;
			var elem_h = h;
			var elem_keys = Object.keys(h);
			var elem_length = elem_keys.length;
			var elem_current = 0;
			while(elem_current < elem_length) {
				var elem = elem_h[elem_keys[elem_current++]];
				_g.push(elem);
			}
			var _pfL2tUQs8A3bmSYtgnt8Hd = _g;
			entries = _pfL2tUQs8A3bmSYtgnt8Hd;
		}
		var tags_h = Object.create(null);
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
				var componentData = e.components.h["Tags"];
				var h = new tink_json_Parser1().parse(componentData).h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var key = _g_keys[_g_current++];
					var _g_key = key;
					var _g_value = _g_h[key];
					var tag = _g_key;
					var _ = _g_value;
					tags_h[tag] = 1;
				}
			}
		}
		var _g = [];
		var h = tags_h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return kiss_Prelude.sort(_g);
	}
	,allSelectedTags: function() {
		return this.allTags(this._selectedEntries);
	}
	,chooseFromTags: function(type,cc,tagsToChooseFrom,tagsChosen) {
		var _gthis = this;
		var _7DyhPHzWgH8ZEhgPQg9Zdr = tagsToChooseFrom;
		var tagsToChooseFrom;
		if(kiss_Prelude.truthy(_7DyhPHzWgH8ZEhgPQg9Zdr)) {
			tagsToChooseFrom = _7DyhPHzWgH8ZEhgPQg9Zdr;
		} else {
			var _stFiT4EDnTnH4k5mRx8QjV = kiss_Prelude.concat;
			var _stFiT4EDnTnH4k5mRx8QjV1 = ["CONFIRM"];
			var _p5b9Gs1Hr97TjdJGaD1MfS = type;
			var _stFiT4EDnTnH4k5mRx8QjV2;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_p5b9Gs1Hr97TjdJGaD1MfS))) {
				throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("case should never match pattern otherwise","/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/ArchiveController.kiss:173:29: Assertion failed: \nFrom:[(never otherwise)]",4));
			} else {
				switch(type._hx_index) {
				case 8:
					_stFiT4EDnTnH4k5mRx8QjV2 = kiss_Prelude.concat(["DEFINE NEW TAG"],this.allTags());
					break;
				case 9:
					_stFiT4EDnTnH4k5mRx8QjV2 = this.allSelectedTags();
					break;
				default:
					throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("case should never match pattern otherwise","/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/ArchiveController.kiss:173:29: Assertion failed: \nFrom:[(never otherwise)]",4));
				}
			}
			var _stFiT4EDnTnH4k5mRx8QjV3 = _stFiT4EDnTnH4k5mRx8QjV(_stFiT4EDnTnH4k5mRx8QjV1,_stFiT4EDnTnH4k5mRx8QjV2);
			tagsToChooseFrom = _stFiT4EDnTnH4k5mRx8QjV3;
		}
		var _fa8xAnnDjfYRXKHqmh3w81 = tagsChosen;
		var tagsChosen;
		if(kiss_Prelude.truthy(_fa8xAnnDjfYRXKHqmh3w81)) {
			tagsChosen = _fa8xAnnDjfYRXKHqmh3w81;
		} else {
			var _qC3DXrqazxbL6YNrjJjib7 = [];
			tagsChosen = _qC3DXrqazxbL6YNrjJjib7;
		}
		this.ui.chooseBetweenStrings("Tags:",tagsToChooseFrom,function(choice) {
			var _8ZVziXWDjWbb2EwR9VkYMg = choice;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_8ZVziXWDjWbb2EwR9VkYMg))) {
				throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("case should never match pattern null","/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/ArchiveController.kiss:189:17: Assertion failed: \nFrom:[(never null)]",4));
			} else {
				switch(choice) {
				case "CONFIRM":
					cc(tagsChosen);
					break;
				case "DEFINE NEW TAG":
					_gthis.ui.enterText("New tag (must be legal as a haxe var name):",function(newTag) {
						tagsChosen.push(newTag);
						_gthis.chooseFromTags(type,cc,tagsToChooseFrom,tagsChosen);
					},Infinity);
					break;
				default:
					var other = choice;
					HxOverrides.remove(tagsToChooseFrom,other);
					tagsChosen.push(other);
					_gthis.chooseFromTags(type,cc,tagsToChooseFrom,tagsChosen);
				}
			}
		});
	}
	,_composeArgCollector: function(collectedArgs,arg,stream,lastCollector) {
		var _gthis = this;
		return function() {
			_gthis._collectAndValidateArg(arg,stream,function(argValue) {
				collectedArgs.push(argValue);
				lastCollector();
			});
		};
	}
	,tryRunCommand: function(command,doAfter) {
		var parts = command.split(" ");
		var commandName = parts.shift();
		var stream = kiss_Stream.fromString(parts.join(" "));
		var lowerCommandName = commandName.toLowerCase();
		if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(this.commands.h,lowerCommandName))) {
			this._runCommand(this.commands.h[lowerCommandName],stream,doAfter);
		} else {
			this.ui.reportError(kiss_Prelude.add("",commandName == null ? "null" : "" + commandName," is not a valid command"));
		}
	}
	,tryRunCommands: function(commands) {
		var _gthis = this;
		if(kiss_Prelude.truthy(commands)) {
			this.tryRunCommand(commands.shift(),function() {
				_gthis.tryRunCommands(commands);
			});
		}
	}
	,_runCommand: function(command,stream,doAfter) {
		var _gthis = this;
		var collectedArgs = [];
		var lastCollector = function() {
			var result = command.handler.apply(null,collectedArgs);
			var _9ak1G2YgZQp9uCuW1HVAGL = !kiss_Prelude.truthy(kiss_Prelude.isNull(result));
			if(!kiss_Prelude.truthy(_9ak1G2YgZQp9uCuW1HVAGL)) {
				throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("Command implementation forgot to return a ChangeSet","/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/ArchiveController.kiss:230:25: Assertion failed: \nFrom:[(assert (not (Prelude.isNull result)) \"Command implementation forgot to return a ChangeSet\")]",4));
			}
			_gthis.lastChangeSet = result;
			if(kiss_Prelude.truthy(_gthis.lastChangeSet)) {
				var _g = 0;
				var _g1 = _gthis.lastChangeSet;
				while(_g < _g1.length) {
					var e = _g1[_g];
					++_g;
					var _79MJUgkKF7y5PSWvmr6Nhe = e;
					var _dDHrg6XYdcW9jDjGVKAGcM;
					if(kiss_Prelude.truthy(_79MJUgkKF7y5PSWvmr6Nhe)) {
						var _qfWD237zoGPRGEJxKDerdg = nat_ArchiveController.isEntry(e);
						_dDHrg6XYdcW9jDjGVKAGcM = _qfWD237zoGPRGEJxKDerdg;
					} else {
						_dDHrg6XYdcW9jDjGVKAGcM = _79MJUgkKF7y5PSWvmr6Nhe;
					}
					if(!kiss_Prelude.truthy(_dDHrg6XYdcW9jDjGVKAGcM)) {
						throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("Lib function forgot to return the Entry that was modified","/home/nat/repos/kisslang/projects/nat-archive-tool/src/nat/ArchiveController.kiss:235:33: Assertion failed: \nFrom:[(assert (and e (isEntry e)) \"Lib function forgot to return the Entry that was modified\")]",4));
					}
				}
				var _g = 0;
				var _g1 = _gthis.lastChangeSet;
				while(_g < _g1.length) {
					var e = _g1[_g];
					++_g;
					_gthis.archive.refreshEntry(e);
				}
				_gthis.ui.handleChanges(_gthis.archive,_gthis.lastChangeSet);
				_gthis.archive.processSystems();
				if(kiss_Prelude.truthy(doAfter)) {
					doAfter();
				}
			}
		};
		var _g = 0;
		var _g1 = kiss_Prelude.reverse(command.args);
		while(_g < _g1.length) {
			var arg = _g1[_g];
			++_g;
			lastCollector = this._composeArgCollector(collectedArgs,arg,stream,lastCollector);
		}
		lastCollector();
	}
	,isSelected: function(e) {
		return !kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,this._selectedEntries.indexOf(e)));
	}
	,getSelectedEntries: function() {
		return this._selectedEntries.slice();
	}
	,playgroundSystem: null
	,typeCommand: function() {
		var _gthis = this;
		if(kiss_Prelude.truthy(this.ui.shortcutHandler)) {
			this.ui.shortcutHandler.cancel();
		}
		this.ui.enterText("Command:",function(command) {
			_gthis.tryRunCommand(command);
		},Infinity);
	}
	,_selectedEntries: null
	,lastChangeSet: null
	,commands: null
	,nameSystem: null
	,archive: null
	,ui: null
	,Help: function() {
		this.ui.displayMessage(kiss_Prelude.add("Available commands:\n",nat_ArchiveController.commandNames.join("\n")));
		return [];
	}
	,selectionCommand: function(entries) {
		var lastSelectedEntries = this._selectedEntries;
		this._selectedEntries = entries;
		this.ui.onSelectionChanged(entries,lastSelectedEntries);
		return [];
	}
	,addSelectionCommand: function(entries) {
		var lastSelectedEntries = this._selectedEntries.slice();
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(this._selectedEntries.indexOf(e) != -1))) {
				this._selectedEntries.push(e);
			}
		}
		this.ui.onSelectionChanged(this._selectedEntries,lastSelectedEntries);
		return [];
	}
	,deSelectionCommand: function(entries) {
		var lastSelectedEntries = this._selectedEntries.slice();
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			HxOverrides.remove(this._selectedEntries,e);
		}
		this.ui.onSelectionChanged(this._selectedEntries,lastSelectedEntries);
		return [];
	}
	,toggleSelectionCommand: function(entries) {
		var lastSelectedEntries = this._selectedEntries.slice();
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(HxOverrides.remove(this._selectedEntries,e)))) {
				this._selectedEntries.push(e);
			}
		}
		this.ui.onSelectionChanged(this._selectedEntries,lastSelectedEntries);
		return [];
	}
	,SelectEntry: function(e) {
		return this.selectionCommand([e]);
	}
	,AddSelectEntry: function(e) {
		return this.addSelectionCommand([e]);
	}
	,DeSelectEntry: function(e) {
		return this.deSelectionCommand([e]);
	}
	,ToggleSelectEntry: function(e) {
		return this.toggleSelectionCommand([e]);
	}
	,SelectEntries: function(entries) {
		return this.selectionCommand(entries);
	}
	,AddSelectEntries: function(entries) {
		return this.addSelectionCommand(entries);
	}
	,DeSelectEntries: function(entries) {
		return this.deSelectionCommand(entries);
	}
	,ToggleSelectEntries: function(entries) {
		return this.toggleSelectionCommand(entries);
	}
	,SelectAllEntries: function() {
		var _g = [];
		var h = this.archive.entries.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g_key = key;
			var _g_value = _g_h[key];
			var id = _g_key;
			var e = _g_value;
			_g.push(e);
		}
		return this.selectionCommand(_g);
	}
	,AddSelectAllEntries: function() {
		var _g = [];
		var h = this.archive.entries.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g_key = key;
			var _g_value = _g_h[key];
			var id = _g_key;
			var e = _g_value;
			_g.push(e);
		}
		return this.addSelectionCommand(_g);
	}
	,DeSelectAllEntries: function() {
		var _g = [];
		var h = this.archive.entries.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g_key = key;
			var _g_value = _g_h[key];
			var id = _g_key;
			var e = _g_value;
			_g.push(e);
		}
		return this.deSelectionCommand(_g);
	}
	,ToggleSelectAllEntries: function() {
		var _g = [];
		var h = this.archive.entries.h;
		var _g_h = h;
		var _g_keys = Object.keys(h);
		var _g_length = _g_keys.length;
		var _g_current = 0;
		while(_g_current < _g_length) {
			var key = _g_keys[_g_current++];
			var _g_key = key;
			var _g_value = _g_h[key];
			var id = _g_key;
			var e = _g_value;
			_g.push(e);
		}
		return this.toggleSelectionCommand(_g);
	}
	,SelectById: function(id) {
		return this.selectionCommand(kiss_Prelude.filter([this.archive.entries.h[id]]));
	}
	,AddSelectById: function(id) {
		return this.addSelectionCommand(kiss_Prelude.filter([this.archive.entries.h[id]]));
	}
	,DeSelectById: function(id) {
		return this.deSelectionCommand(kiss_Prelude.filter([this.archive.entries.h[id]]));
	}
	,ToggleSelectById: function(id) {
		return this.toggleSelectionCommand(kiss_Prelude.filter([this.archive.entries.h[id]]));
	}
	,SelectLastChangeSet: function() {
		return this.selectionCommand(this.lastChangeSet);
	}
	,AddSelectLastChangeSet: function() {
		return this.addSelectionCommand(this.lastChangeSet);
	}
	,DeSelectLastChangeSet: function() {
		return this.deSelectionCommand(this.lastChangeSet);
	}
	,ToggleSelectLastChangeSet: function() {
		return this.toggleSelectionCommand(this.lastChangeSet);
	}
	,SelectByTags: function(tagsBoolExp) {
		return this.selectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.tagsMatch(e,tagsBoolExp);
		}));
	}
	,AddSelectByTags: function(tagsBoolExp) {
		return this.addSelectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.tagsMatch(e,tagsBoolExp);
		}));
	}
	,DeSelectByTags: function(tagsBoolExp) {
		return this.deSelectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.tagsMatch(e,tagsBoolExp);
		}));
	}
	,ToggleSelectByTags: function(tagsBoolExp) {
		return this.toggleSelectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.tagsMatch(e,tagsBoolExp);
		}));
	}
	,SelectByComponents: function(componentsBoolExp) {
		return this.selectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.componentsMatch(e,componentsBoolExp);
		}));
	}
	,AddSelectByComponents: function(componentsBoolExp) {
		return this.addSelectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.componentsMatch(e,componentsBoolExp);
		}));
	}
	,DeSelectByComponents: function(componentsBoolExp) {
		return this.deSelectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.componentsMatch(e,componentsBoolExp);
		}));
	}
	,ToggleSelectByComponents: function(componentsBoolExp) {
		return this.toggleSelectionCommand(kiss_Prelude.filter(this.archive.entries,function(e) {
			return nat_ArchiveController.componentsMatch(e,componentsBoolExp);
		}));
	}
	,SelectByName: function(name) {
		return this.selectionCommand(this.nameSystem.getEntries(name));
	}
	,AddSelectByName: function(name) {
		return this.addSelectionCommand(this.nameSystem.getEntries(name));
	}
	,DeSelectByName: function(name) {
		return this.deSelectionCommand(this.nameSystem.getEntries(name));
	}
	,ToggleSelectByName: function(name) {
		return this.toggleSelectionCommand(this.nameSystem.getEntries(name));
	}
	,Rename: function(e,newName) {
		var componentData = e.components.h["Name"];
		var name = new tink_json_Parser2().parse(componentData);
		name = newName;
		var _fBZb3RX92ud95dizBcWwiU = name;
		var this1 = e.components;
		var v = new tink_json_Writer0().write(name);
		this1.h["Name"] = v;
		this.archive.refreshEntry(e);
		return [e];
	}
	,PrintSelectedEntries: function(entries) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			this.ui.displayMessage(this.archive.fullString(e));
		}
		return [];
	}
	,PrintComponent: function(entries,componentType) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,componentType))) {
				this.ui.displayMessage(e.components.h[componentType]);
			} else {
				this.ui.displayMessage(kiss_Prelude.add("Entry ",e.id == null ? "null" : "" + e.id," has no ",componentType == null ? "null" : "" + componentType," component"));
			}
		}
		return [];
	}
	,RemoveComponent: function(entries,componentType) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < entries.length) {
			var e = entries[_g1];
			++_g1;
			var _this = e.components;
			if(Object.prototype.hasOwnProperty.call(_this.h,componentType)) {
				delete(_this.h[componentType]);
			}
			var _8b1aUhXZNZbYj3UTLTztuk = e;
			this.archive.refreshEntry(e);
			_g.push(_8b1aUhXZNZbYj3UTLTztuk);
		}
		return _g;
	}
	,CreateEntry: function(name) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			var archive = _gthis.archive;
			var e1 = e;
			var c = name;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Name"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer0().write(c);
			this1.h["Name"] = v;
			var _kmA8MVSEioxsxmXUr5GwBi = e1;
			archive.refreshEntry(e1);
			return _kmA8MVSEioxsxmXUr5GwBi;
		})];
	}
	,CreateEntries: function(names) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < names.length) {
			var name = names[_g1];
			++_g1;
			_g.push(this.CreateEntry(name));
		}
		var _g1 = [];
		var e = $getIterator(_g);
		while(e.hasNext()) {
			var e1 = e.next();
			var x = $getIterator(e1);
			while(x.hasNext()) {
				var x1 = x.next();
				_g1.push(x1);
			}
		}
		return _g1;
	}
	,CreateTaggedEntry: function(tags,name) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			var archive = _gthis.archive;
			var e1 = e;
			var c = name;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Name"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer0().write(c);
			this1.h["Name"] = v;
			var _7gdLUewRd9aZYmcGYzm1QR = e1;
			archive.refreshEntry(e1);
			return nat_ArchiveController.addTags(_gthis.archive,e,tags);
		})];
	}
	,CreateTaggedEntries: function(tags,names) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < names.length) {
			var name = names[_g1];
			++_g1;
			_g.push(this.CreateTaggedEntry(tags,name));
		}
		var _g1 = [];
		var e = $getIterator(_g);
		while(e.hasNext()) {
			var e1 = e.next();
			var x = $getIterator(e1);
			while(x.hasNext()) {
				var x1 = x.next();
				_g1.push(x1);
			}
		}
		return _g1;
	}
	,CreateCircleEntry: function(tags,radius) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			nat_ArchiveController.addTags(_gthis.archive,e,tags);
			var archive = _gthis.archive;
			var e1 = e;
			var c = { radius : radius};
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Circle"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer9().write(c);
			this1.h["Circle"] = v;
			var _m7XK5doq6HFfpUG3pfSAEZ = e1;
			archive.refreshEntry(e1);
			return _m7XK5doq6HFfpUG3pfSAEZ;
		})];
	}
	,AddTags: function(entries,tagsToAdd) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			nat_ArchiveController.addTags(this.archive,e,tagsToAdd);
		}
		return entries;
	}
	,RemoveTags: function(entries,tagsToRemove) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			nat_ArchiveController.removeTags(this.archive,e,tagsToRemove);
		}
		return entries;
	}
	,AddRectangle: function(entries,width,height) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			var archive = this.archive;
			var e1 = e;
			var c = { width : width, height : height};
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Rectangle"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer10().write(c);
			this1.h["Rectangle"] = v;
			var _utGbTVnjWvirGDYJt8Tk2y = e1;
			archive.refreshEntry(e1);
		}
		return entries;
	}
	,CreateRectangleEntry: function(p1,p2) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			var x = kiss_Prelude.min(p1.x,p2.x);
			var y = kiss_Prelude.min(p1.y,p2.y);
			var w = kiss_Prelude.subtract(kiss_Prelude.max(p1.x,p2.x),x);
			var h = kiss_Prelude.subtract(kiss_Prelude.max(p1.y,p2.y),y);
			var archive = _gthis.archive;
			var e1 = e;
			var _g = new haxe_ds_StringMap();
			var key = archive.currentPlayground();
			_g.h[key] = { z : 0.0, x : x, y : y};
			var c = _g;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Positions"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer8().write(c);
			this1.h["Positions"] = v;
			var _jcPd3UK7QP62sq3Ug4Cfj8 = e1;
			archive.refreshEntry(e1);
			var archive = _gthis.archive;
			var e1 = e;
			var c = { width : w, height : h};
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Rectangle"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer10().write(c);
			this1.h["Rectangle"] = v;
			var _eMP7GmHLSZ3oxUHsGJJWEz = e1;
			archive.refreshEntry(e1);
			return _eMP7GmHLSZ3oxUHsGJJWEz;
		})];
	}
	,AddDLURL: function(e,url) {
		var archive = this.archive;
		var e1 = e;
		var c = url;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","DLURL"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_ArchiveController._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer0().write(c);
		this1.h["DLURL"] = v;
		var _taVj55TfzeyceqwCcv4hzN = e1;
		archive.refreshEntry(e1);
		return [_taVj55TfzeyceqwCcv4hzN];
	}
	,AddYoutubeMusic: function(name,url) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			var archive = _gthis.archive;
			var e1 = e;
			var c = name;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Name"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer0().write(c);
			this1.h["Name"] = v;
			var _t2X8Qz8pyNjX7wEC9UXkC5 = e1;
			archive.refreshEntry(e1);
			nat_ArchiveController.addTags(_gthis.archive,e,["music"]);
			return _gthis.AddDLURL(e,url);
		})];
	}
	,AddKeyShortcut: function(e,description) {
		var archive = this.archive;
		var e1 = e;
		var c = description;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","KeyShortcut"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_ArchiveController._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer0().write(c);
		this1.h["KeyShortcut"] = v;
		var _xkapwY5iiGNkTD2c9mXUAN = e1;
		archive.refreshEntry(e1);
		return _xkapwY5iiGNkTD2c9mXUAN;
	}
	,AddNATCommand: function(e,command) {
		var _g = 0;
		while(_g < e.length) {
			var e1 = e[_g];
			++_g;
			var archive = this.archive;
			var e2 = e1;
			var c = command;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","NATCommand"," for ",e2.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e2.components;
			var v = new tink_json_Writer0().write(c);
			this1.h["NATCommand"] = v;
			var _u3iJ423eF3mDskTa274qxY = e2;
			archive.refreshEntry(e2);
		}
		return null;
	}
	,AddNATCommands: function(e,commands) {
		var _g = 0;
		while(_g < e.length) {
			var e1 = e[_g];
			++_g;
			var archive = this.archive;
			var e2 = e1;
			var c = commands;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","NATCommands"," for ",e2.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e2.components;
			var v = new tink_json_Writer11().write(c);
			this1.h["NATCommands"] = v;
			var _uC3V31t5cNZqLxBU19jyTb = e2;
			archive.refreshEntry(e2);
		}
		return null;
	}
	,CreateShortcutEntry: function(description,command) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			var archive = _gthis.archive;
			var e1 = e;
			var c = description;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Name"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer0().write(c);
			this1.h["Name"] = v;
			var _cztfvUTU8B9EACJitU1QqJ = e1;
			archive.refreshEntry(e1);
			_gthis.AddKeyShortcut(e,description);
			return _gthis.AddNATCommand([e],command);
		})];
	}
	,CreateMultiCommandShortcut: function(description,commands) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			var archive = _gthis.archive;
			var e1 = e;
			var c = description;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Name"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer0().write(c);
			this1.h["Name"] = v;
			var _vH85HLsd7DgvkYGz64mJrB = e1;
			archive.refreshEntry(e1);
			_gthis.AddKeyShortcut(e,description);
			return _gthis.AddNATCommands([e],commands);
		})];
	}
	,AddFiles: function(entries,files) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			nat_ArchiveController.addFiles(this.archive,e,files);
		}
		return entries;
	}
	,adjustImagePins: function(entries,increment) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
				var componentData = e.components.h["Images2"];
				var images = new tink_json_Parser9().parse(componentData);
				var _jyCJjyrxc1ThjLX8x1NFVX = images.pinnedImageIndex = kiss_Prelude.max(0,kiss_Prelude.min(kiss_Prelude.subtract(images.imageFiles.length,1),kiss_Prelude.add(increment,images.pinnedImageIndex)));
				var this1 = e.components;
				var v = new tink_json_Writer5().write(images);
				this1.h["Images2"] = v;
				this.archive.refreshEntry(e);
			} else {
				this.ui.reportError(kiss_Prelude.add("Entry ",Std.string(e)," has no Images2 component"));
			}
		}
		return entries;
	}
	,PinNextImage: function(entries) {
		return this.adjustImagePins(entries,1);
	}
	,PinPreviousImage: function(entries) {
		return this.adjustImagePins(entries,-1);
	}
	,SetScale: function(entries,scale) {
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
				var componentData = e.components.h["Images2"];
				var i2 = new tink_json_Parser9().parse(componentData);
				var _ateidfGcHyzS6u2bytLwjx = i2.imageScales[i2.pinnedImageIndex] = scale;
				var this1 = e.components;
				var v = new tink_json_Writer5().write(i2);
				this1.h["Images2"] = v;
				this.archive.refreshEntry(e);
			} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
				var componentData1 = e.components.h["Scale"];
				var scaleComponent = new tink_json_Parser4().parse(componentData1);
				scaleComponent = scale;
				var _9jz1YCP9S6os3YDS5DTfoe = scaleComponent;
				var this2 = e.components;
				var v1 = new tink_json_Writer12().write(scaleComponent);
				this2.h["Scale"] = v1;
				this.archive.refreshEntry(e);
			} else if(kiss_Prelude.truthy(true)) {
				var archive = this.archive;
				var e1 = e;
				var c = scale;
				var ui = null;
				var msg = kiss_Prelude.add("adding ",c," as ","Scale"," for ",e1.id);
				if(kiss_Prelude.truthy(ui)) {
					ui.displayMessage(msg);
				}
				nat_ArchiveController._log(msg);
				var this3 = e1.components;
				var v2 = new tink_json_Writer12().write(c);
				this3.h["Scale"] = v2;
				var _rYxNii76cdB6rqLdETXurr = e1;
				archive.refreshEntry(e1);
			}
		}
		return entries;
	}
	,CreatePlayground: function(name,catsMatchExp,defaultTags) {
		this.archive.changePlaygrounds(function(p) {
			p[name] = { catsMatch : catsMatchExp};
		});
		var _3Cr5nEPHZmUHqqwXYeonQf = this.CreateTaggedEntry(["playground"],name);
		var e = _3Cr5nEPHZmUHqqwXYeonQf[0];
		var archive = this.archive;
		var e1 = e;
		var c = catsMatchExp;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","CatsMatchExp"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_ArchiveController._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer0().write(c);
		this1.h["CatsMatchExp"] = v;
		var _uERJjLaRLsjGJLkpMWPK7p = e1;
		archive.refreshEntry(e1);
		var archive = this.archive;
		var e1 = e;
		var c = defaultTags;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","TagList"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_ArchiveController._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer13().write(c);
		this1.h["TagList"] = v;
		var _gAYz6EBizFhYrgUupkMVBE = e1;
		archive.refreshEntry(e1);
		return [e];
	}
	,SwitchPlayground: function(name) {
		this.archive.changePlaygrounds(function(p) {
			p["default"] = name;
		});
		this.SelectEntries([]);
		if(kiss_Prelude.truthy(this.playgroundSystem)) {
			this.playgroundSystem.switchPlaygroundKey(name);
		}
		return [];
	}
	,ChoosePlayground: function() {
		var _gthis = this;
		var tmp = this.ui;
		var _g = [];
		var access = this.archive.playgrounds;
		var _g_access = access;
		var _g_keys = Reflect.fields(access);
		var _g_index = 0;
		while(_g_index < _g_keys.length) {
			var key = _g_keys[_g_index++];
			var _g_value = _g_access[key];
			var _g_key = key;
			var key1 = _g_key;
			var _ = _g_value;
			if(kiss_Prelude.truthy(kiss_Prelude.areEqual(key1,"default"))) {
				continue;
			} else {
				_g.push(key1);
			}
		}
		tmp.chooseBetweenStrings("Choose a playground:",kiss_Prelude.sort(_g),function(pg) {
			return _gthis.SwitchPlayground(pg);
		});
		return [];
	}
	,AddConnections: function(entries,entriesToConnect) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < entries.length) {
			var e = entries[_g1];
			++_g1;
			_g.push(nat_ArchiveController.addConnections(this.archive,e,entriesToConnect));
		}
		return _g;
	}
	,RemoveConnections: function(entries,entriesToRemove) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < entries.length) {
			var e = entries[_g1];
			++_g1;
			_g.push(nat_ArchiveController.addConnections(this.archive,e,entriesToRemove));
		}
		return _g;
	}
	,AddColorFRGBA: function(entries,r,g,b,a) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < entries.length) {
			var e = entries[_g1];
			++_g1;
			_g.push(nat_ArchiveController.addColorFRGBA(this.archive,e,r,g,b,a));
		}
		return _g;
	}
	,AddColorIRGBA: function(entries,r,g,b,a) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < entries.length) {
			var e = entries[_g1];
			++_g1;
			_g.push(nat_ArchiveController.addColorIRGBA(this.archive,e,r | 0,g | 0,b | 0,a | 0));
		}
		return _g;
	}
	,VibeCheck: function(accounts,monthlyExpenses,energy,hope,note) {
		var _gthis = this;
		return [this.archive.createEntry(function(e) {
			var nw = kiss_Prelude.add.apply(null,accounts);
			var me = kiss_Prelude.add.apply(null,monthlyExpenses);
			var runway = kiss_Prelude.divide(nw,me);
			_gthis.ui.displayMessage(kiss_Prelude.add("Your net worth is $",Std.string(nw),""));
			if(kiss_Prelude.truthy(kiss_Prelude.lessThan(nw,0))) {
				_gthis.ui.displayMessage(kiss_Prelude.add("You are in debt and spending $",Std.string(me)," per month."));
			} else {
				_gthis.ui.displayMessage(kiss_Prelude.add("It will last for roughly ",Std.string(runway)," months!"));
			}
			var archive = _gthis.archive;
			var e1 = e;
			var c = { energy : energy | 0, hope : hope | 0, accounts : accounts, monthlyExpenses : monthlyExpenses, note : note};
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","VibeCheck"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer15().write(c);
			this1.h["VibeCheck"] = v;
			var _bfbdFYEJCxJvGB4QTFpymr = e1;
			archive.refreshEntry(e1);
			var archive = _gthis.archive;
			var e1 = e;
			var _g = new haxe_ds_StringMap();
			var value = new Date();
			_g.h["Created"] = value;
			var c = _g;
			var ui = null;
			var msg = kiss_Prelude.add("adding ",c," as ","Dates"," for ",e1.id);
			if(kiss_Prelude.truthy(ui)) {
				ui.displayMessage(msg);
			}
			nat_ArchiveController._log(msg);
			var this1 = e1.components;
			var v = new tink_json_Writer16().write(c);
			this1.h["Dates"] = v;
			var _6wAM6FEcKXq4mYMhi7itCv = e1;
			archive.refreshEntry(e1);
			return _6wAM6FEcKXq4mYMhi7itCv;
		})];
	}
	,__class__: nat_ArchiveController
};
var nat_ArchiveUI = function() { };
$hxClasses["nat.ArchiveUI"] = nat_ArchiveUI;
nat_ArchiveUI.__name__ = true;
nat_ArchiveUI.__isInterface__ = true;
nat_ArchiveUI.prototype = {
	controller: null
	,shortcutHandler: null
	,showPrefixMap: null
	,hidePrefixMap: null
	,playgroundSystem: null
	,enterText: null
	,enterNumber: null
	,chooseEntry: null
	,chooseEntries: null
	,handleChanges: null
	,displayMessage: null
	,reportError: null
	,onSelectionChanged: null
	,choosePosition: null
	,cursorPosition: null
	,chooseBetweenStrings: null
	,__class__: nat_ArchiveUI
};
var nat_BoolExpInterp = function() {
	kiss_KissInterp.call(this);
};
$hxClasses["nat.BoolExpInterp"] = nat_BoolExpInterp;
nat_BoolExpInterp.__name__ = true;
nat_BoolExpInterp.eval = function(expStr,activeConditions) {
	var interp = new nat_BoolExpInterp();
	var _g = 0;
	while(_g < activeConditions.length) {
		var condition = activeConditions[_g];
		++_g;
		interp.variables.h[condition] = true;
	}
	return kiss_Prelude.truthy(interp.evalKiss(expStr));
};
nat_BoolExpInterp.__super__ = kiss_KissInterp;
nat_BoolExpInterp.prototype = $extend(kiss_KissInterp.prototype,{
	resolve: function(id) {
		try {
			return kiss_KissInterp.prototype.resolve.call(this,id);
		} catch( _g ) {
			return false;
		}
	}
	,__class__: nat_BoolExpInterp
});
var nat_Entry = function(id,components,files) {
	this.files = [];
	this.components = new haxe_ds_StringMap();
	this.id = id != null ? id : uuid_Uuid.v4();
	if(components != null) {
		this.components = components;
	}
	if(files != null) {
		this.files = files;
	}
};
$hxClasses["nat.Entry"] = nat_Entry;
nat_Entry.__name__ = true;
nat_Entry.prototype = {
	id: null
	,components: null
	,files: null
	,toString: function() {
		if(Object.prototype.hasOwnProperty.call(this.components.h,"Name")) {
			return this.components.h["Name"];
		} else {
			return "entry " + this.id;
		}
	}
	,__class__: nat_Entry
};
var nat_Lib = function() { };
$hxClasses["nat.Lib"] = nat_Lib;
nat_Lib.__name__ = true;
nat_Lib._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_Lib.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_Lib.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_Lib.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_Lib.tagList(e));
};
nat_Lib.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_Lib.componentList(e));
};
nat_Lib.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_Lib.tagList(e),nat_Lib.componentList(e)));
};
nat_Lib.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _kyGYiWb6s46U5NYEQxbXZx = null;
	archive.refreshEntry(e);
	return _kyGYiWb6s46U5NYEQxbXZx;
};
nat_Lib.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _kyXpgLcqZbgkKHjpyhXXgX = null;
	archive.refreshEntry(e);
	return _kyXpgLcqZbgkKHjpyhXXgX;
};
nat_Lib.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _3jPvovgkoVW13sWjfJ3Cz9 = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _3jPvovgkoVW13sWjfJ3Cz9;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_Lib._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _8LB1Ymgg3AU7wf49WKpo9x = e1;
		archive1.refreshEntry(e1);
		return _8LB1Ymgg3AU7wf49WKpo9x;
	}
};
nat_Lib.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _jTC4cv65QLQHWCdSfnNwZu = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _jTC4cv65QLQHWCdSfnNwZu;
	} else {
		return null;
	}
};
nat_Lib.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_Lib.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _nkkfdtMpdkT7oFNCbobwdA = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_Lib._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _d2edmtXm1mbiZRkrk5UAUr = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_Lib.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _idyfGdTxnxBYyR5FuyLhUH = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_Lib.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_Lib.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_Lib.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_Lib._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _4bk8gkhmti74UmcaJhEVWu = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_Lib.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_Lib._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _VvwrSrEae4jAZg2TwNcpA = e1;
	archive1.refreshEntry(e1);
	return _VvwrSrEae4jAZg2TwNcpA;
};
nat_Lib.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_Lib._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _u5KFVUTbYeUaBsG2Gy4Rva = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_Lib.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_Lib._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _b6eMFjoRfXcqvUAXfn9L1q = e1;
	archive1.refreshEntry(e1);
	return _b6eMFjoRfXcqvUAXfn9L1q;
};
nat_Lib.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _4n4eWWZe33efLHMb2wnAgr = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_4n4eWWZe33efLHMb2wnAgr)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _wTe18fYkKgWm4PKA3i3LJs = func.apply(o,_g);
		return _wTe18fYkKgWm4PKA3i3LJs;
	} else {
		return _4n4eWWZe33efLHMb2wnAgr;
	}
};
var nat_System = function(name,canProcessEntry,processEntry) {
	this.entries = new haxe_ds_StringMap();
	this.name = name;
	this.canProcessEntry = canProcessEntry;
	this.processEntry = processEntry;
};
$hxClasses["nat.System"] = nat_System;
nat_System.__name__ = true;
nat_System.prototype = {
	entries: null
	,process: function(archive,ui) {
		var h = this.entries.h;
		var e_h = h;
		var e_keys = Object.keys(h);
		var e_length = e_keys.length;
		var e_current = 0;
		while(e_current < e_length) {
			var e = e_h[e_keys[e_current++]];
			kiss_Prelude.print(kiss_Prelude.add("",Std.string(this.name)," processing ",e.id == null ? "null" : "" + e.id,""));
			this.processEntry(archive,e,ui);
		}
	}
	,name: null
	,canProcessEntry: null
	,processEntry: null
	,onRemoveEntry: null
	,checkEntryInOrOut: function(archive,e) {
		if(kiss_Prelude.truthy(this.canProcessEntry(archive,e))) {
			this.entries.h[e.id] = e;
		} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(this.entries.h,e.id))) {
			var key = e.id;
			var _this = this.entries;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
			if(kiss_Prelude.truthy(this.onRemoveEntry)) {
				this.onRemoveEntry(archive,e);
			}
		}
	}
	,__class__: nat_System
};
var nat_systems_AttachmentSystem = function(name,_extensions,processor) {
	var _gthis = this;
	var _g = [];
	var _g1 = 0;
	while(_g1 < _extensions.length) {
		var extension = _extensions[_g1];
		++_g1;
		_g.push(extension.toLowerCase());
	}
	this.extensions = _g;
	nat_System.call(this,name,function(archive,e) {
		var _g = 0;
		var _g1 = e.files;
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,_gthis.extensions.indexOf(haxe_io_Path.extension(file).toLowerCase()))))) {
				return true;
			}
		}
		return false;
	},function(archive,e,ui) {
		return processor(archive,e,kiss_Prelude.filter(e.files,function(file) {
			return !kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,_gthis.extensions.indexOf(haxe_io_Path.extension(file))));
		}),ui);
	});
};
$hxClasses["nat.systems.AttachmentSystem"] = nat_systems_AttachmentSystem;
nat_systems_AttachmentSystem.__name__ = true;
nat_systems_AttachmentSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_AttachmentSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_AttachmentSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_AttachmentSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_AttachmentSystem.tagList(e));
};
nat_systems_AttachmentSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_AttachmentSystem.componentList(e));
};
nat_systems_AttachmentSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_AttachmentSystem.tagList(e),nat_systems_AttachmentSystem.componentList(e)));
};
nat_systems_AttachmentSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _fq9M4MCp6VgFupQYezsSjz = null;
	archive.refreshEntry(e);
	return _fq9M4MCp6VgFupQYezsSjz;
};
nat_systems_AttachmentSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _bdAimuwv5S4JNgz22zbef = null;
	archive.refreshEntry(e);
	return _bdAimuwv5S4JNgz22zbef;
};
nat_systems_AttachmentSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _xbXbBJuohSCsWkZiFf7gxT = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _xbXbBJuohSCsWkZiFf7gxT;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_AttachmentSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _pTYPEdJznXmvPgi6Ev7oq8 = e1;
		archive1.refreshEntry(e1);
		return _pTYPEdJznXmvPgi6Ev7oq8;
	}
};
nat_systems_AttachmentSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _pmhjbaD83qjP5sGtWVzf6s = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _pmhjbaD83qjP5sGtWVzf6s;
	} else {
		return null;
	}
};
nat_systems_AttachmentSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_AttachmentSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _r4GHHjf7u4Bab3po4K1pYo = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_AttachmentSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _hPKtfYJ7rKAtRx4Vtm7wYY = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_AttachmentSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _h7uF8aGEHtx6EEaDCHNwQC = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_AttachmentSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_AttachmentSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_AttachmentSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _32aiPqLCDWfV8zSMri3Z8o = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_AttachmentSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _chnzavwEHCjcR8dLBGgXc = e1;
	archive1.refreshEntry(e1);
	return _chnzavwEHCjcR8dLBGgXc;
};
nat_systems_AttachmentSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _75SUbjG9NAG8r3R5wSfRkR = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_AttachmentSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _u9Hq3pRvjMCnyL8UG2YBeN = e1;
	archive1.refreshEntry(e1);
	return _u9Hq3pRvjMCnyL8UG2YBeN;
};
nat_systems_AttachmentSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _gctz4ZkTK29u4TLrmKxc7Y = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_gctz4ZkTK29u4TLrmKxc7Y)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _cg9oP3pJMstySCzLUrwjYT = func.apply(o,_g);
		return _cg9oP3pJMstySCzLUrwjYT;
	} else {
		return _gctz4ZkTK29u4TLrmKxc7Y;
	}
};
nat_systems_AttachmentSystem.__super__ = nat_System;
nat_systems_AttachmentSystem.prototype = $extend(nat_System.prototype,{
	extensions: null
	,__class__: nat_systems_AttachmentSystem
});
var nat_systems_AutoStepperSystem = function() {
	var _gthis = this;
	this.jarPath = kiss_Prelude.joinPath(kiss_Prelude.libPath("nat-archive-tool"),"apps/autostepper/AutoStepper.jar");
	nat_systems_AttachmentSystem.call(this,"AutoStepperSystem",["mp3"],function(archive,e,mp3Files,ui) {
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(nat_systems_AutoStepperSystem.tagsMatch(e,"stepperProcessed")))) {
			var _g = 0;
			while(_g < mp3Files.length) {
				var file = [mp3Files[_g]];
				++_g;
				var runAutoStepper = (function(file) {
					return function() {
						try {
							ui.displayMessage(kiss_Prelude.add("autoStepping ",file[0] == null ? "null" : "" + file[0],""));
							kiss_Prelude.shellExecute(kiss_Prelude.add("                                java -jar \"",Std.string(_gthis.jarPath),"\" input=\"",Std.string(archive.filePath(file[0])),"\" duration=130 hard=true\n                                "),"");
							ui.displayMessage(kiss_Prelude.add("done autostepping ",file[0] == null ? "null" : "" + file[0],""));
							nat_systems_AutoStepperSystem.addTags(archive,e,["stepperProcessed"]);
						} catch( _g ) {
							ui.displayMessage(kiss_Prelude.add("failed autostepping ",file[0] == null ? "null" : "" + file[0],""));
						}
					};
				})(file);
				ui.displayMessage("threading unavailable -- the program will freeze while autostepping");
				runAutoStepper();
			}
			return null;
		} else {
			return null;
		}
	});
};
$hxClasses["nat.systems.AutoStepperSystem"] = nat_systems_AutoStepperSystem;
nat_systems_AutoStepperSystem.__name__ = true;
nat_systems_AutoStepperSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_AutoStepperSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_AutoStepperSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_AutoStepperSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_AutoStepperSystem.tagList(e));
};
nat_systems_AutoStepperSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_AutoStepperSystem.componentList(e));
};
nat_systems_AutoStepperSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_AutoStepperSystem.tagList(e),nat_systems_AutoStepperSystem.componentList(e)));
};
nat_systems_AutoStepperSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _dXCcRzSfJSAHoLuwMda9LY = null;
	archive.refreshEntry(e);
	return _dXCcRzSfJSAHoLuwMda9LY;
};
nat_systems_AutoStepperSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _oXbYday9DMgFcX2YB2U7Uu = null;
	archive.refreshEntry(e);
	return _oXbYday9DMgFcX2YB2U7Uu;
};
nat_systems_AutoStepperSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _sPeEmBurReXZfomXjLfQv4 = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _sPeEmBurReXZfomXjLfQv4;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_AutoStepperSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _tQYvApH6Bnco7mCibUFF3C = e1;
		archive1.refreshEntry(e1);
		return _tQYvApH6Bnco7mCibUFF3C;
	}
};
nat_systems_AutoStepperSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _bmFauY5VjarafPn7rMJrTM = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _bmFauY5VjarafPn7rMJrTM;
	} else {
		return null;
	}
};
nat_systems_AutoStepperSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_AutoStepperSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _vGPP3rM2kr4eq2y8xEUb58 = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_AutoStepperSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _nZdoJEDniALRzKsgnaD9b = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_AutoStepperSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _hZ8HHUJfbMr2hmAPgXNwsd = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_AutoStepperSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_AutoStepperSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_AutoStepperSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AutoStepperSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _oLVV4Bw9AaPmu4TStrLvCC = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_AutoStepperSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AutoStepperSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _nA93xLRtXqMdG9EYAUEE9X = e1;
	archive1.refreshEntry(e1);
	return _nA93xLRtXqMdG9EYAUEE9X;
};
nat_systems_AutoStepperSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AutoStepperSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _vSWWXT91tnJwQVJFsrPPAF = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_AutoStepperSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_AutoStepperSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _82m7xmphJnqN5hZypRGtQo = e1;
	archive1.refreshEntry(e1);
	return _82m7xmphJnqN5hZypRGtQo;
};
nat_systems_AutoStepperSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _a5jmhfhF8MmvhX6jX5JfYK = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_a5jmhfhF8MmvhX6jX5JfYK)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _vJPLKA37scpv4767Yxa4Rh = func.apply(o,_g);
		return _vJPLKA37scpv4767Yxa4Rh;
	} else {
		return _a5jmhfhF8MmvhX6jX5JfYK;
	}
};
nat_systems_AutoStepperSystem.__super__ = nat_systems_AttachmentSystem;
nat_systems_AutoStepperSystem.prototype = $extend(nat_systems_AttachmentSystem.prototype,{
	jarPath: null
	,__class__: nat_systems_AutoStepperSystem
});
var nat_systems_DLSystem = function() {
	var hasYTDL = false;
	kiss_Prelude.tryProcess("youtube-dl",[],function(error) {
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,error.indexOf("You must provide at least one URL"))))) {
			hasYTDL = true;
			return hasYTDL;
		} else {
			return null;
		}
	});
	nat_System.call(this,"DLSystem",function(archive,e) {
		var _nqYbhpDapLXwAc2pJZNvGP = hasYTDL;
		if(kiss_Prelude.truthy(_nqYbhpDapLXwAc2pJZNvGP)) {
			var _9LPAVNFF8texK3VDHXm38E = nat_systems_DLSystem.componentsAndTagsMatch(e,"(unless dlProcessed DLURL)");
			return _9LPAVNFF8texK3VDHXm38E;
		} else {
			return _nqYbhpDapLXwAc2pJZNvGP;
		}
	},function(archive,e,ui) {
		var basename = kiss_Prelude.add;
		var e1 = e;
		var basename1;
		if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e1.components.h,"Name"))) {
			var componentData = e1.components.h["Name"];
			basename1 = new tink_json_Parser2().parse(componentData);
		} else {
			basename1 = kiss_Prelude.uuid();
		}
		var basename2 = basename("",Std.string(basename1),"-DL");
		var o = kiss_Prelude.add("\"",basename2 == null ? "null" : "" + basename2,".%(ext)s\"");
		var o1 = kiss_Prelude.truthy(kiss_Prelude.areEqual(Sys.systemName(),"Windows")) ? StringTools.replace(o,"%","%%") : o;
		var componentData = e.components.h["DLURL"];
		var url = new tink_json_Parser2().parse(componentData);
		if(kiss_Prelude.truthy(nat_systems_DLSystem.tagsMatch(e,"music"))) {
			var downloadMp3 = function() {
				try {
					ui.displayMessage(kiss_Prelude.add("downloading ",url == null ? "null" : "" + url," as ",basename2 == null ? "null" : "" + basename2,""));
					kiss_Prelude.shellExecute(kiss_Prelude.add("                                        youtube-dl -x --audio-format mp3 -o ",o1 == null ? "null" : "" + o1," ",url == null ? "null" : "" + url,"\n                                        "),"");
					ui.displayMessage(kiss_Prelude.add("done downloading ",basename2 == null ? "null" : "" + basename2,""));
					nat_systems_DLSystem.addFiles(archive,e,[kiss_Prelude.add("",basename2 == null ? "null" : "" + basename2,".mp3")]);
				} catch( _g ) {
					ui.displayMessage(kiss_Prelude.add("failed downloading ",basename2 == null ? "null" : "" + basename2,""));
				}
			};
			ui.displayMessage("threading unavailable -- the program will freeze while downloading with youtube-dl");
			downloadMp3();
			return null;
		} else if(kiss_Prelude.truthy(true)) {
			var ui1 = ui;
			var msg = kiss_Prelude.add;
			var msg1;
			var this1 = e.components;
			var componentData = this1.get("Tags");
			if(new tink_json_Parser1().parse(componentData) == null) {
				msg1 = "null";
			} else {
				var this1 = e.components;
				var componentData = this1.get("Tags");
				msg1 = new tink_json_Parser1().parse(componentData).toString();
			}
			var msg2 = msg("DLSystem doesn't know what to do with ",msg1,"");
			if(kiss_Prelude.truthy(ui1)) {
				ui1.displayMessage(msg2);
			}
			nat_systems_DLSystem._log(msg2);
			return null;
		} else {
			return null;
		}
	});
};
$hxClasses["nat.systems.DLSystem"] = nat_systems_DLSystem;
nat_systems_DLSystem.__name__ = true;
nat_systems_DLSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_DLSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_DLSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_DLSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_DLSystem.tagList(e));
};
nat_systems_DLSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_DLSystem.componentList(e));
};
nat_systems_DLSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_DLSystem.tagList(e),nat_systems_DLSystem.componentList(e)));
};
nat_systems_DLSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _xBnzbXAZxgCijhc3VdJNhX = null;
	archive.refreshEntry(e);
	return _xBnzbXAZxgCijhc3VdJNhX;
};
nat_systems_DLSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _9J5MPwTCCuYqCUrHTrSrv5 = null;
	archive.refreshEntry(e);
	return _9J5MPwTCCuYqCUrHTrSrv5;
};
nat_systems_DLSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _kymqnqGLh4AJjb3qqPQN45 = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _kymqnqGLh4AJjb3qqPQN45;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_DLSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _n65YRSBcqqcQkX57KvvXYh = e1;
		archive1.refreshEntry(e1);
		return _n65YRSBcqqcQkX57KvvXYh;
	}
};
nat_systems_DLSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _jHd8AyyAaBnrn9jACGLnhF = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _jHd8AyyAaBnrn9jACGLnhF;
	} else {
		return null;
	}
};
nat_systems_DLSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_DLSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _4jtPgX9pge9e1s5PGZcybJ = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_DLSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _iKVeD47cgzQG4mDkBWTBR1 = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_DLSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _tR5eRLSjQhnRqsWnqBvn75 = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_DLSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_DLSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_DLSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_DLSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _8YapSsKEKqGKAkPDfzBTi = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_DLSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_DLSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _k3AQ1xdPMDzTefmNQ3nJQE = e1;
	archive1.refreshEntry(e1);
	return _k3AQ1xdPMDzTefmNQ3nJQE;
};
nat_systems_DLSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_DLSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _cX7S8g4BHdeV8gXYQF5e6w = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_DLSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_DLSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _6EH7PLUPBkm4x2rirpvVAa = e1;
	archive1.refreshEntry(e1);
	return _6EH7PLUPBkm4x2rirpvVAa;
};
nat_systems_DLSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _5Q2viqXmvXXwCd4mQwJR4f = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_5Q2viqXmvXXwCd4mQwJR4f)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _wEFR692ZQ2KK6kUC1TNJRp = func.apply(o,_g);
		return _wEFR692ZQ2KK6kUC1TNJRp;
	} else {
		return _5Q2viqXmvXXwCd4mQwJR4f;
	}
};
nat_systems_DLSystem.__super__ = nat_System;
nat_systems_DLSystem.prototype = $extend(nat_System.prototype,{
	__class__: nat_systems_DLSystem
});
var nat_systems_ImageAttachmentSystem = function() {
	nat_systems_AttachmentSystem.call(this,"ImageAttachmentSystem",["jpg","jpeg","png","svg"],function(archive,e,imageFiles,ui) {
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(nat_systems_ImageAttachmentSystem.upgradeToVersion2(archive,e)))) {
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2")))) {
				var archive1 = archive;
				var e1 = e;
				var _g = [];
				var _ = kiss_Prelude.range(0,imageFiles.length,1);
				while(_.hasNext()) {
					var _1 = _.next();
					_g.push(1.0);
				}
				var c = { imageFiles : imageFiles, imageScales : _g, pinnedImageIndex : 0};
				var ui = null;
				var msg = kiss_Prelude.add("adding ",c," as ","Images2"," for ",e1.id);
				if(kiss_Prelude.truthy(ui)) {
					ui.displayMessage(msg);
				}
				nat_systems_ImageAttachmentSystem._log(msg);
				var this1 = e1.components;
				var v = new tink_json_Writer5().write(c);
				this1.h["Images2"] = v;
				var _7uRfqGczwHnH2caavVydF3 = e1;
				archive1.refreshEntry(e1);
				return _7uRfqGczwHnH2caavVydF3;
			} else {
				return null;
			}
		} else {
			return null;
		}
	});
};
$hxClasses["nat.systems.ImageAttachmentSystem"] = nat_systems_ImageAttachmentSystem;
nat_systems_ImageAttachmentSystem.__name__ = true;
nat_systems_ImageAttachmentSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_ImageAttachmentSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_ImageAttachmentSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_ImageAttachmentSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_ImageAttachmentSystem.tagList(e));
};
nat_systems_ImageAttachmentSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_ImageAttachmentSystem.componentList(e));
};
nat_systems_ImageAttachmentSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_ImageAttachmentSystem.tagList(e),nat_systems_ImageAttachmentSystem.componentList(e)));
};
nat_systems_ImageAttachmentSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _bFyT7HW7apM3vyPq4TvSa6 = null;
	archive.refreshEntry(e);
	return _bFyT7HW7apM3vyPq4TvSa6;
};
nat_systems_ImageAttachmentSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _rHbs6Pd1WdJDw4iR4fFR8m = null;
	archive.refreshEntry(e);
	return _rHbs6Pd1WdJDw4iR4fFR8m;
};
nat_systems_ImageAttachmentSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _qcg6yVmctx4RZDjUSMFuLw = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _qcg6yVmctx4RZDjUSMFuLw;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_ImageAttachmentSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _utYdQtZk5Ric9DXNMhjdie = e1;
		archive1.refreshEntry(e1);
		return _utYdQtZk5Ric9DXNMhjdie;
	}
};
nat_systems_ImageAttachmentSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _cj4FeD4iYJnxo4U2kKFZPs = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _cj4FeD4iYJnxo4U2kKFZPs;
	} else {
		return null;
	}
};
nat_systems_ImageAttachmentSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_ImageAttachmentSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _xnv2wwYc6sgCFccKB56jUT = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_ImageAttachmentSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _pLz26XABF8gq1RigztH5Z9 = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_ImageAttachmentSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _6MkQjqRpGNQiJeXrTuSpKG = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_ImageAttachmentSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_ImageAttachmentSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_ImageAttachmentSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_ImageAttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _4MrQJSyTAesYTzXeK8QGxR = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_ImageAttachmentSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_ImageAttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _vMEf5PzH1MBtfiabamXQKC = e1;
	archive1.refreshEntry(e1);
	return _vMEf5PzH1MBtfiabamXQKC;
};
nat_systems_ImageAttachmentSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_ImageAttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _eDRPFndVr6vTZ4aD5eg2dG = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_ImageAttachmentSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_ImageAttachmentSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _2RWTAkXimk2CmR4YFJLppm = e1;
	archive1.refreshEntry(e1);
	return _2RWTAkXimk2CmR4YFJLppm;
};
nat_systems_ImageAttachmentSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _d29FtTepRmYDiH632VYHSC = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_d29FtTepRmYDiH632VYHSC)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _mHa6FCEjKqP6DqZHmrccJy = func.apply(o,_g);
		return _mHa6FCEjKqP6DqZHmrccJy;
	} else {
		return _d29FtTepRmYDiH632VYHSC;
	}
};
nat_systems_ImageAttachmentSystem.upgradeToVersion2 = function(archive,e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images"))) {
		var componentData = e.components.h["Images"];
		var images1 = new tink_json_Parser3().parse(componentData);
		var e1 = e;
		var scale;
		if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e1.components.h,"Scale"))) {
			var componentData = e1.components.h["Scale"];
			scale = new tink_json_Parser4().parse(componentData);
		} else {
			scale = 1.0;
		}
		var pIdx = images1.pinnedImageIndex;
		var textImageFiles = kiss_Prelude.filter(images1.imageFiles,function(f) {
			return StringTools.startsWith(f,"textImage");
		});
		var archive1 = archive;
		var e1 = e;
		var ui = null;
		var msg = kiss_Prelude.add("removing ","Images"," component from ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_ImageAttachmentSystem._log(msg);
		var _this = e1.components;
		if(Object.prototype.hasOwnProperty.call(_this.h,"Images")) {
			delete(_this.h["Images"]);
		}
		var _igXuVKkPbyrrPWs8yDG7ze = e1;
		archive1.refreshEntry(e1);
		nat_systems_ImageAttachmentSystem.removeFiles(archive,e,textImageFiles);
		var _g = 0;
		var _g1 = textImageFiles;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			HxOverrides.remove(images1.imageFiles,f);
		}
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(images1.imageFiles))) {
			return true;
		}
		var archive1 = archive;
		var e1 = e;
		var images11 = images1.imageFiles;
		var c = kiss_Prelude.concat;
		var _g = [];
		var _ = kiss_Prelude.range(0,pIdx,1);
		while(_.hasNext()) {
			var _1 = _.next();
			_g.push(1.0);
		}
		var c1 = _g;
		var c2 = [scale];
		var _g = [];
		var _ = kiss_Prelude.range(0,kiss_Prelude.subtract(images1.imageFiles.length,1,pIdx),1);
		while(_.hasNext()) {
			var _1 = _.next();
			_g.push(1.0);
		}
		var c3 = { imageFiles : images11, imageScales : c(c1,c2,_g), pinnedImageIndex : pIdx};
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c3," as ","Images2"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_ImageAttachmentSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer5().write(c3);
		this1.h["Images2"] = v;
		var _85ixcG8CmuiwMPwchRgtCP = e1;
		archive1.refreshEntry(e1);
		var archive1 = archive;
		var e1 = e;
		var ui = null;
		var msg = kiss_Prelude.add("removing ","Scale"," component from ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_ImageAttachmentSystem._log(msg);
		var _this = e1.components;
		if(Object.prototype.hasOwnProperty.call(_this.h,"Scale")) {
			delete(_this.h["Scale"]);
		}
		var _speQZ2GP5wRY3MdmqiQhRY = e1;
		archive1.refreshEntry(e1);
		return true;
	} else {
		return false;
	}
};
nat_systems_ImageAttachmentSystem.__super__ = nat_systems_AttachmentSystem;
nat_systems_ImageAttachmentSystem.prototype = $extend(nat_systems_AttachmentSystem.prototype,{
	__class__: nat_systems_ImageAttachmentSystem
});
var nat_systems_KeyShortcutSystem = function(controller) {
	this.descriptions = new haxe_ds_StringMap();
	var _gthis = this;
	this.setup = false;
	this.controller = controller;
	nat_System.call(this,"KeyShortcutSystem",function(archive,e) {
		return Object.prototype.hasOwnProperty.call(e.components.h,"KeyShortcut");
	},function(archive,e,ui) {
		var tmp = kiss_Prelude.truthy;
		var _9UpkhT4icTEs9DQSJGrrEV = ui;
		var tmp1;
		if(kiss_Prelude.truthy(_9UpkhT4icTEs9DQSJGrrEV)) {
			var _qRAwEhQXigwXyp2kWUEYnK = ui.shortcutHandler;
			tmp1 = _qRAwEhQXigwXyp2kWUEYnK;
		} else {
			tmp1 = _9UpkhT4icTEs9DQSJGrrEV;
		}
		if(tmp(tmp1)) {
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(_gthis.setup))) {
				ui.shortcutHandler.onSelectPrefixMap = function(_,map) {
					ui.showPrefixMap(map);
				};
				ui.shortcutHandler.onSelectItem = function(e) {
					ui.hidePrefixMap();
					return _gthis.invokeEntry(archive,ui,e);
				};
				ui.shortcutHandler.onBadKey = function(key,map) {
					var ui1 = ui;
					var tmp = kiss_Prelude.add;
					var tmp1 = map == null ? "null" : map.toString();
					ui1.displayMessage(tmp("",key == null ? "null" : "" + key," is not mapped to a shortcut in this context: ",tmp1,""));
				};
				_gthis.setup = true;
			}
			var tmp = kiss_Prelude.truthy;
			var tmp1 = kiss_Prelude.truthy;
			var this1 = _gthis.descriptions;
			var componentData = e.components.h["KeyShortcut"];
			var key = new tink_json_Parser2().parse(componentData);
			if(tmp(!tmp1(Object.prototype.hasOwnProperty.call(this1.h,key)))) {
				var componentData = e.components.h["KeyShortcut"];
				ui.shortcutHandler.registerItem(new tink_json_Parser2().parse(componentData),e);
				var this1 = _gthis.descriptions;
				var componentData = e.components.h["KeyShortcut"];
				var k = new tink_json_Parser2().parse(componentData);
				this1.h[k] = true;
			}
		}
		return 0;
	});
};
$hxClasses["nat.systems.KeyShortcutSystem"] = nat_systems_KeyShortcutSystem;
nat_systems_KeyShortcutSystem.__name__ = true;
nat_systems_KeyShortcutSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_KeyShortcutSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_KeyShortcutSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_KeyShortcutSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_KeyShortcutSystem.tagList(e));
};
nat_systems_KeyShortcutSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_KeyShortcutSystem.componentList(e));
};
nat_systems_KeyShortcutSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_KeyShortcutSystem.tagList(e),nat_systems_KeyShortcutSystem.componentList(e)));
};
nat_systems_KeyShortcutSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _jM555hH1w4V48sXdHT16To = null;
	archive.refreshEntry(e);
	return _jM555hH1w4V48sXdHT16To;
};
nat_systems_KeyShortcutSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _bic9HRyrDLke8tNZ2K9Rtb = null;
	archive.refreshEntry(e);
	return _bic9HRyrDLke8tNZ2K9Rtb;
};
nat_systems_KeyShortcutSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _x3SXrohTYTjbwPPq3hvWaj = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _x3SXrohTYTjbwPPq3hvWaj;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_KeyShortcutSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _tySRRdirNzHZ4AgHdMUopK = e1;
		archive1.refreshEntry(e1);
		return _tySRRdirNzHZ4AgHdMUopK;
	}
};
nat_systems_KeyShortcutSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _wEkXDung7rc2t4SNtsqeey = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _wEkXDung7rc2t4SNtsqeey;
	} else {
		return null;
	}
};
nat_systems_KeyShortcutSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_KeyShortcutSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _hYoosX8d5hV2BGconmt9UW = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_KeyShortcutSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _qWDjsQKzLGc8XnWjM3ehvm = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_KeyShortcutSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _2hqi7kbnHfccrTyP6DgheW = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_KeyShortcutSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_KeyShortcutSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_KeyShortcutSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_KeyShortcutSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _4ubzcUbhEfegxTmeYY2NMz = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_KeyShortcutSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_KeyShortcutSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _5WgZwY76LCm85aPsDk3Bke = e1;
	archive1.refreshEntry(e1);
	return _5WgZwY76LCm85aPsDk3Bke;
};
nat_systems_KeyShortcutSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_KeyShortcutSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _p7hGzRZ8Lyh4zmfZPHQ5Ej = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_KeyShortcutSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_KeyShortcutSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _cHzEvqpoo4VGkd1LGJEqfc = e1;
	archive1.refreshEntry(e1);
	return _cHzEvqpoo4VGkd1LGJEqfc;
};
nat_systems_KeyShortcutSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _8t8kKMXNGxD5k4CXiHkYuH = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_8t8kKMXNGxD5k4CXiHkYuH)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _ksMRP1H3wSUCkkozPowKvH = func.apply(o,_g);
		return _ksMRP1H3wSUCkkozPowKvH;
	} else {
		return _8t8kKMXNGxD5k4CXiHkYuH;
	}
};
nat_systems_KeyShortcutSystem.__super__ = nat_System;
nat_systems_KeyShortcutSystem.prototype = $extend(nat_System.prototype,{
	descriptions: null
	,setup: null
	,controller: null
	,invokeEntry: function(archive,ui,e) {
		if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"NATCommand"))) {
			var componentData = e.components.h["NATCommand"];
			this.controller.tryRunCommand(new tink_json_Parser2().parse(componentData));
		} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"NATCommands"))) {
			var componentData = e.components.h["NATCommands"];
			this.controller.tryRunCommands(new tink_json_Parser5().parse(componentData));
		} else if(kiss_Prelude.truthy(true)) {
			ui.displayMessage(kiss_Prelude.add("tried to invoke ",e.id == null ? "null" : "" + e.id," but it has no available actions"));
		}
		return 0;
	}
	,__class__: nat_systems_KeyShortcutSystem
});
var nat_systems_MediaWikiSystem = function(name,mediaWikiUrl,canProcess,processor,maxLag) {
	this.mediaWikiUrl = mediaWikiUrl;
	this.maxLag = maxLag;
	nat_System.call(this,name,canProcess,processor);
};
$hxClasses["nat.systems.MediaWikiSystem"] = nat_systems_MediaWikiSystem;
nat_systems_MediaWikiSystem.__name__ = true;
nat_systems_MediaWikiSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_MediaWikiSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_MediaWikiSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_MediaWikiSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_MediaWikiSystem.tagList(e));
};
nat_systems_MediaWikiSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_MediaWikiSystem.componentList(e));
};
nat_systems_MediaWikiSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_MediaWikiSystem.tagList(e),nat_systems_MediaWikiSystem.componentList(e)));
};
nat_systems_MediaWikiSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _wXoSFo9jb3GZAdrAcsEkaM = null;
	archive.refreshEntry(e);
	return _wXoSFo9jb3GZAdrAcsEkaM;
};
nat_systems_MediaWikiSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _fHGuD7xh7ahNqiGMSPQkoo = null;
	archive.refreshEntry(e);
	return _fHGuD7xh7ahNqiGMSPQkoo;
};
nat_systems_MediaWikiSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _qhQeSDSobxJBraqbfhESs5 = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _qhQeSDSobxJBraqbfhESs5;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_MediaWikiSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _sHsWZGbv976JF8kQ4gb1tj = e1;
		archive1.refreshEntry(e1);
		return _sHsWZGbv976JF8kQ4gb1tj;
	}
};
nat_systems_MediaWikiSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _9erzKYznZ5paHmBa5GSubc = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _9erzKYznZ5paHmBa5GSubc;
	} else {
		return null;
	}
};
nat_systems_MediaWikiSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_MediaWikiSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _cYUxUm2NgcuGWbVef6s7pY = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_MediaWikiSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _i4cvSYNruoVYKZRX92oYWd = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_MediaWikiSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _cygkgQgkPKHG5EmLrHSMXd = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_MediaWikiSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_MediaWikiSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_MediaWikiSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_MediaWikiSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _neE8QMYHC6tTbckqvtCZz9 = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_MediaWikiSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_MediaWikiSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _tGd2z8xR3BsTcaYc46Ltvs = e1;
	archive1.refreshEntry(e1);
	return _tGd2z8xR3BsTcaYc46Ltvs;
};
nat_systems_MediaWikiSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_MediaWikiSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _vwmBD147WVby5JVSaFPx38 = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_MediaWikiSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_MediaWikiSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _3jxGkJbPyTGCJafHGsJEAB = e1;
	archive1.refreshEntry(e1);
	return _3jxGkJbPyTGCJafHGsJEAB;
};
nat_systems_MediaWikiSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _jeYZ8wFGBC4Z43A2aC7hU4 = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_jeYZ8wFGBC4Z43A2aC7hU4)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _rbqQhttRU1RUjdBdXiexUA = func.apply(o,_g);
		return _rbqQhttRU1RUjdBdXiexUA;
	} else {
		return _jeYZ8wFGBC4Z43A2aC7hU4;
	}
};
nat_systems_MediaWikiSystem.__super__ = nat_System;
nat_systems_MediaWikiSystem.prototype = $extend(nat_System.prototype,{
	mediaWikiUrl: null
	,maxLag: null
	,query: function(params) {
		var data = new tink_json_Parser2();
		var inputLines = [new tink_json_Writer2().write(params),new tink_json_Writer0().write(this.mediaWikiUrl),new tink_json_Writer0().write(kiss_Prelude.truthy(this.maxLag) ? Std.string(this.maxLag) : "1"),new tink_json_Writer3().write(nat_systems_MediaWikiSystem.headers)];
		if(inputLines == null) {
			inputLines = [];
		}
		var data1 = JSON.parse(data.parse(kiss_Prelude.assertProcess("bin/_kissScript0-env/bin/python",[haxe_io_Path.join(["bin/_kissScript0","ExternMain.py"])].concat(inputLines))));
		if(kiss_Prelude.truthy(data1.query)) {
			return haxe_ds_Option.Some(data1.query);
		} else {
			return haxe_ds_Option.None;
		}
	}
	,queryImageTitles: function(pageTitles) {
		var _g = new haxe_ds_StringMap();
		_g.h["titles"] = pageTitles;
		_g.h["prop"] = ["images"];
		var _96PwMJrbFx4kpCJdfwCHAF = this.query(_g);
		if(kiss_Prelude.truthy(_96PwMJrbFx4kpCJdfwCHAF)) {
			var _gs2RvM9TW22eUQUEybdFtu = _96PwMJrbFx4kpCJdfwCHAF;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_gs2RvM9TW22eUQUEybdFtu))) {
				return [];
			} else if(_96PwMJrbFx4kpCJdfwCHAF._hx_index == 0) {
				var queryResult = _96PwMJrbFx4kpCJdfwCHAF.v;
				var _g = [];
				var access = queryResult.pages;
				var _g_access = access;
				var _g_keys = Reflect.fields(access);
				var _g_index = 0;
				while(_g_index < _g_keys.length) {
					var key = _g_keys[_g_index++];
					var _g_value = _g_access[key];
					var _g_key = key;
					var _id = _g_key;
					var page = _g_value;
					if(kiss_Prelude.truthy(page.images)) {
						_g.push(page.images.map(function(image) {
							return image.title;
						}));
					} else {
						_g.push([]);
					}
				}
				var _g1 = [];
				var e = $getIterator(_g);
				while(e.hasNext()) {
					var e1 = e.next();
					var x = $getIterator(e1);
					while(x.hasNext()) {
						var x1 = x.next();
						_g1.push(x1);
					}
				}
				return _g1;
			} else {
				return [];
			}
		} else {
			return [];
		}
	}
	,queryImageUrls: function(imageTitles) {
		var _g = new haxe_ds_StringMap();
		_g.h["titles"] = imageTitles;
		_g.h["prop"] = ["imageinfo"];
		_g.h["iiprop"] = ["url"];
		var _8VpuY3ouGLGL9xBugKM1hs = this.query(_g);
		if(kiss_Prelude.truthy(_8VpuY3ouGLGL9xBugKM1hs)) {
			var _8kJku1jAVVk6MwkXDakZZn = _8VpuY3ouGLGL9xBugKM1hs;
			if(kiss_Prelude.truthy(kiss_Prelude.isNull(_8kJku1jAVVk6MwkXDakZZn))) {
				return [];
			} else if(_8VpuY3ouGLGL9xBugKM1hs._hx_index == 0) {
				var queryResult = _8VpuY3ouGLGL9xBugKM1hs.v;
				var _g = [];
				var access = queryResult.pages;
				var _g_access = access;
				var _g_keys = Reflect.fields(access);
				var _g_index = 0;
				while(_g_index < _g_keys.length) {
					var key = _g_keys[_g_index++];
					var _g_value = _g_access[key];
					var _g_key = key;
					var _id = _g_key;
					var image = _g_value;
					if(kiss_Prelude.truthy(image.imageinfo)) {
						_g.push(image.imageinfo.map(function(image) {
							return image.url;
						}));
					} else {
						_g.push([]);
					}
				}
				var _g1 = [];
				var e = $getIterator(_g);
				while(e.hasNext()) {
					var e1 = e.next();
					var x = $getIterator(e1);
					while(x.hasNext()) {
						var x1 = x.next();
						_g1.push(x1);
					}
				}
				return _g1;
			} else {
				return [];
			}
		} else {
			return [];
		}
	}
	,__class__: nat_systems_MediaWikiSystem
});
var nat_systems_NameSystem = function() {
	this.entriesByName = new haxe_ds_StringMap();
	var _gthis = this;
	nat_System.call(this,"NameSystem",function(archive,e) {
		return Object.prototype.hasOwnProperty.call(e.components.h,"Name");
	},function(archive,e,ui) {
		var componentData = e.components.h["Name"];
		var name = new tink_json_Parser2().parse(componentData);
		if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(_gthis.entriesByName.h,name.toLowerCase()))) {
			_gthis.entriesByName.h[name.toLowerCase()].push(e);
		} else {
			var v = [e];
			_gthis.entriesByName.h[name.toLowerCase()] = v;
		}
		return null;
	});
};
$hxClasses["nat.systems.NameSystem"] = nat_systems_NameSystem;
nat_systems_NameSystem.__name__ = true;
nat_systems_NameSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_NameSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_NameSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_NameSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_NameSystem.tagList(e));
};
nat_systems_NameSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_NameSystem.componentList(e));
};
nat_systems_NameSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_NameSystem.tagList(e),nat_systems_NameSystem.componentList(e)));
};
nat_systems_NameSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _sQ4iyy8eWYhnPGRxnvvP9k = null;
	archive.refreshEntry(e);
	return _sQ4iyy8eWYhnPGRxnvvP9k;
};
nat_systems_NameSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _g7ZHSvSDVV2uJ2W5EkhL1r = null;
	archive.refreshEntry(e);
	return _g7ZHSvSDVV2uJ2W5EkhL1r;
};
nat_systems_NameSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _rvPYnCs9TAM8SegbRjoUnN = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _rvPYnCs9TAM8SegbRjoUnN;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_NameSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _nF7agA9PdQLzofw3q2xKXq = e1;
		archive1.refreshEntry(e1);
		return _nF7agA9PdQLzofw3q2xKXq;
	}
};
nat_systems_NameSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _j5Vm32N81ho7GVESz7NipF = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _j5Vm32N81ho7GVESz7NipF;
	} else {
		return null;
	}
};
nat_systems_NameSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_NameSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _tN6Y3UqQKz2J5zoWn9AdoU = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_NameSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _8JUHgrJ8xyGyWcktCZdpic = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_NameSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _9i2xNxxPnPp96xCJBPnuqQ = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_NameSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_NameSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_NameSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_NameSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _dMqvRX7ykPJBSxXNueqSDj = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_NameSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_NameSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _4TUwp9QDcfrxni2NxHk2oK = e1;
	archive1.refreshEntry(e1);
	return _4TUwp9QDcfrxni2NxHk2oK;
};
nat_systems_NameSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_NameSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _6juSkaHLpzFQHzpaiUdjNP = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_NameSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_NameSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _6gkmVvKijmPMJfGWQobhxH = e1;
	archive1.refreshEntry(e1);
	return _6gkmVvKijmPMJfGWQobhxH;
};
nat_systems_NameSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _pV2QVzTVsDtrHxnoLya5kT = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_pV2QVzTVsDtrHxnoLya5kT)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _eGncAGgBRryfqdJbv9LWoD = func.apply(o,_g);
		return _eGncAGgBRryfqdJbv9LWoD;
	} else {
		return _pV2QVzTVsDtrHxnoLya5kT;
	}
};
nat_systems_NameSystem.__super__ = nat_System;
nat_systems_NameSystem.prototype = $extend(nat_System.prototype,{
	entriesByName: null
	,getEntries: function(name) {
		var this1 = this.entriesByName;
		var key = name.toLowerCase();
		var entries = this1.h[key];
		if(kiss_Prelude.truthy(entries)) {
			return entries;
		} else {
			return [];
		}
	}
	,__class__: nat_systems_NameSystem
});
var nat_systems_PlaygroundSystem = function(name,ui,canProcess,createEntryRep,connectionProcessor,onRemoveEntry) {
	this.setupProcess = false;
	this.entryReps = new haxe_ds_StringMap();
	this.playgroundBGColors = new haxe_ds_StringMap();
	this.playgroundDefaultTags = new haxe_ds_StringMap();
	this._playgroundKey = "";
	var _gthis = this;
	this.processor = function(archive,e,pos,ui) {
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(_gthis.entryReps.h,e.id)))) {
			var eRep = createEntryRep(archive,e,pos,ui);
			_gthis.entryReps.h[e.id] = eRep;
			return eRep;
		} else {
			return null;
		}
	};
	this.ui = ui;
	this.createEntryRep = createEntryRep;
	this.connectionProcessor = connectionProcessor;
	nat_System.call(this,name,function(archive,e) {
		var _kq36UcPfPeCcyz9yjTqWjm = nat_systems_PlaygroundSystem.tagsMatch(e,"playground");
		if(kiss_Prelude.truthy(_kq36UcPfPeCcyz9yjTqWjm)) {
			return _kq36UcPfPeCcyz9yjTqWjm;
		} else {
			var _wJZYDMe7mYjVvZ2ZMCfRVx = nat_systems_PlaygroundSystem.tagsMatch(e,"!(or done hidden)");
			var _6tGHo3Q7wBz1gcmjjZcgCi;
			if(kiss_Prelude.truthy(_wJZYDMe7mYjVvZ2ZMCfRVx)) {
				var _mqHymJ7anCPY294WopDqgm = canProcess(archive,e);
				_6tGHo3Q7wBz1gcmjjZcgCi = _mqHymJ7anCPY294WopDqgm;
			} else {
				_6tGHo3Q7wBz1gcmjjZcgCi = _wJZYDMe7mYjVvZ2ZMCfRVx;
			}
			return _6tGHo3Q7wBz1gcmjjZcgCi;
		}
	},function(archive,e,ui) {
		if(kiss_Prelude.truthy(_gthis.setupProcess)) {
			if(kiss_Prelude.truthy(nat_systems_PlaygroundSystem.componentsAndTagsMatch(e,"(and playground Name)"))) {
				var componentData = e.components.h["Name"];
				var name = new tink_json_Parser2().parse(componentData);
				if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"CatsMatchExp"))) {
					archive.changePlaygrounds(function(p) {
						var componentData = e.components.h["CatsMatchExp"];
						var tmp = new tink_json_Parser2().parse(componentData);
						p[name].catsMatch = tmp;
					});
				} else {
					var archive1 = archive;
					var e1 = e;
					var c = archive1.playgrounds[name].catsMatch;
					var ui1 = null;
					var msg = kiss_Prelude.add("adding ",c," as ","CatsMatchExp"," for ",e1.id);
					if(kiss_Prelude.truthy(ui1)) {
						ui1.displayMessage(msg);
					}
					nat_systems_PlaygroundSystem._log(msg);
					var this1 = e1.components;
					var v = new tink_json_Writer0().write(c);
					this1.h["CatsMatchExp"] = v;
					var _shZmMpTo2WbF8zvnPLQVMu = e1;
					archive1.refreshEntry(e1);
				}
				var this1 = _gthis.playgroundBGColors;
				var e1 = e;
				var v;
				if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e1.components.h,"ColorF"))) {
					var componentData = e1.components.h["ColorF"];
					v = new tink_json_Parser10().parse(componentData);
				} else {
					v = { r : 0.0, g : 0.0, b : 0.0, a : 1.0};
				}
				this1.h[name] = v;
				var this1 = _gthis.playgroundDefaultTags;
				var e1 = e;
				var v;
				if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e1.components.h,"TagList"))) {
					var componentData = e1.components.h["TagList"];
					v = new tink_json_Parser11().parse(componentData);
				} else {
					v = [];
				}
				this1.h[name] = v;
				return v;
			} else {
				return null;
			}
		} else if(kiss_Prelude.truthy(nat_systems_PlaygroundSystem.componentsAndTagsMatch(e,archive.playgrounds[_gthis._playgroundKey].catsMatch))) {
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Positions")))) {
				var archive1 = archive;
				var e1 = e;
				var c = new haxe_ds_StringMap();
				var ui1 = null;
				var msg = kiss_Prelude.add("adding ",c," as ","Positions"," for ",e1.id);
				if(kiss_Prelude.truthy(ui1)) {
					ui1.displayMessage(msg);
				}
				nat_systems_PlaygroundSystem._log(msg);
				var this1 = e1.components;
				var v = new tink_json_Writer8().write(c);
				this1.h["Positions"] = v;
				var _otvYmKG4Rds2GdbqVfXJMa = e1;
				archive1.refreshEntry(e1);
			}
			var componentData = e.components.h["Positions"];
			var positions = new tink_json_Parser7().parse(componentData);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(positions.h,_gthis._playgroundKey)))) {
				var componentData = e.components.h["Positions"];
				var positions = new tink_json_Parser7().parse(componentData);
				var k = _gthis._playgroundKey;
				var v = _gthis.defaultPosition(e);
				positions.h[k] = v;
				var _eSS9CJ4yRyHV9Fb4pb1jDC = v;
				var this1 = e.components;
				var v = new tink_json_Writer8().write(positions);
				this1.h["Positions"] = v;
				archive.refreshEntry(e);
			}
			var componentData = e.components.h["Positions"];
			var pos = new tink_json_Parser7().parse(componentData).h[_gthis._playgroundKey];
			return _gthis.processor(archive,e,pos,ui);
		} else {
			return null;
		}
	});
	this.onRemoveEntry = function(archive,e,ui) {
		onRemoveEntry(archive,e,ui);
		var key = e.id;
		var _this = _gthis.entryReps;
		if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
			delete(_this.h[key]);
			return true;
		} else {
			return false;
		}
	};
};
$hxClasses["nat.systems.PlaygroundSystem"] = nat_systems_PlaygroundSystem;
nat_systems_PlaygroundSystem.__name__ = true;
nat_systems_PlaygroundSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_PlaygroundSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_PlaygroundSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_PlaygroundSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_PlaygroundSystem.tagList(e));
};
nat_systems_PlaygroundSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_PlaygroundSystem.componentList(e));
};
nat_systems_PlaygroundSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_PlaygroundSystem.tagList(e),nat_systems_PlaygroundSystem.componentList(e)));
};
nat_systems_PlaygroundSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _kV9fRMBrf4YF5tiAZP6V74 = null;
	archive.refreshEntry(e);
	return _kV9fRMBrf4YF5tiAZP6V74;
};
nat_systems_PlaygroundSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _xfUckKZVAVu982gy5v26E3 = null;
	archive.refreshEntry(e);
	return _xfUckKZVAVu982gy5v26E3;
};
nat_systems_PlaygroundSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _ou5JXNUuQhF5TWSRfqUCQb = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _ou5JXNUuQhF5TWSRfqUCQb;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_PlaygroundSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _7k1K1FVjpawCmvbkVFmqGi = e1;
		archive1.refreshEntry(e1);
		return _7k1K1FVjpawCmvbkVFmqGi;
	}
};
nat_systems_PlaygroundSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _8R5Dg4D9y56qYEchm44xdD = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _8R5Dg4D9y56qYEchm44xdD;
	} else {
		return null;
	}
};
nat_systems_PlaygroundSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_PlaygroundSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _qoFSfToV8LCPmkiKG41chB = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_PlaygroundSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _5Ay77RwgRAiba4Z34fEiX6 = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_PlaygroundSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _iXos64vtE32DEXz52YkMpC = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_PlaygroundSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_PlaygroundSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_PlaygroundSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_PlaygroundSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _jgBmUYoCVpsrJdCnktwJSb = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_PlaygroundSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_PlaygroundSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _SCur2Xh1MD1mwSCRfRS15 = e1;
	archive1.refreshEntry(e1);
	return _SCur2Xh1MD1mwSCRfRS15;
};
nat_systems_PlaygroundSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_PlaygroundSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _b1sN8mstqTHHU4CELH64r3 = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_PlaygroundSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_PlaygroundSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _cP9gxxJZ1DFESDyZ9k9V8j = e1;
	archive1.refreshEntry(e1);
	return _cP9gxxJZ1DFESDyZ9k9V8j;
};
nat_systems_PlaygroundSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _2DUBRXKthGjaQdthuRWuH8 = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_2DUBRXKthGjaQdthuRWuH8)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _vRnBTnnH61Z4GoTzMKktsQ = func.apply(o,_g);
		return _vRnBTnnH61Z4GoTzMKktsQ;
	} else {
		return _2DUBRXKthGjaQdthuRWuH8;
	}
};
nat_systems_PlaygroundSystem.__super__ = nat_System;
nat_systems_PlaygroundSystem.prototype = $extend(nat_System.prototype,{
	_playgroundKey: null
	,currentDefaultTags: function() {
		var _6yZfFhLQDJGhWTn1cagM6j = this.playgroundDefaultTags.h[this._playgroundKey];
		if(kiss_Prelude.truthy(_6yZfFhLQDJGhWTn1cagM6j)) {
			return _6yZfFhLQDJGhWTn1cagM6j;
		} else {
			var _r3PJRznBysmuL6yb4LuHNR = [];
			return _r3PJRznBysmuL6yb4LuHNR;
		}
	}
	,getPlaygroundKey: function() {
		return this._playgroundKey;
	}
	,playgroundDefaultTags: null
	,playgroundBGColors: null
	,entryReps: null
	,processor: null
	,ui: null
	,createEntryRep: null
	,connectionProcessor: null
	,switchPlaygroundKey: function(key) {
		var _gthis = this;
		this._playgroundKey = key;
		var _8Atj1vX8P2J1Pp191dEGbN = this.playgroundBGColors.h[this._playgroundKey];
		var tmp;
		if(kiss_Prelude.truthy(_8Atj1vX8P2J1Pp191dEGbN)) {
			tmp = _8Atj1vX8P2J1Pp191dEGbN;
		} else {
			var _fymisiRnRfZ6pBMEvJovS = { r : 0.0, g : 0.0, b : 0.0, a : 1.0};
			tmp = _fymisiRnRfZ6pBMEvJovS;
		}
		this.clear(tmp);
		this.ui.controller.archive.defaultInitializer = function(e) {
			if(kiss_Prelude.truthy(_gthis.currentDefaultTags())) {
				nat_systems_PlaygroundSystem.addTags(_gthis.ui.controller.archive,e,_gthis.currentDefaultTags());
			}
			var _9K65hgJfS2vZLBMfC5uKqn = _gthis.ui.cursorPosition();
			if(kiss_Prelude.truthy(_9K65hgJfS2vZLBMfC5uKqn)) {
				var _79FoVWpLzR2uTy2hUsUcEG = _9K65hgJfS2vZLBMfC5uKqn;
				if(kiss_Prelude.truthy(kiss_Prelude.isNull(_79FoVWpLzR2uTy2hUsUcEG))) {
					return null;
				} else if(_9K65hgJfS2vZLBMfC5uKqn._hx_index == 0) {
					var position = _9K65hgJfS2vZLBMfC5uKqn.v;
					var archive = _gthis.ui.controller.archive;
					var e1 = e;
					var _g = new haxe_ds_StringMap();
					_g.h[_gthis._playgroundKey] = position;
					var c = _g;
					var ui = null;
					var msg = kiss_Prelude.add("adding ",c," as ","Positions"," for ",e1.id);
					if(kiss_Prelude.truthy(ui)) {
						ui.displayMessage(msg);
					}
					nat_systems_PlaygroundSystem._log(msg);
					var this1 = e1.components;
					var v = new tink_json_Writer8().write(c);
					this1.h["Positions"] = v;
					var _6mcZxGGXRDrQTwdxo5dvk3 = e1;
					archive.refreshEntry(e1);
					return _6mcZxGGXRDrQTwdxo5dvk3;
				} else {
					return null;
				}
			} else {
				return null;
			}
		};
		this.process(this.ui.controller.archive,this.ui);
	}
	,clear: function(color) {
		throw haxe_Exception.thrown("(PlaygroundSystem.clear <color>) not implemented");
	}
	,setupProcess: null
	,process: function(archive,ui) {
		if(kiss_Prelude.truthy(this.setupProcess)) {
			nat_System.prototype.process.call(this,archive,ui);
			this.setupProcess = false;
			return;
		}
		if(kiss_Prelude.truthy(this._playgroundKey)) {
			nat_System.prototype.process.call(this,archive,ui);
			var h = this.entries.h;
			var e_h = h;
			var e_keys = Object.keys(h);
			var e_length = e_keys.length;
			var e_current = 0;
			while(e_current < e_length) {
				var e = e_h[e_keys[e_current++]];
				if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Positions"))) {
					var componentData = e.components.h["Positions"];
					var pos = new tink_json_Parser7().parse(componentData).h[this._playgroundKey];
					var e1 = e;
					var this1;
					if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e1.components.h,"Connections"))) {
						var componentData1 = e1.components.h["Connections"];
						this1 = new tink_json_Parser8().parse(componentData1);
					} else {
						this1 = new haxe_ds_StringMap();
					}
					var h = this1.h;
					var _g_h = h;
					var _g_keys = Object.keys(h);
					var _g_length = _g_keys.length;
					var _g_current = 0;
					while(_g_current < _g_length) {
						var key = _g_keys[_g_current++];
						var _g_key = key;
						var _g_value = _g_h[key];
						var e2id = _g_key;
						var _ = _g_value;
						var _utMLYum6osroUQsCD253Vr = archive.entries.h[e2id];
						if(kiss_Prelude.truthy(_utMLYum6osroUQsCD253Vr)) {
							var _53YmMyToksG72P6HtfmAoH = _utMLYum6osroUQsCD253Vr;
							if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_53YmMyToksG72P6HtfmAoH))) {
								var e2 = _utMLYum6osroUQsCD253Vr;
								var componentData2 = e2.components.h["Positions"];
								var _7EVrCj4S27DigFADNdT11S = new tink_json_Parser7().parse(componentData2).h[this._playgroundKey];
								if(kiss_Prelude.truthy(_7EVrCj4S27DigFADNdT11S)) {
									var _uf1tZ7A5nK9ikQHcsXHUVm = _7EVrCj4S27DigFADNdT11S;
									if(!kiss_Prelude.truthy(kiss_Prelude.isNull(_uf1tZ7A5nK9ikQHcsXHUVm))) {
										var pos2 = _7EVrCj4S27DigFADNdT11S;
										this.connectionProcessor(archive,e,pos,e2,pos2,ui);
									}
								}
							}
						}
					}
				}
			}
		}
	}
	,savePosition: function(e,x,y,z) {
		var componentData = e.components.h["Positions"];
		var positions = new tink_json_Parser7().parse(componentData);
		var oldPos = positions.h[this._playgroundKey];
		var k = this._playgroundKey;
		var _52n7FKmxhxdbihF2c5Pyo1 = z;
		var v;
		if(kiss_Prelude.truthy(_52n7FKmxhxdbihF2c5Pyo1)) {
			v = _52n7FKmxhxdbihF2c5Pyo1;
		} else {
			var _2jMRQ39V5hbUBKbTvkr9MD = oldPos.z;
			v = _2jMRQ39V5hbUBKbTvkr9MD;
		}
		var v1 = { z : v, x : x, y : y};
		positions.h[k] = v1;
		var _m7RDTJyi8Pjh6JCYL3MwBn = v1;
		var this1 = e.components;
		var v = new tink_json_Writer8().write(positions);
		this1.h["Positions"] = v;
		this.ui.controller.archive.refreshEntry(e);
		return _m7RDTJyi8Pjh6JCYL3MwBn;
	}
	,defaultPosition: function(e) {
		return { x : 0.0, y : 0.0, z : 0.0};
	}
	,getSelectedReps: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.ui.controller.getSelectedEntries();
		while(_g1 < _g2.length) {
			var e = _g2[_g1];
			++_g1;
			_g.push(this.entryReps.h[e.id]);
		}
		return kiss_Prelude.filter(_g);
	}
	,__class__: nat_systems_PlaygroundSystem
});
var nat_systems_RemarkableAPISystem = function() {
	nat_System.call(this,"RemarkableAPISystem",function(archive,e) {
		return false;
	},function(archive,e,ui) {
		return null;
	});
};
$hxClasses["nat.systems.RemarkableAPISystem"] = nat_systems_RemarkableAPISystem;
nat_systems_RemarkableAPISystem.__name__ = true;
nat_systems_RemarkableAPISystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_RemarkableAPISystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_RemarkableAPISystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_RemarkableAPISystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_RemarkableAPISystem.tagList(e));
};
nat_systems_RemarkableAPISystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_RemarkableAPISystem.componentList(e));
};
nat_systems_RemarkableAPISystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_RemarkableAPISystem.tagList(e),nat_systems_RemarkableAPISystem.componentList(e)));
};
nat_systems_RemarkableAPISystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _5npAqKANQ7J3nHsYR4UbF = null;
	archive.refreshEntry(e);
	return _5npAqKANQ7J3nHsYR4UbF;
};
nat_systems_RemarkableAPISystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _hRrSQtpjTXwiVyNtPNBJvV = null;
	archive.refreshEntry(e);
	return _hRrSQtpjTXwiVyNtPNBJvV;
};
nat_systems_RemarkableAPISystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _rZ4ipt3fuaJXrmntfASgKv = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _rZ4ipt3fuaJXrmntfASgKv;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_RemarkableAPISystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _oDcFrBkae4urEfxSMby3o9 = e1;
		archive1.refreshEntry(e1);
		return _oDcFrBkae4urEfxSMby3o9;
	}
};
nat_systems_RemarkableAPISystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _h4RH6MPwkcDC18EY32NPyN = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _h4RH6MPwkcDC18EY32NPyN;
	} else {
		return null;
	}
};
nat_systems_RemarkableAPISystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_RemarkableAPISystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _B5H9YCXNtYfSiMYjnmWQA = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_RemarkableAPISystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _oDUeCUPnwJWc347oXhPWQx = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_RemarkableAPISystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _b7CpqLgNzc5DjT1UvhdJh8 = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_RemarkableAPISystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_RemarkableAPISystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_RemarkableAPISystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_RemarkableAPISystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _pW1MC4Ew2qbkQ86fMZfVxv = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_RemarkableAPISystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_RemarkableAPISystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _t3383PpfFAHcqBW4u6WdEx = e1;
	archive1.refreshEntry(e1);
	return _t3383PpfFAHcqBW4u6WdEx;
};
nat_systems_RemarkableAPISystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_RemarkableAPISystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _3bMRC3Pgr6TzXjUx79zEUB = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_RemarkableAPISystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_RemarkableAPISystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _jWEiRDkRLJy58v14wdjmBA = e1;
	archive1.refreshEntry(e1);
	return _jWEiRDkRLJy58v14wdjmBA;
};
nat_systems_RemarkableAPISystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _kPRGPht6GLwk2UUD5dukwV = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_kPRGPht6GLwk2UUD5dukwV)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _nJXFxDMoMALay71eLqK8pb = func.apply(o,_g);
		return _nJXFxDMoMALay71eLqK8pb;
	} else {
		return _kPRGPht6GLwk2UUD5dukwV;
	}
};
nat_systems_RemarkableAPISystem.__super__ = nat_System;
nat_systems_RemarkableAPISystem.prototype = $extend(nat_System.prototype,{
	__class__: nat_systems_RemarkableAPISystem
});
var nat_systems_TagSystem = function(name,tagFilterString,processor) {
	this.tagFilterString = tagFilterString;
	nat_System.call(this,name,function(archive,e) {
		return nat_systems_TagSystem.tagsMatch(e,tagFilterString);
	},processor);
};
$hxClasses["nat.systems.TagSystem"] = nat_systems_TagSystem;
nat_systems_TagSystem.__name__ = true;
nat_systems_TagSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_TagSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_TagSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_TagSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_TagSystem.tagList(e));
};
nat_systems_TagSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_TagSystem.componentList(e));
};
nat_systems_TagSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_TagSystem.tagList(e),nat_systems_TagSystem.componentList(e)));
};
nat_systems_TagSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _7TppZasPE2xYQNy9bARRU5 = null;
	archive.refreshEntry(e);
	return _7TppZasPE2xYQNy9bARRU5;
};
nat_systems_TagSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _wj6Utfkt47DEDTxDnexcj4 = null;
	archive.refreshEntry(e);
	return _wj6Utfkt47DEDTxDnexcj4;
};
nat_systems_TagSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _fv1rFU2AXRQ7fkTwhkDTdJ = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _fv1rFU2AXRQ7fkTwhkDTdJ;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_TagSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _qHs5eGMkxRKSFM4XZqGqt9 = e1;
		archive1.refreshEntry(e1);
		return _qHs5eGMkxRKSFM4XZqGqt9;
	}
};
nat_systems_TagSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _x1X671snxUmGbeAQjYztSs = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _x1X671snxUmGbeAQjYztSs;
	} else {
		return null;
	}
};
nat_systems_TagSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_TagSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _aqwozyT1g4aua2zja7pLgU = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_TagSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _7D7eAbvi7vNXaf4BNcAir = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_TagSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _wnfum55WKTqnJS2bNerTAP = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_TagSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_TagSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_TagSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_TagSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _bwjjoFTtDgvTed8aUzuCPH = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_TagSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_TagSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _aGnAEoySbY9jjAq4Wzv8c4 = e1;
	archive1.refreshEntry(e1);
	return _aGnAEoySbY9jjAq4Wzv8c4;
};
nat_systems_TagSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_TagSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _ioxa4V5qb3WoXo1YdABNYZ = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_TagSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_TagSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _tQ6EQUM2vbwQbVWWuFoCWA = e1;
	archive1.refreshEntry(e1);
	return _tQ6EQUM2vbwQbVWWuFoCWA;
};
nat_systems_TagSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _rdqQaByfKR2a1prP6kFQHD = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_rdqQaByfKR2a1prP6kFQHD)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _nwvH3mDN9YGVvWbHFNLSxw = func.apply(o,_g);
		return _nwvH3mDN9YGVvWbHFNLSxw;
	} else {
		return _rdqQaByfKR2a1prP6kFQHD;
	}
};
nat_systems_TagSystem.__super__ = nat_System;
nat_systems_TagSystem.prototype = $extend(nat_System.prototype,{
	tagFilterString: null
	,__class__: nat_systems_TagSystem
});
var nat_systems_WikipediaImageSystem = function() {
	nat_systems_MediaWikiSystem.call(this,"WikipediaImageSystem","https://en.wikipedia.org/w/api.php",function(archive,e) {
		return nat_systems_WikipediaImageSystem.tagsMatch(e,"(and media !wikipediaProcessed)");
	},$bind(this,this.scrapeForImages),1);
};
$hxClasses["nat.systems.WikipediaImageSystem"] = nat_systems_WikipediaImageSystem;
nat_systems_WikipediaImageSystem.__name__ = true;
nat_systems_WikipediaImageSystem._log = function(msg) {
	return kiss_Prelude.print(msg);
};
nat_systems_WikipediaImageSystem.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
nat_systems_WikipediaImageSystem.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
nat_systems_WikipediaImageSystem.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,nat_systems_WikipediaImageSystem.tagList(e));
};
nat_systems_WikipediaImageSystem.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,nat_systems_WikipediaImageSystem.componentList(e));
};
nat_systems_WikipediaImageSystem.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(nat_systems_WikipediaImageSystem.tagList(e),nat_systems_WikipediaImageSystem.componentList(e)));
};
nat_systems_WikipediaImageSystem.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _6JG1CVpwgo4sLJ99uc8cH1 = null;
	archive.refreshEntry(e);
	return _6JG1CVpwgo4sLJ99uc8cH1;
};
nat_systems_WikipediaImageSystem.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _k3vTrh7d5dLR8Jskv5MPQF = null;
	archive.refreshEntry(e);
	return _k3vTrh7d5dLR8Jskv5MPQF;
};
nat_systems_WikipediaImageSystem.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _csjfMSsujzZzwaQPhAA2B = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _csjfMSsujzZzwaQPhAA2B;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_WikipediaImageSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _reXFpHgEXDo9fyqRqdom8E = e1;
		archive1.refreshEntry(e1);
		return _reXFpHgEXDo9fyqRqdom8E;
	}
};
nat_systems_WikipediaImageSystem.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _nNZuWjP1BeqGUKkBm85h3r = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _nNZuWjP1BeqGUKkBm85h3r;
	} else {
		return null;
	}
};
nat_systems_WikipediaImageSystem.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
nat_systems_WikipediaImageSystem.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _9yBowRA2nqbnihPhBQRTMG = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_WikipediaImageSystem._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _p8dVrC8J446bZyDLk7xe5z = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
nat_systems_WikipediaImageSystem.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _h3TESeHstjW2vGbmFVVNdg = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
nat_systems_WikipediaImageSystem.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
nat_systems_WikipediaImageSystem.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
nat_systems_WikipediaImageSystem.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_WikipediaImageSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _ugGXCPiHZUMaT3LPrm6keZ = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_WikipediaImageSystem.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_WikipediaImageSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _mqj4FkogossxSeNAs6TB6g = e1;
	archive1.refreshEntry(e1);
	return _mqj4FkogossxSeNAs6TB6g;
};
nat_systems_WikipediaImageSystem.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_WikipediaImageSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _s1ZfaqrYUEotEcaBxYQRDf = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = nat_systems_WikipediaImageSystem.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	nat_systems_WikipediaImageSystem._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _e3vhi9o3Hxvp9yT36tQwHW = e1;
	archive1.refreshEntry(e1);
	return _e3vhi9o3Hxvp9yT36tQwHW;
};
nat_systems_WikipediaImageSystem.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _2NgRQyakeXUd7oGBQLckZZ = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_2NgRQyakeXUd7oGBQLckZZ)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _2ma4PkrT67iPmtzrQa9Fbh = func.apply(o,_g);
		return _2ma4PkrT67iPmtzrQa9Fbh;
	} else {
		return _2NgRQyakeXUd7oGBQLckZZ;
	}
};
nat_systems_WikipediaImageSystem.__super__ = nat_systems_MediaWikiSystem;
nat_systems_WikipediaImageSystem.prototype = $extend(nat_systems_MediaWikiSystem.prototype,{
	scrapeForImages: function(archive,e,ui) {
		var componentData = e.components.h["Name"];
		var title = new tink_json_Parser2().parse(componentData);
		var wikipediaImageUrls = this.queryImageUrls(this.queryImageTitles([title]));
		var _g = [];
		var _g1 = 0;
		while(_g1 < wikipediaImageUrls.length) {
			var url = wikipediaImageUrls[_g1];
			++_g1;
			var filePath = kiss_Prelude.joinPath;
			var archive1 = archive.archiveDir;
			var s = haxe_io_Path.withoutDirectory(url);
			var filePath1 = filePath(archive1,kiss_Prelude.print(StringTools.replace(decodeURIComponent(s.split("+").join(" ")),"\"","%22"),"(.replace (.urlDecode (url.withoutDirectory)) \"\"\" \"%22\")"));
			var ui1 = ui;
			var msg = kiss_Prelude.add("Downloading ",title == null ? "null" : "" + title," image: ",url == null ? "null" : "" + url,"");
			if(kiss_Prelude.truthy(ui1)) {
				ui1.displayMessage(msg);
			}
			nat_systems_WikipediaImageSystem._log(msg);
			kiss_Prelude.assertProcess("curl",["--output",filePath1,url]);
			_g.push(filePath1);
		}
		nat_systems_WikipediaImageSystem.addFiles(archive,e,_g);
		var archive1 = archive;
		var e1 = e;
		var ui = null;
		var msg = kiss_Prelude.add("removing ","Images"," component from ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_WikipediaImageSystem._log(msg);
		var _this = e1.components;
		if(Object.prototype.hasOwnProperty.call(_this.h,"Images")) {
			delete(_this.h["Images"]);
		}
		var _qMTNsJ2QchpBQ7Q2WkgZFS = e1;
		archive1.refreshEntry(e1);
		var archive1 = archive;
		var e1 = e;
		var ui = null;
		var msg = kiss_Prelude.add("removing ","Images2"," component from ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		nat_systems_WikipediaImageSystem._log(msg);
		var _this = e1.components;
		if(Object.prototype.hasOwnProperty.call(_this.h,"Images2")) {
			delete(_this.h["Images2"]);
		}
		var _4jNpWZhmc3ACNzLrseoUmT = e1;
		archive1.refreshEntry(e1);
		return nat_systems_WikipediaImageSystem.addTags(archive,e,["wikipediaProcessed"]);
	}
	,__class__: nat_systems_WikipediaImageSystem
});
var sys_io_File = function() { };
$hxClasses["sys.io.File"] = sys_io_File;
sys_io_File.__name__ = true;
sys_io_File.copy = function(srcPath,dstPath) {
	var src = js_node_Fs.openSync(srcPath,"r");
	var stat = js_node_Fs.fstatSync(src);
	var dst = js_node_Fs.openSync(dstPath,"w",stat.mode);
	var bytesRead;
	var pos = 0;
	while(true) {
		bytesRead = js_node_Fs.readSync(src,sys_io_File.copyBuf,0,65536,pos);
		if(!(bytesRead > 0)) {
			break;
		}
		js_node_Fs.writeSync(dst,sys_io_File.copyBuf,0,bytesRead);
		pos += bytesRead;
	}
	js_node_Fs.closeSync(src);
	js_node_Fs.closeSync(dst);
};
var sys_io_FileInput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileInput"] = sys_io_FileInput;
sys_io_FileInput.__name__ = true;
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	fd: null
	,pos: null
	,readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.pos >= js_node_Fs.fstatSync(this.fd).size;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileOutput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileOutput"] = sys_io_FileOutput;
sys_io_FileOutput.__name__ = true;
sys_io_FileOutput.__super__ = haxe_io_Output;
sys_io_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	fd: null
	,pos: null
	,writeByte: function(b) {
		var buf = js_node_buffer_Buffer.alloc(1);
		buf[0] = b;
		js_node_Fs.writeSync(this.fd,buf,0,1,this.pos);
		this.pos++;
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var wrote = js_node_Fs.writeSync(this.fd,buf,pos,len,this.pos);
		this.pos += wrote;
		return wrote;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,__class__: sys_io_FileOutput
});
var sys_io_FileSeek = $hxEnums["sys.io.FileSeek"] = { __ename__:true,__constructs__:null
	,SeekBegin: {_hx_name:"SeekBegin",_hx_index:0,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekCur: {_hx_name:"SeekCur",_hx_index:1,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekEnd: {_hx_name:"SeekEnd",_hx_index:2,__enum__:"sys.io.FileSeek",toString:$estr}
};
sys_io_FileSeek.__constructs__ = [sys_io_FileSeek.SeekBegin,sys_io_FileSeek.SeekCur,sys_io_FileSeek.SeekEnd];
var test_DummyUI = function() {
	this.shortcutHandler = null;
	this.controller = null;
};
$hxClasses["test.DummyUI"] = test_DummyUI;
test_DummyUI.__name__ = true;
test_DummyUI.__interfaces__ = [nat_ArchiveUI];
test_DummyUI.prototype = {
	controller: null
	,enterText: function(prompt,resolve,maxLength) {
		resolve("");
	}
	,enterNumber: function(prompt,resolve,min,max,inStepsOf,allowNaN) {
		resolve(min);
	}
	,chooseEntry: function(prompt,archive,resolve) {
		resolve(null);
	}
	,chooseEntries: function(prompt,archive,resolve,min,max) {
		resolve([]);
	}
	,chooseBetweenStrings: function(prompt,choices,resolve) {
		resolve(choices[0]);
	}
	,handleChanges: function(archive,changeSet) {
	}
	,displayMessage: function(message) {
	}
	,reportError: function(error) {
	}
	,onSelectionChanged: function(selectedEntries,lastSelectedEntries) {
	}
	,showPrefixMap: function(map) {
	}
	,hidePrefixMap: function() {
	}
	,cursorPosition: function() {
		return haxe_ds_Option.None;
	}
	,choosePosition: function(prompt,resolve) {
		resolve({ x : 0, y : 0, z : 0});
	}
	,playgroundSystem: function() {
		return null;
	}
	,shortcutHandler: null
	,__class__: test_DummyUI
};
var test_TestMain = function() { };
$hxClasses["test.TestMain"] = test_TestMain;
test_TestMain.__name__ = true;
test_TestMain.main = function() {
	test__$impl_TestMain_$.main();
};
var test__$impl_TestMain_$ = function() { };
$hxClasses["test._impl.TestMain_"] = test__$impl_TestMain_$;
test__$impl_TestMain_$.__name__ = true;
test__$impl_TestMain_$._log = function(msg) {
	return kiss_Prelude.print(msg);
};
test__$impl_TestMain_$.tagList = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var t = new tink_json_Parser1().parse(componentData);
		var _g = [];
		var h = t.h;
		var elem_h = h;
		var elem_keys = Object.keys(h);
		var elem_length = elem_keys.length;
		var elem_current = 0;
		while(elem_current < elem_length) {
			var elem = elem_keys[elem_current++];
			_g.push(elem);
		}
		return _g;
	} else {
		return [];
	}
};
test__$impl_TestMain_$.componentList = function(e) {
	var _g = [];
	var h = e.components.h;
	var _g_h = h;
	var _g_keys = Object.keys(h);
	var _g_length = _g_keys.length;
	var _g_current = 0;
	while(_g_current < _g_length) {
		var key = _g_keys[_g_current++];
		var _g_key = key;
		var _g_value = _g_h[key];
		var cType = _g_key;
		var cId = _g_value;
		_g.push(cType);
	}
	return _g;
};
test__$impl_TestMain_$.tagsMatch = function(e,tagsBoolExp) {
	return nat_BoolExpInterp.eval(tagsBoolExp,test__$impl_TestMain_$.tagList(e));
};
test__$impl_TestMain_$.componentsMatch = function(e,componentsBoolExp) {
	return nat_BoolExpInterp.eval(componentsBoolExp,test__$impl_TestMain_$.componentList(e));
};
test__$impl_TestMain_$.componentsAndTagsMatch = function(e,componentsAndTagsBoolExp) {
	return nat_BoolExpInterp.eval(componentsAndTagsBoolExp,kiss_Prelude.concat(test__$impl_TestMain_$.tagList(e),test__$impl_TestMain_$.componentList(e)));
};
test__$impl_TestMain_$.addFiles = function(archive,e,files,leaveOriginalCopy) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		var pathWithoutDir = haxe_io_Path.withoutDirectory(file);
		if(kiss_Prelude.truthy(!kiss_Prelude.truthy(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,e.files.indexOf(pathWithoutDir)))))) {
			var pathInArchive = kiss_Prelude.joinPath(archive.archiveDir,"files",pathWithoutDir);
			if(kiss_Prelude.truthy(!kiss_Prelude.truthy(sys_FileSystem.exists(pathInArchive)))) {
				(kiss_Prelude.truthy(leaveOriginalCopy) ? sys_io_File.copy : sys_FileSystem.rename)(file,pathInArchive);
			}
			e.files.push(pathWithoutDir);
		}
	}
	var _9NsPo6nd5ZuGBaHJJbKE1H = null;
	archive.refreshEntry(e);
	return _9NsPo6nd5ZuGBaHJJbKE1H;
};
test__$impl_TestMain_$.removeFiles = function(archive,e,files) {
	var _g = 0;
	while(_g < files.length) {
		var file = files[_g];
		++_g;
		HxOverrides.remove(e.files,file);
	}
	var _pX2p7CnvDPpiYygd9RgquD = null;
	archive.refreshEntry(e);
	return _pX2p7CnvDPpiYygd9RgquD;
};
test__$impl_TestMain_$.addTags = function(archive,e,tagsToAdd) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToAdd.length) {
			var tag = tagsToAdd[_g];
			++_g;
			tags.h[tag] = 1;
		}
		var _2s81QezMUBz7gVk1W9nBwS = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _2s81QezMUBz7gVk1W9nBwS;
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < tagsToAdd.length) {
			var tag = tagsToAdd[_g1];
			++_g1;
			_g.h[tag] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Tags"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		test__$impl_TestMain_$._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer4().write(c);
		this1.h["Tags"] = v;
		var _cf5PcHMDgiuayBR48tCuzE = e1;
		archive1.refreshEntry(e1);
		return _cf5PcHMDgiuayBR48tCuzE;
	}
};
test__$impl_TestMain_$.removeTags = function(archive,e,tagsToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Tags"))) {
		var componentData = e.components.h["Tags"];
		var tags = new tink_json_Parser1().parse(componentData);
		var _g = 0;
		while(_g < tagsToRemove.length) {
			var tag = tagsToRemove[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(tags.h,tag)) {
				delete(tags.h[tag]);
			}
		}
		var _b3LTSLedosfiE8GrhRHyGH = null;
		var this1 = e.components;
		var v = new tink_json_Writer4().write(tags);
		this1.h["Tags"] = v;
		archive.refreshEntry(e);
		return _b3LTSLedosfiE8GrhRHyGH;
	} else {
		return null;
	}
};
test__$impl_TestMain_$.getScale = function(e) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Images2"))) {
		var componentData = e.components.h["Images2"];
		var i2 = new tink_json_Parser9().parse(componentData);
		return i2.imageScales[i2.pinnedImageIndex];
	} else if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Scale"))) {
		var componentData = e.components.h["Scale"];
		return new tink_json_Parser4().parse(componentData);
	} else {
		return 1.0;
	}
};
test__$impl_TestMain_$.addConnections = function(archive,e,entriesToConnect) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToConnect.length) {
			var e2 = entriesToConnect[_g];
			++_g;
			conn.h[e2.id] = 1;
		}
		var _fHHntLNxH4rBzivc5KhSxB = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	} else {
		var archive1 = archive;
		var e1 = e;
		var _g = new haxe_ds_StringMap();
		var _g1 = 0;
		while(_g1 < entriesToConnect.length) {
			var e2 = entriesToConnect[_g1];
			++_g1;
			_g.h[e2.id] = 1;
		}
		var c = _g;
		var ui = null;
		var msg = kiss_Prelude.add("adding ",c," as ","Connections"," for ",e1.id);
		if(kiss_Prelude.truthy(ui)) {
			ui.displayMessage(msg);
		}
		test__$impl_TestMain_$._log(msg);
		var this1 = e1.components;
		var v = new tink_json_Writer14().write(c);
		this1.h["Connections"] = v;
		var _d6DFuYY8j2ydvP2nRo4Gk6 = e1;
		archive1.refreshEntry(e1);
	}
	return e;
};
test__$impl_TestMain_$.removeConnections = function(archive,e,entriesToRemove) {
	if(kiss_Prelude.truthy(Object.prototype.hasOwnProperty.call(e.components.h,"Connections"))) {
		var componentData = e.components.h["Connections"];
		var conn = new tink_json_Parser8().parse(componentData);
		var _g = 0;
		while(_g < entriesToRemove.length) {
			var e2 = entriesToRemove[_g];
			++_g;
			var key = e2.id;
			if(Object.prototype.hasOwnProperty.call(conn.h,key)) {
				delete(conn.h[key]);
			}
		}
		var _enMa7vs5RwaiSuLH37nuyS = null;
		var this1 = e.components;
		var v = new tink_json_Writer14().write(conn);
		this1.h["Connections"] = v;
		archive.refreshEntry(e);
	}
	return e;
};
test__$impl_TestMain_$.colorIFromF = function(cf) {
	return { r : kiss_Prelude.multiply(255,cf.r) | 0, g : kiss_Prelude.multiply(255,cf.g) | 0, b : kiss_Prelude.multiply(255,cf.b) | 0, a : kiss_Prelude.multiply(255,cf.a) | 0};
};
test__$impl_TestMain_$.colorFFromI = function(ci) {
	return { r : kiss_Prelude.divide(ci.r,255.0), g : kiss_Prelude.divide(ci.g,255.0), b : kiss_Prelude.divide(ci.b,255.0), a : kiss_Prelude.divide(ci.a,255)};
};
test__$impl_TestMain_$.addColorFRGBA = function(archive,e,r,g,b,a) {
	var cf = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = cf;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	test__$impl_TestMain_$._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _kNqecepEqMtjcSkpfXJi4m = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = test__$impl_TestMain_$.colorIFromF(cf);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	test__$impl_TestMain_$._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _bgCRyjgBkCV34pSnctTPCe = e1;
	archive1.refreshEntry(e1);
	return _bgCRyjgBkCV34pSnctTPCe;
};
test__$impl_TestMain_$.addColorIRGBA = function(archive,e,r,g,b,a) {
	var ci = { r : r, g : g, b : b, a : a};
	var archive1 = archive;
	var e1 = e;
	var c = ci;
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorI"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	test__$impl_TestMain_$._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer6().write(c);
	this1.h["ColorI"] = v;
	var _tJE5scfzwrcAfn4wJrtyy5 = e1;
	archive1.refreshEntry(e1);
	var archive1 = archive;
	var e1 = e;
	var c = test__$impl_TestMain_$.colorFFromI(ci);
	var ui = null;
	var msg = kiss_Prelude.add("adding ",c," as ","ColorF"," for ",e1.id);
	if(kiss_Prelude.truthy(ui)) {
		ui.displayMessage(msg);
	}
	test__$impl_TestMain_$._log(msg);
	var this1 = e1.components;
	var v = new tink_json_Writer7().write(c);
	this1.h["ColorF"] = v;
	var _fT9ab4pLcWgFUa74M3s5jH = e1;
	archive1.refreshEntry(e1);
	return _fT9ab4pLcWgFUa74M3s5jH;
};
test__$impl_TestMain_$.isEntry = function(o) {
	var fields = Reflect.fields(o);
	var _jUAcbS3JXzPY5sqRdjySg = kiss_Prelude.areEqual(fields.length,3);
	if(kiss_Prelude.truthy(_jUAcbS3JXzPY5sqRdjySg)) {
		var o = null;
		var func = kiss_Prelude.and;
		var _g = [];
		var _g1 = 0;
		var _g2 = ["id","components","files"];
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(!kiss_Prelude.truthy(kiss_Prelude.areEqual(-1,fields.indexOf(f))));
		}
		var _ru1ogdwTxymRVbdsdUqiEp = func.apply(o,_g);
		return _ru1ogdwTxymRVbdsdUqiEp;
	} else {
		return _jUAcbS3JXzPY5sqRdjySg;
	}
};
test__$impl_TestMain_$.main = function() {
	var _cYSesEAmNVxvMMLX8CXvNY = nat_BoolExpInterp.eval("true",[]);
	if(!kiss_Prelude.truthy(_cYSesEAmNVxvMMLX8CXvNY)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:12:1: Assertion failed: \nFrom:[(assert (BoolExpInterp.eval \"true\" []))]",4));
	}
	var _vDiz6uF2aWior7t4jhTUMf = !kiss_Prelude.truthy(nat_BoolExpInterp.eval("false",[]));
	if(!kiss_Prelude.truthy(_vDiz6uF2aWior7t4jhTUMf)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:13:1: Assertion failed: \nFrom:[(assert (not (BoolExpInterp.eval \"false\" [])))]",4));
	}
	var _qXA85nayor3DEhFP4doBm2 = !kiss_Prelude.truthy(nat_BoolExpInterp.eval("flag",[]));
	if(!kiss_Prelude.truthy(_qXA85nayor3DEhFP4doBm2)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:14:1: Assertion failed: \nFrom:[(assert (not (BoolExpInterp.eval \"flag\" [])))]",4));
	}
	var _uXZG4zRA8wikEPBMLED1LV = nat_BoolExpInterp.eval("flag",["flag"]);
	if(!kiss_Prelude.truthy(_uXZG4zRA8wikEPBMLED1LV)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:15:1: Assertion failed: \nFrom:[(assert (BoolExpInterp.eval \"flag\" [\"flag\"]))]",4));
	}
	var _nDBifmVE7qgeTKScyzKQrw = !kiss_Prelude.truthy(nat_BoolExpInterp.eval("(and flag false)",["flag"]));
	if(!kiss_Prelude.truthy(_nDBifmVE7qgeTKScyzKQrw)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:16:1: Assertion failed: \nFrom:[(assert (not (BoolExpInterp.eval \"(and flag false)\" [\"flag\"])))]",4));
	}
	var _kZefK3r98CaNuQs5sLhhir = nat_BoolExpInterp.eval("(or flag otherFlag)",["otherFlag"]);
	if(!kiss_Prelude.truthy(_kZefK3r98CaNuQs5sLhhir)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:17:1: Assertion failed: \nFrom:[(assert (BoolExpInterp.eval \"(or flag otherFlag)\" [\"otherFlag\"]))]",4));
	}
	var archive = new nat_Archive("src/test/example-archive");
	var song1 = archive.entries.h["song1"];
	var song2 = archive.entries.h["song2"];
	var _i6dmP4qgoBCfmNaAdNMzqV = Object.prototype.hasOwnProperty.call(song1.components.h,"Tags");
	if(!kiss_Prelude.truthy(_i6dmP4qgoBCfmNaAdNMzqV)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:26:5: Assertion failed: \nFrom:[(assert (hasComponent song1 Tags))]",4));
	}
	var _bg1LnBND9rpNhqRyRqwFsX = Object.prototype.hasOwnProperty.call(song2.components.h,"Tags");
	if(!kiss_Prelude.truthy(_bg1LnBND9rpNhqRyRqwFsX)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:27:5: Assertion failed: \nFrom:[(assert (hasComponent song2 Tags))]",4));
	}
	var _ekdh3XXyCUnfwEgLdfWPs7 = test__$impl_TestMain_$.componentsMatch(song1,"(and Name Author)");
	if(!kiss_Prelude.truthy(_ekdh3XXyCUnfwEgLdfWPs7)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:28:5: Assertion failed: \nFrom:[(assert (componentsMatch song1 \"(and Name Author)\"))]",4));
	}
	var _dnjqNPQ3d35XszmWidTJ24 = test__$impl_TestMain_$.componentsMatch(song2,"(and Name Author)");
	if(!kiss_Prelude.truthy(_dnjqNPQ3d35XszmWidTJ24)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:29:5: Assertion failed: \nFrom:[(assert (componentsMatch song2 \"(and Name Author)\"))]",4));
	}
	var _puVX8E5fXyZLBHLmYpCWnf = test__$impl_TestMain_$.tagsMatch(song1,"(and song western)");
	if(!kiss_Prelude.truthy(_puVX8E5fXyZLBHLmYpCWnf)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:30:5: Assertion failed: \nFrom:[(assert (tagsMatch song1 \"(and song western)\"))]",4));
	}
	var _pnbJoh15tnFNLsLF8jHZci = !kiss_Prelude.truthy(test__$impl_TestMain_$.tagsMatch(song1,"(and song religious)"));
	if(!kiss_Prelude.truthy(_pnbJoh15tnFNLsLF8jHZci)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:31:5: Assertion failed: \nFrom:[(assert (not (tagsMatch song1 \"(and song religious)\")))]",4));
	}
	var _bu7CDYGudyPRo8grx43cZv = test__$impl_TestMain_$.tagsMatch(song2,"(and song religious)");
	if(!kiss_Prelude.truthy(_bu7CDYGudyPRo8grx43cZv)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:32:5: Assertion failed: \nFrom:[(assert (tagsMatch song2 \"(and song religious)\"))]",4));
	}
	var _8tdHgZErri73wvu2KBFjHE = !kiss_Prelude.truthy(test__$impl_TestMain_$.tagsMatch(song2,"(and song western)"));
	if(!kiss_Prelude.truthy(_8tdHgZErri73wvu2KBFjHE)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:33:5: Assertion failed: \nFrom:[(assert (not (tagsMatch song2 \"(and song western)\")))]",4));
	}
	var componentData = song1.components.h["Author"];
	var author = new tink_json_Parser2().parse(componentData);
	var componentData = song1.components.h["Name"];
	var name = new tink_json_Parser2().parse(componentData);
	var _nHbrQ2VJQWhb8MvuEQow5L = kiss_Prelude.areEqual(author,"Rafael Krux");
	if(!kiss_Prelude.truthy(_nHbrQ2VJQWhb8MvuEQow5L)) {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:38:9: Assertion failed: \nFrom:[(assert (= author \"Rafael Krux\"))]",4));
	}
	var _tYdgZpogk2qDxExTg3ga6C = kiss_Prelude.areEqual(name,"Adventure");
	var _izuy3mUkKfVJYPriWTprjX;
	if(kiss_Prelude.truthy(_tYdgZpogk2qDxExTg3ga6C)) {
		_izuy3mUkKfVJYPriWTprjX = _tYdgZpogk2qDxExTg3ga6C;
	} else {
		throw haxe_Exception.thrown(kiss_Prelude.runtimeInsertAssertionMessage("","/home/nat/repos/kisslang/projects/nat-archive-tool/src/test/TestMain_.kiss:39:9: Assertion failed: \nFrom:[(assert (= name \"Adventure\"))]",4));
	}
	var this1 = song1.components;
	var v = new tink_json_Writer0().write(author);
	this1.h["Author"] = v;
	var this1 = song1.components;
	var v = new tink_json_Writer0().write(name);
	this1.h["Name"] = v;
	archive.refreshEntry(song1);
	var wikipedia = new nat_systems_MediaWikiSystem("Test Wikipedia system","https://en.wikipedia.org/w/api.php",null,null,1);
	kiss_Prelude.print(wikipedia.queryImageUrls(wikipedia.queryImageTitles(["Phoenix Wright"])),"(wikipedia.queryImageUrls (wikipedia.queryImageTitles [\"Phoenix Wright\"]))");
	var controller = new nat_ArchiveController(archive,new test_DummyUI());
};
var tink_Json = function() { };
$hxClasses["tink.Json"] = tink_Json;
tink_Json.__name__ = true;
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
$hxClasses["tink.core.Annex"] = tink_core_Annex;
tink_core_Annex.__name__ = true;
tink_core_Annex.prototype = {
	target: null
	,registry: null
	,__class__: tink_core_Annex
};
var tink_core_Callback = {};
tink_core_Callback._new = function(f) {
	return f;
};
tink_core_Callback.toFunction = function(this1) {
	return this1;
};
tink_core_Callback.invoke = function(this1,data) {
	if(tink_core_Callback.depth < 500) {
		tink_core_Callback.depth++;
		this1(data);
		tink_core_Callback.depth--;
	} else {
		tink_core_Callback.defer(function() {
			this1(data);
		});
	}
};
tink_core_Callback.fromNiladic = function(f) {
	return f;
};
tink_core_Callback.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			tink_core_Callback.invoke(callback,v);
		}
	};
};
tink_core_Callback.defer = function(f) {
	global.setImmediate(f);
};
var tink_core_LinkObject = function() { };
$hxClasses["tink.core.LinkObject"] = tink_core_LinkObject;
tink_core_LinkObject.__name__ = true;
tink_core_LinkObject.__isInterface__ = true;
tink_core_LinkObject.prototype = {
	cancel: null
	,__class__: tink_core_LinkObject
};
var tink_core_CallbackLinkRef = function() {
};
$hxClasses["tink.core.CallbackLinkRef"] = tink_core_CallbackLinkRef;
tink_core_CallbackLinkRef.__name__ = true;
tink_core_CallbackLinkRef.__interfaces__ = [tink_core_LinkObject];
tink_core_CallbackLinkRef.prototype = {
	link: null
	,set_link: function(param) {
		var this1 = this.link;
		if(this1 != null) {
			this1.cancel();
		}
		return this.link = param;
	}
	,cancel: function() {
		var this1 = this.link;
		if(this1 != null) {
			this1.cancel();
		}
	}
	,__class__: tink_core_CallbackLinkRef
	,__properties__: {set_link:"set_link"}
};
var tink_core_CallbackLink = {};
tink_core_CallbackLink._new = function(link) {
	return new tink_core_SimpleLink(link);
};
tink_core_CallbackLink.cancel = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core_CallbackLink.dissolve = function(this1) {
	if(this1 != null) {
		this1.cancel();
	}
};
tink_core_CallbackLink.noop = function() {
};
tink_core_CallbackLink.toFunction = function(this1) {
	if(this1 == null) {
		return tink_core_CallbackLink.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core_CallbackLink.toCallback = function(this1) {
	if(this1 == null) {
		return tink_core_CallbackLink.noop;
	} else {
		return $bind(this1,this1.cancel);
	}
};
tink_core_CallbackLink.fromFunction = function(f) {
	return new tink_core_SimpleLink(f);
};
tink_core_CallbackLink.join = function(this1,b) {
	return new tink_core__$Callback_LinkPair(this1,b);
};
tink_core_CallbackLink.fromMany = function(callbacks) {
	return new tink_core_SimpleLink(function() {
		if(callbacks != null) {
			var _g = 0;
			while(_g < callbacks.length) {
				var cb = callbacks[_g];
				++_g;
				if(cb != null) {
					cb.cancel();
				}
			}
		} else {
			callbacks = null;
		}
	});
};
var tink_core_SimpleLink = function(f) {
	this.f = f;
};
$hxClasses["tink.core.SimpleLink"] = tink_core_SimpleLink;
tink_core_SimpleLink.__name__ = true;
tink_core_SimpleLink.__interfaces__ = [tink_core_LinkObject];
tink_core_SimpleLink.prototype = {
	f: null
	,cancel: function() {
		if(this.f != null) {
			this.f();
			this.f = null;
		}
	}
	,__class__: tink_core_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core._Callback.LinkPair"] = tink_core__$Callback_LinkPair;
tink_core__$Callback_LinkPair.__name__ = true;
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	a: null
	,b: null
	,dissolved: null
	,cancel: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.cancel();
			}
			var this1 = this.b;
			if(this1 != null) {
				this1.cancel();
			}
			this.a = null;
			this.b = null;
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw haxe_Exception.thrown("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
$hxClasses["tink.core._Callback.ListCell"] = tink_core__$Callback_ListCell;
tink_core__$Callback_ListCell.__name__ = true;
tink_core__$Callback_ListCell.__interfaces__ = [tink_core_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	cb: null
	,list: null
	,invoke: function(data) {
		if(this.list != null) {
			this.cb(data);
		}
	}
	,clear: function() {
		this.cb = null;
		this.list = null;
	}
	,cancel: function() {
		if(this.list != null) {
			var list = this.list;
			this.cb = null;
			this.list = null;
			if(--list.used <= list.cells.length >> 1) {
				list.compact();
			}
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core_Disposable = function() { };
$hxClasses["tink.core.Disposable"] = tink_core_Disposable;
tink_core_Disposable.__name__ = true;
tink_core_Disposable.__isInterface__ = true;
tink_core_Disposable.prototype = {
	get_disposed: null
	,ondispose: null
	,__class__: tink_core_Disposable
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_OwnedDisposable = function() { };
$hxClasses["tink.core.OwnedDisposable"] = tink_core_OwnedDisposable;
tink_core_OwnedDisposable.__name__ = true;
tink_core_OwnedDisposable.__isInterface__ = true;
tink_core_OwnedDisposable.__interfaces__ = [tink_core_Disposable];
tink_core_OwnedDisposable.prototype = {
	dispose: null
	,__class__: tink_core_OwnedDisposable
};
var tink_core_SimpleDisposable = function(dispose) {
	this.disposeHandlers = [];
	this.f = dispose;
};
$hxClasses["tink.core.SimpleDisposable"] = tink_core_SimpleDisposable;
tink_core_SimpleDisposable.__name__ = true;
tink_core_SimpleDisposable.__interfaces__ = [tink_core_OwnedDisposable];
tink_core_SimpleDisposable.noop = function() {
};
tink_core_SimpleDisposable.prototype = {
	f: null
	,disposeHandlers: null
	,get_disposed: function() {
		return this.disposeHandlers == null;
	}
	,ondispose: function(d) {
		var _g = this.disposeHandlers;
		if(_g == null) {
			d();
		} else {
			var v = _g;
			v.push(d);
		}
	}
	,dispose: function() {
		var _g = this.disposeHandlers;
		if(_g != null) {
			var v = _g;
			this.disposeHandlers = null;
			var f = this.f;
			this.f = tink_core_SimpleDisposable.noop;
			f();
			var _g = 0;
			while(_g < v.length) {
				var h = v[_g];
				++_g;
				h();
			}
		}
	}
	,__class__: tink_core_SimpleDisposable
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_CallbackList = function(destructive) {
	if(destructive == null) {
		destructive = false;
	}
	this.onfill = function() {
	};
	this.ondrain = function() {
	};
	this.busy = false;
	this.queue = [];
	this.used = 0;
	var _gthis = this;
	tink_core_SimpleDisposable.call(this,function() {
		if(!_gthis.busy) {
			_gthis.destroy();
		}
	});
	this.destructive = destructive;
	this.cells = [];
};
$hxClasses["tink.core.CallbackList"] = tink_core_CallbackList;
tink_core_CallbackList.__name__ = true;
tink_core_CallbackList.__super__ = tink_core_SimpleDisposable;
tink_core_CallbackList.prototype = $extend(tink_core_SimpleDisposable.prototype,{
	destructive: null
	,cells: null
	,get_length: function() {
		return this.used;
	}
	,used: null
	,queue: null
	,busy: null
	,ondrain: null
	,onfill: null
	,release: function() {
		if(--this.used <= this.cells.length >> 1) {
			this.compact();
		}
	}
	,destroy: function() {
		var _g = 0;
		var _g1 = this.cells;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.cb = null;
			c.list = null;
		}
		this.queue = null;
		this.cells = null;
		if(this.used > 0) {
			this.used = 0;
			var fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		}
	}
	,drain: function() {
		var fn = this.ondrain;
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			fn();
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(fn);
		}
	}
	,add: function(cb) {
		if(this.disposeHandlers == null) {
			return null;
		}
		var node = new tink_core__$Callback_ListCell(cb,this);
		this.cells.push(node);
		if(this.used++ == 0) {
			var fn = this.onfill;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		}
		return node;
	}
	,invoke: function(data) {
		var _gthis = this;
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			if(_gthis.disposeHandlers != null) {
				if(_gthis.busy) {
					if(_gthis.destructive != true) {
						var _g = _gthis;
						var data1 = data;
						var tmp = function() {
							_g.invoke(data1);
						};
						_gthis.queue.push(tmp);
					}
				} else {
					_gthis.busy = true;
					if(_gthis.destructive) {
						_gthis.dispose();
					}
					var length = _gthis.cells.length;
					var _g1 = 0;
					var _g2 = length;
					while(_g1 < _g2) {
						var i = _g1++;
						var _this = _gthis.cells[i];
						if(_this.list != null) {
							_this.cb(data);
						}
					}
					_gthis.busy = false;
					if(_gthis.disposeHandlers == null) {
						_gthis.destroy();
					} else {
						if(_gthis.used < _gthis.cells.length) {
							_gthis.compact();
						}
						if(_gthis.queue.length > 0) {
							(_gthis.queue.shift())();
						}
					}
				}
			}
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(function() {
				if(_gthis.disposeHandlers != null) {
					if(_gthis.busy) {
						if(_gthis.destructive != true) {
							var _g = _gthis;
							var data1 = data;
							var tmp = function() {
								_g.invoke(data1);
							};
							_gthis.queue.push(tmp);
						}
					} else {
						_gthis.busy = true;
						if(_gthis.destructive) {
							_gthis.dispose();
						}
						var length = _gthis.cells.length;
						var _g1 = 0;
						var _g2 = length;
						while(_g1 < _g2) {
							var i = _g1++;
							var _this = _gthis.cells[i];
							if(_this.list != null) {
								_this.cb(data);
							}
						}
						_gthis.busy = false;
						if(_gthis.disposeHandlers == null) {
							_gthis.destroy();
						} else {
							if(_gthis.used < _gthis.cells.length) {
								_gthis.compact();
							}
							if(_gthis.queue.length > 0) {
								(_gthis.queue.shift())();
							}
						}
					}
				}
			});
		}
	}
	,compact: function() {
		if(this.busy) {
			return;
		} else if(this.used == 0) {
			this.resize(0);
			var fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		} else {
			var compacted = 0;
			var _g = 0;
			var _g1 = this.cells.length;
			while(_g < _g1) {
				var i = _g++;
				var _g2 = this.cells[i];
				var _g3 = _g2.list;
				if(_g2.cb != null) {
					var v = _g2;
					if(compacted != i) {
						this.cells[compacted] = v;
					}
					if(++compacted == this.used) {
						break;
					}
				}
			}
			this.resize(this.used);
		}
	}
	,resize: function(length) {
		this.cells.length = length;
	}
	,clear: function() {
		if(this.busy) {
			this.queue.push($bind(this,this.clear));
		}
		var _g = 0;
		var _g1 = this.cells;
		while(_g < _g1.length) {
			var cell = _g1[_g];
			++_g;
			cell.cb = null;
			cell.list = null;
		}
		this.resize(0);
	}
	,__class__: tink_core_CallbackList
	,__properties__: $extend(tink_core_SimpleDisposable.prototype.__properties__,{get_length:"get_length"})
});
var tink_core_AlreadyDisposed = function() {
};
$hxClasses["tink.core.AlreadyDisposed"] = tink_core_AlreadyDisposed;
tink_core_AlreadyDisposed.__name__ = true;
tink_core_AlreadyDisposed.__interfaces__ = [tink_core_OwnedDisposable];
tink_core_AlreadyDisposed.prototype = {
	get_disposed: function() {
		return true;
	}
	,ondispose: function(d) {
		d();
	}
	,dispose: function() {
	}
	,__class__: tink_core_AlreadyDisposed
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
$hxClasses["tink.core.TypedError"] = tink_core_TypedError;
tink_core_TypedError.__name__ = true;
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( _g ) {
		var ex = haxe_Exception.caught(_g).unwrap();
		var e = tink_core_TypedError.asError(ex);
		var tmp;
		if(e == null) {
			tmp = report == null ? tink_core_TypedError.withData(null,"Unexpected Error",ex,pos) : report(ex);
		} else {
			var e1 = e;
			tmp = e1;
		}
		return tink_core_Outcome.Failure(tmp);
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw haxe_Exception.thrown(any);
};
tink_core_TypedError.tryFinally = function(f,cleanup) {
	try { return f(); } finally { cleanup(); }
	return null;
};
tink_core_TypedError.prototype = {
	message: null
	,code: null
	,data: null
	,pos: null
	,callStack: null
	,exceptionStack: null
	,isTinkError: null
	,printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,toPromise: function() {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(this)));
	}
	,throwSelf: function() {
		var any = this;
		throw haxe_Exception.thrown(any);
	}
	,toJsError: function() {
		if(((this.data) instanceof Error)) {
			return this.data;
		} else {
			return new tink_core__$Error_TinkError(this);
		}
	}
	,__class__: tink_core_TypedError
};
var tink_core_Stack = {};
tink_core_Stack.toString = function(this1) {
	return "Error stack not available. Compile with -D error_stack.";
};
var tink_core__$Error_TinkError = function(e) {
	Error.call(this);
	this.message = e.message;
	this.data = e;
};
$hxClasses["tink.core._Error.TinkError"] = tink_core__$Error_TinkError;
tink_core__$Error_TinkError.__name__ = true;
tink_core__$Error_TinkError.__super__ = Error;
tink_core__$Error_TinkError.prototype = $extend(Error.prototype,{
	data: null
	,__class__: tink_core__$Error_TinkError
});
var tink_core__$Future_FutureObject = function() {
};
$hxClasses["tink.core._Future.FutureObject"] = tink_core__$Future_FutureObject;
tink_core__$Future_FutureObject.__name__ = true;
tink_core__$Future_FutureObject.prototype = {
	getStatus: function() {
		return tink_core_FutureStatus.NeverEver;
	}
	,handle: function(callback) {
		return null;
	}
	,eager: function() {
	}
	,__class__: tink_core__$Future_FutureObject
};
var tink_core__$Lazy_Computable = function() { };
$hxClasses["tink.core._Lazy.Computable"] = tink_core__$Lazy_Computable;
tink_core__$Lazy_Computable.__name__ = true;
tink_core__$Lazy_Computable.__isInterface__ = true;
tink_core__$Lazy_Computable.prototype = {
	isComputed: null
	,compute: null
	,underlying: null
	,__class__: tink_core__$Lazy_Computable
};
var tink_core__$Lazy_LazyObject = function() { };
$hxClasses["tink.core._Lazy.LazyObject"] = tink_core__$Lazy_LazyObject;
tink_core__$Lazy_LazyObject.__name__ = true;
tink_core__$Lazy_LazyObject.__isInterface__ = true;
tink_core__$Lazy_LazyObject.__interfaces__ = [tink_core__$Lazy_Computable];
tink_core__$Lazy_LazyObject.prototype = {
	get: null
	,__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
$hxClasses["tink.core._Lazy.LazyConst"] = tink_core__$Lazy_LazyConst;
tink_core__$Lazy_LazyConst.__name__ = true;
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	value: null
	,isComputed: function() {
		return true;
	}
	,get: function() {
		return this.value;
	}
	,compute: function() {
	}
	,underlying: function() {
		return null;
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	tink_core__$Future_FutureObject.call(this);
	this.value = value;
};
$hxClasses["tink.core._Future.SyncFuture"] = tink_core__$Future_SyncFuture;
tink_core__$Future_SyncFuture.__name__ = true;
tink_core__$Future_SyncFuture.__super__ = tink_core__$Future_FutureObject;
tink_core__$Future_SyncFuture.prototype = $extend(tink_core__$Future_FutureObject.prototype,{
	value: null
	,getStatus: function() {
		return tink_core_FutureStatus.Ready(this.value);
	}
	,handle: function(cb) {
		tink_core_Callback.invoke(cb,tink_core_Lazy.get(this.value));
		return null;
	}
	,eager: function() {
		if(!this.value.isComputed()) {
			tink_core_Lazy.get(this.value);
		}
	}
	,__class__: tink_core__$Future_SyncFuture
});
var tink_core_Future = {};
tink_core_Future.__properties__ = {get_status:"get_status"};
tink_core_Future.never = function() {
	return tink_core_Future.NEVER_INST;
};
tink_core_Future.get_status = function(this1) {
	return this1.getStatus();
};
tink_core_Future._new = function(wakeup) {
	return new tink_core__$Future_SuspendableFuture(wakeup);
};
tink_core_Future.handle = function(this1,callback) {
	return this1.handle(callback);
};
tink_core_Future.eager = function(this1) {
	this1.eager();
	return this1;
};
tink_core_Future.noise = function(this1) {
	if(this1.getStatus()._hx_index == 4) {
		return tink_core_Future.never();
	} else {
		return tink_core_Future.map(this1,function(_) {
			return null;
		});
	}
};
tink_core_Future.first = function(this1,that) {
	var _g = this1;
	var _g1 = _g.getStatus();
	switch(_g1._hx_index) {
	case 3:
		var _g2 = _g1.result;
		var _g1 = that.getStatus();
		switch(_g1._hx_index) {
		case 3:
			var _g2 = _g1.result;
			var v = _g;
			return v;
		case 4:
			var v = _g;
			return v;
		default:
			var v = _g;
			return v;
		}
		break;
	case 4:
		var v = that;
		return v;
	default:
		var _g1 = that.getStatus();
		switch(_g1._hx_index) {
		case 3:
			var _g2 = _g1.result;
			var v = that;
			return v;
		case 4:
			var v = _g;
			return v;
		default:
			return new tink_core__$Future_SuspendableFuture(function(fire) {
				return new tink_core__$Callback_LinkPair(this1.handle(fire),that.handle(fire));
			});
		}
	}
};
tink_core_Future.map = function(this1,f,gather) {
	var _g = this1.getStatus();
	switch(_g._hx_index) {
	case 3:
		var l = _g.result;
		var this2 = l;
		var f1 = f;
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyFunc(function() {
			return f1(this2.get());
		},this2));
	case 4:
		return tink_core_Future.never();
	default:
		return new tink_core__$Future_SuspendableFuture(function(fire) {
			return this1.handle(function(v) {
				fire(f(v));
			});
		});
	}
};
tink_core_Future.flatMap = function(this1,next,gather) {
	var _g = this1.getStatus();
	switch(_g._hx_index) {
	case 3:
		var l = _g.result;
		return new tink_core__$Future_SuspendableFuture(function(fire) {
			return next(tink_core_Lazy.get(l)).handle(function(v) {
				fire(v);
			});
		});
	case 4:
		return tink_core_Future.never();
	default:
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			var inner = new tink_core_CallbackLinkRef();
			var outer = this1.handle(function(v) {
				var param = next(v).handle($yield);
				var this1 = inner.link;
				if(this1 != null) {
					this1.cancel();
				}
				inner.link = param;
			});
			return new tink_core__$Callback_LinkPair(outer,inner);
		});
	}
};
tink_core_Future.swap = function(this1,v) {
	return tink_core_Future.map(this1,function(_) {
		return v;
	});
};
tink_core_Future.next = function(this1,n) {
	return tink_core_Future.flatMap(this1,n);
};
tink_core_Future.withSideEffect = function(this1,c) {
	return tink_core_Future.map(this1,function(v) {
		tink_core_Callback.invoke(c,v);
		return v;
	});
};
tink_core_Future.gather = function(this1) {
	return this1;
};
tink_core_Future.merge = function(this1,that,combine) {
	var _g = this1.getStatus();
	var _g1 = that.getStatus();
	if(_g._hx_index == 4) {
		return tink_core_Future.never();
	} else if(_g1._hx_index == 4) {
		return tink_core_Future.never();
	} else {
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			var check = function(v) {
				var _g = this1.getStatus();
				var _g1 = that.getStatus();
				if(_g._hx_index == 3) {
					if(_g1._hx_index == 3) {
						var b = _g1.result;
						var a = _g.result;
						$yield(combine(tink_core_Lazy.get(a),tink_core_Lazy.get(b)));
					}
				}
			};
			return new tink_core__$Callback_LinkPair(this1.handle(check),that.handle(check));
		});
	}
};
tink_core_Future.flatten = function(f) {
	return tink_core_Future.flatMap(f,function(v) {
		return v;
	});
};
tink_core_Future.ofJsPromise = function(promise,transformError) {
	return tink_core_Future.irreversible(function(cb) {
		promise.then(function(a) {
			var _g = cb;
			var a1 = tink_core_Outcome.Success(a);
			tink_core_Callback.defer(function() {
				_g(a1);
			});
		},function(e) {
			var cb1 = cb;
			var tmp;
			if(transformError == null) {
				var e1 = e;
				tmp = tink_core_TypedError.withData(500,e1.message,e1,{ fileName : "tink/core/Future.hx", lineNumber : 176, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"});
			} else {
				var f = transformError;
				tmp = f(e);
			}
			cb1(tink_core_Outcome.Failure(tmp));
		});
	});
};
tink_core_Future.fromJsPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_Future.neverToAny = function(l) {
	return l;
};
tink_core_Future.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core_Future.asPromise = function(s) {
	return s;
};
tink_core_Future.ofMany = function(futures,gather) {
	return tink_core_Future.inSequence(futures);
};
tink_core_Future.inParallel = function(futures,concurrency) {
	return tink_core_Future.many(futures,concurrency);
};
tink_core_Future.inSequence = function(futures) {
	return tink_core_Future.many(futures,1);
};
tink_core_Future.many = function(a,concurrency) {
	return tink_core_Future.processMany(a,concurrency,tink_core_Outcome.Success,function(o) {
		return tink_core_OutcomeTools.orNull(o);
	});
};
tink_core_Future.processMany = function(a,concurrency,fn,lift) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(lift(tink_core_Outcome.Success([]))));
	} else {
		return new tink_core__$Future_SuspendableFuture(function($yield) {
			var links = [];
			var _g = [];
			var _g1 = 0;
			while(_g1 < a.length) {
				var x = a[_g1];
				++_g1;
				_g.push(null);
			}
			var ret = _g;
			var index = 0;
			var pending = 0;
			var done = false;
			var concurrency1;
			if(concurrency == null) {
				concurrency1 = a.length;
			} else {
				var v = concurrency;
				concurrency1 = v < 1 ? 1 : v > a.length ? a.length : v;
			}
			var fireWhenReady = function() {
				if(index == ret.length) {
					if(pending == 0) {
						var v = lift(tink_core_Outcome.Success(ret));
						done = true;
						$yield(v);
						return true;
					} else {
						return false;
					}
				} else {
					return false;
				}
			};
			var step = null;
			step = function() {
				if(!done && !fireWhenReady()) {
					while(index < ret.length) {
						index += 1;
						var index1 = [index - 1];
						var p = a[index1[0]];
						var check = [(function(index) {
							return function(o) {
								var _g = fn(o);
								switch(_g._hx_index) {
								case 0:
									var v = _g.data;
									ret[index[0]] = v;
									fireWhenReady();
									break;
								case 1:
									var e = _g.failure;
									var _g = 0;
									while(_g < links.length) {
										var l = links[_g];
										++_g;
										if(l != null) {
											l.cancel();
										}
									}
									var v = lift(tink_core_Outcome.Failure(e));
									done = true;
									$yield(v);
									break;
								}
							};
						})(index1)];
						var _g = p.getStatus();
						if(_g._hx_index == 3) {
							var _hx_tmp;
							_hx_tmp = tink_core_Lazy.get(_g.result);
							var v = _hx_tmp;
							check[0](v);
							if(!done) {
								continue;
							}
						} else {
							pending += 1;
							links.push(p.handle((function(check) {
								return function(o) {
									pending -= 1;
									check[0](o);
									if(!done) {
										step();
									}
								};
							})(check)));
						}
						break;
					}
				}
			};
			var _g = 0;
			var _g1 = concurrency1;
			while(_g < _g1) {
				var i = _g++;
				step();
			}
			return tink_core_CallbackLink.fromMany(links);
		});
	}
};
tink_core_Future.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core_Future.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core_Future.isFuture = function(maybeFuture) {
	return ((maybeFuture) instanceof tink_core__$Future_FutureObject);
};
tink_core_Future.async = function(init,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	var ret = tink_core_Future.irreversible(init);
	if(lazy) {
		return ret;
	} else {
		ret.eager();
		return ret;
	}
};
tink_core_Future.irreversible = function(init) {
	return new tink_core__$Future_SuspendableFuture(function($yield) {
		init($yield);
		return null;
	});
};
tink_core_Future.or = function(a,b) {
	return tink_core_Future.first(a,b);
};
tink_core_Future.either = function(a,b) {
	return tink_core_Future.first(tink_core_Future.map(a,haxe_ds_Either.Left),tink_core_Future.map(b,haxe_ds_Either.Right));
};
tink_core_Future.and = function(a,b) {
	return tink_core_Future.merge(a,b,function(a,b) {
		return new tink_core_MPair(a,b);
	});
};
tink_core_Future._tryFailingFlatMap = function(f,map) {
	return tink_core_Future.flatMap(f,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return map(d);
		case 1:
			var f = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f)));
		}
	});
};
tink_core_Future._tryFlatMap = function(f,map) {
	return tink_core_Future.flatMap(f,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return tink_core_Future.map(map(d),tink_core_Outcome.Success);
		case 1:
			var f = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f)));
		}
	});
};
tink_core_Future._tryFailingMap = function(f,map) {
	return tink_core_Future.map(f,function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper.withSameError(map));
	});
};
tink_core_Future._tryMap = function(f,map) {
	return tink_core_Future.map(f,function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
};
tink_core_Future._flatMap = function(f,map) {
	return tink_core_Future.flatMap(f,map);
};
tink_core_Future._map = function(f,map) {
	return tink_core_Future.map(f,map);
};
tink_core_Future.trigger = function() {
	return new tink_core_FutureTrigger();
};
tink_core_Future.delay = function(ms,value) {
	var this1 = tink_core_Future.irreversible(function(cb) {
		haxe_Timer.delay(function() {
			cb(tink_core_Lazy.get(value));
		},ms);
	});
	this1.eager();
	return this1;
};
var tink_core_FutureStatus = $hxEnums["tink.core.FutureStatus"] = { __ename__:true,__constructs__:null
	,Suspended: {_hx_name:"Suspended",_hx_index:0,__enum__:"tink.core.FutureStatus",toString:$estr}
	,Awaited: {_hx_name:"Awaited",_hx_index:1,__enum__:"tink.core.FutureStatus",toString:$estr}
	,EagerlyAwaited: {_hx_name:"EagerlyAwaited",_hx_index:2,__enum__:"tink.core.FutureStatus",toString:$estr}
	,Ready: ($_=function(result) { return {_hx_index:3,result:result,__enum__:"tink.core.FutureStatus",toString:$estr}; },$_._hx_name="Ready",$_.__params__ = ["result"],$_)
	,NeverEver: {_hx_name:"NeverEver",_hx_index:4,__enum__:"tink.core.FutureStatus",toString:$estr}
};
tink_core_FutureStatus.__constructs__ = [tink_core_FutureStatus.Suspended,tink_core_FutureStatus.Awaited,tink_core_FutureStatus.EagerlyAwaited,tink_core_FutureStatus.Ready,tink_core_FutureStatus.NeverEver];
var tink_core_FutureTrigger = function() {
	this.status = tink_core_FutureStatus.Awaited;
	tink_core__$Future_FutureObject.call(this);
	this.list = new tink_core_CallbackList(true);
};
$hxClasses["tink.core.FutureTrigger"] = tink_core_FutureTrigger;
tink_core_FutureTrigger.__name__ = true;
tink_core_FutureTrigger.__super__ = tink_core__$Future_FutureObject;
tink_core_FutureTrigger.prototype = $extend(tink_core__$Future_FutureObject.prototype,{
	status: null
	,list: null
	,getStatus: function() {
		return this.status;
	}
	,handle: function(callback) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var result = _g.result;
			tink_core_Callback.invoke(callback,tink_core_Lazy.get(result));
			return null;
		} else {
			var v = _g;
			var _this = this.list;
			if(_this.disposeHandlers == null) {
				return null;
			} else {
				var node = new tink_core__$Callback_ListCell(callback,_this);
				_this.cells.push(node);
				if(_this.used++ == 0) {
					var fn = _this.onfill;
					if(tink_core_Callback.depth < 500) {
						tink_core_Callback.depth++;
						fn();
						tink_core_Callback.depth--;
					} else {
						tink_core_Callback.defer(fn);
					}
				}
				return node;
			}
		}
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var _g1 = _g.result;
			return false;
		} else {
			this.status = tink_core_FutureStatus.Ready(new tink_core__$Lazy_LazyConst(result));
			this.list.invoke(result);
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
});
var tink_core_JsPromiseTools = function() { };
$hxClasses["tink.core.JsPromiseTools"] = tink_core_JsPromiseTools;
tink_core_JsPromiseTools.__name__ = true;
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
var tink_core__$Future_SuspendableFuture = function(wakeup) {
	this.status = tink_core_FutureStatus.Suspended;
	var _gthis = this;
	tink_core__$Future_FutureObject.call(this);
	this.wakeup = wakeup;
	this.callbacks = new tink_core_CallbackList(true);
	this.callbacks.ondrain = function() {
		if(_gthis.status == tink_core_FutureStatus.Awaited) {
			_gthis.status = tink_core_FutureStatus.Suspended;
			var this1 = _gthis.link;
			if(this1 != null) {
				this1.cancel();
			}
			_gthis.link = null;
		}
	};
	this.callbacks.onfill = function() {
		if(_gthis.status == tink_core_FutureStatus.Suspended) {
			_gthis.status = tink_core_FutureStatus.Awaited;
			_gthis.arm();
		}
	};
};
$hxClasses["tink.core._Future.SuspendableFuture"] = tink_core__$Future_SuspendableFuture;
tink_core__$Future_SuspendableFuture.__name__ = true;
tink_core__$Future_SuspendableFuture.__super__ = tink_core__$Future_FutureObject;
tink_core__$Future_SuspendableFuture.prototype = $extend(tink_core__$Future_FutureObject.prototype,{
	callbacks: null
	,status: null
	,link: null
	,wakeup: null
	,getStatus: function() {
		return this.status;
	}
	,trigger: function(value) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var _g1 = _g.result;
		} else {
			this.status = tink_core_FutureStatus.Ready(new tink_core__$Lazy_LazyConst(value));
			var link = this.link;
			this.link = null;
			this.wakeup = null;
			this.callbacks.invoke(value);
			if(link != null) {
				link.cancel();
			}
		}
	}
	,handle: function(callback) {
		var _g = this.status;
		if(_g._hx_index == 3) {
			var result = _g.result;
			tink_core_Callback.invoke(callback,tink_core_Lazy.get(result));
			return null;
		} else {
			var _this = this.callbacks;
			if(_this.disposeHandlers == null) {
				return null;
			} else {
				var node = new tink_core__$Callback_ListCell(callback,_this);
				_this.cells.push(node);
				if(_this.used++ == 0) {
					var fn = _this.onfill;
					if(tink_core_Callback.depth < 500) {
						tink_core_Callback.depth++;
						fn();
						tink_core_Callback.depth--;
					} else {
						tink_core_Callback.defer(fn);
					}
				}
				return node;
			}
		}
	}
	,arm: function() {
		var _gthis = this;
		this.link = this.wakeup(function(x) {
			_gthis.trigger(x);
		});
	}
	,eager: function() {
		switch(this.status._hx_index) {
		case 0:
			this.status = tink_core_FutureStatus.EagerlyAwaited;
			this.arm();
			break;
		case 1:
			this.status = tink_core_FutureStatus.EagerlyAwaited;
			break;
		default:
		}
	}
	,__class__: tink_core__$Future_SuspendableFuture
});
var tink_core_Lazy = {};
tink_core_Lazy.__properties__ = {get_computed:"get_computed"};
tink_core_Lazy.get_computed = function(this1) {
	return this1.isComputed();
};
tink_core_Lazy.get = function(this1) {
	this1.compute();
	return this1.get();
};
tink_core_Lazy.fromNoise = function(l) {
	return l;
};
tink_core_Lazy.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core_Lazy.map = function(this1,f) {
	return new tink_core__$Lazy_LazyFunc(function() {
		return f(this1.get());
	},this1);
};
tink_core_Lazy.flatMap = function(this1,f) {
	return new tink_core__$Lazy_LazyFunc(function() {
		return tink_core_Lazy.get(f(this1.get()));
	},this1);
};
tink_core_Lazy.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f,from) {
	this.f = f;
	this.from = from;
};
$hxClasses["tink.core._Lazy.LazyFunc"] = tink_core__$Lazy_LazyFunc;
tink_core__$Lazy_LazyFunc.__name__ = true;
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	f: null
	,from: null
	,result: null
	,underlying: function() {
		return this.from;
	}
	,isComputed: function() {
		return this.f == null;
	}
	,get: function() {
		return this.result;
	}
	,compute: function() {
		var _g = this.f;
		if(_g != null) {
			var v = _g;
			this.f = null;
			var _g = this.from;
			if(_g != null) {
				var cur = _g;
				this.from = null;
				var stack = [];
				while(cur != null && !cur.isComputed()) {
					stack.push(cur);
					cur = cur.underlying();
				}
				stack.reverse();
				var _g = 0;
				while(_g < stack.length) {
					var c = stack[_g];
					++_g;
					c.compute();
				}
			}
			this.result = v();
		}
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
$hxClasses["tink.core.NamedWith"] = tink_core_NamedWith;
tink_core_NamedWith.__name__ = true;
tink_core_NamedWith.prototype = {
	name: null
	,value: null
	,__class__: tink_core_NamedWith
};
var tink_core_Noise = {};
tink_core_Noise.ofAny = function(t) {
	return null;
};
var tink_core_OptionTools = function() { };
$hxClasses["tink.core.OptionTools"] = tink_core_OptionTools;
tink_core_OptionTools.__name__ = true;
tink_core_OptionTools.force = function(o,pos) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		throw haxe_Exception.thrown(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.sure = function(o,pos) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		throw haxe_Exception.thrown(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.toOutcome = function(o,pos) {
	switch(o._hx_index) {
	case 0:
		var value = o.v;
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "tink/core/Option.hx", lineNumber : 31, className : "tink.core.OptionTools", methodName : "toOutcome"}));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return tink_core_Lazy.get(l);
	}
};
tink_core_OptionTools.orTry = function(o,fallback) {
	if(o._hx_index == 0) {
		var v = o.v;
		return o;
	} else {
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o._hx_index == 0) {
		if(f(o.v) == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o._hx_index == 0) {
		var v1 = o.v;
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o._hx_index == 0) {
		var v = o.v;
		this.value = v;
	} else {
		this.alive = false;
	}
};
$hxClasses["tink.core.OptionIter"] = tink_core_OptionIter;
tink_core_OptionIter.__name__ = true;
tink_core_OptionIter.prototype = {
	value: null
	,alive: null
	,hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__:true,__constructs__:null
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_._hx_name="Success",$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_._hx_name="Failure",$_.__params__ = ["failure"],$_)
};
tink_core_Outcome.__constructs__ = [tink_core_Outcome.Success,tink_core_Outcome.Failure];
var tink_core_OutcomeTools = function() { };
$hxClasses["tink.core.OutcomeTools"] = tink_core_OutcomeTools;
tink_core_OutcomeTools.__name__ = true;
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var failure = outcome.failure;
		var _g = tink_core_TypedError.asError(failure);
		if(_g == null) {
			throw haxe_Exception.thrown(failure);
		} else {
			var e = _g;
			return e.throwSelf();
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return haxe_ds_Option.Some(data);
	case 1:
		var _g = outcome.failure;
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var _g = outcome.failure;
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	return tink_core_OutcomeTools.or(outcome,fallback);
};
tink_core_OutcomeTools.or = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var _g = outcome.failure;
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		var _g = outcome.data;
		return outcome;
	case 1:
		var _g = outcome.failure;
		return tink_core_Lazy.get(fallback);
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data == to;
	case 1:
		var _g = outcome.failure;
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome._hx_index == 0) {
		var _g = outcome.data;
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(v);
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.next = function(outcome,f) {
	switch(outcome._hx_index) {
	case 0:
		var v = outcome.data;
		return f(v);
	case 1:
		var e = outcome.failure;
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		return tink_core_Outcome.Failure(report(e));
	}
};
tink_core_OutcomeTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		var d = o.data;
		return f(d);
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o._hx_index) {
	case 0:
		var _g = o.data;
		switch(_g._hx_index) {
		case 0:
			var d = _g.data;
			return tink_core_Outcome.Success(d);
		case 1:
			var f = _g.failure;
			return tink_core_Outcome.Failure(f);
		}
		break;
	case 1:
		var f = o.failure;
		return tink_core_Outcome.Failure(f);
	}
};
var tink_core__$Outcome_OutcomeMapper = {};
tink_core__$Outcome_OutcomeMapper._new = function(f) {
	return { f : f};
};
tink_core__$Outcome_OutcomeMapper.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			var _g = f(d);
			switch(_g._hx_index) {
			case 0:
				var d = _g.data;
				return tink_core_Outcome.Success(d);
			case 1:
				var f1 = _g.failure;
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f1 = o.failure;
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f1));
		}
	});
};
var tink_core_Pair = {};
tink_core_Pair.__properties__ = {get_b:"get_b",get_a:"get_a"};
tink_core_Pair._new = function(a,b) {
	return new tink_core_MPair(a,b);
};
tink_core_Pair.get_a = function(this1) {
	return this1.a;
};
tink_core_Pair.get_b = function(this1) {
	return this1.b;
};
tink_core_Pair.toBool = function(this1) {
	return this1 != null;
};
tink_core_Pair.isNil = function(this1) {
	return this1 == null;
};
tink_core_Pair.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core.MPair"] = tink_core_MPair;
tink_core_MPair.__name__ = true;
tink_core_MPair.prototype = {
	a: null
	,b: null
	,__class__: tink_core_MPair
};
var tink_core_ProgressValue = {};
tink_core_ProgressValue.__properties__ = {get_total:"get_total",get_value:"get_value"};
tink_core_ProgressValue._new = function(value,total) {
	return new tink_core_MPair(value,total);
};
tink_core_ProgressValue.normalize = function(this1) {
	var o = this1.b;
	if(o._hx_index == 0) {
		var v = o.v;
		return haxe_ds_Option.Some(this1.a / v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_ProgressValue.get_value = function(this1) {
	return this1.a;
};
tink_core_ProgressValue.get_total = function(this1) {
	return this1.b;
};
var tink_core_Progress = {};
tink_core_Progress.listen = function(this1,cb) {
	return this1.progressed.listen(cb);
};
tink_core_Progress.handle = function(this1,cb) {
	return this1.result.handle(cb);
};
tink_core_Progress.trigger = function() {
	return new tink_core_ProgressTrigger();
};
tink_core_Progress.make = function(f) {
	return new tink_core__$Progress_SuspendableProgress(function(fire) {
		return f(function(value,total) {
			fire(tink_core_ProgressStatus.InProgress(new tink_core_MPair(value,total)));
		},function(result) {
			fire(tink_core_ProgressStatus.Finished(result));
		});
	});
};
tink_core_Progress.map = function(this1,f) {
	return new tink_core__$Progress_ProgressObject(tink_core_Signal.map(this1.changed,function(s) {
		return tink_core_ProgressStatusTools.map(s,f);
	}),function() {
		return tink_core_ProgressStatusTools.map(this1.getStatus(),f);
	});
};
tink_core_Progress.asFuture = function(this1) {
	return this1.result;
};
tink_core_Progress.promise = function(v) {
	return new tink_core__$Progress_SuspendableProgress(function(fire) {
		var inner = new tink_core_CallbackLinkRef();
		return new tink_core__$Callback_LinkPair(v.handle(function(o) {
			switch(o._hx_index) {
			case 0:
				var p = o.data;
				var param = p.changed.listen(function(s) {
					fire(tink_core_ProgressStatusTools.map(s,tink_core_Outcome.Success));
				});
				var this1 = inner.link;
				if(this1 != null) {
					this1.cancel();
				}
				inner.link = param;
				break;
			case 1:
				var e = o.failure;
				fire(tink_core_ProgressStatus.Finished(tink_core_Outcome.Failure(e)));
				break;
			}
		}),inner);
	});
};
tink_core_Progress.flatten = function(v) {
	return tink_core_Progress.map(tink_core_Progress.promise(v),function(o) {
		switch(o._hx_index) {
		case 0:
			var _g = o.data;
			switch(_g._hx_index) {
			case 0:
				var v = _g.data;
				return tink_core_Outcome.Success(v);
			case 1:
				var e = _g.failure;
				return tink_core_Outcome.Failure(e);
			}
			break;
		case 1:
			var e = o.failure;
			return tink_core_Outcome.Failure(e);
		}
	});
};
tink_core_Progress.future = function(v) {
	return new tink_core__$Progress_SuspendableProgress(function(fire) {
		var inner = new tink_core_CallbackLinkRef();
		return new tink_core__$Callback_LinkPair(v.handle(function(p) {
			var param = p.changed.listen(fire);
			var this1 = inner.link;
			if(this1 != null) {
				this1.cancel();
			}
			inner.link = param;
		}),inner);
	});
};
tink_core_Progress.next = function(this1,f) {
	return tink_core_Future.flatMap(this1.result,f);
};
var tink_core__$Progress_ProgressObject = function(changed,getStatus) {
	this.changed = changed;
	this.progressed = new tink_core__$Signal_Suspendable(function(fire) {
		return changed.listen(function(s) {
			if(s._hx_index == 0) {
				var v = s.v;
				fire(v);
			}
		});
	},null);
	this.getStatus = getStatus;
	this.result = new tink_core__$Future_SuspendableFuture(function(fire) {
		var _g = getStatus();
		if(_g._hx_index == 1) {
			var v = _g.v;
			fire(v);
			return null;
		} else {
			return changed.listen(function(s) {
				if(s._hx_index == 1) {
					var v = s.v;
					fire(v);
				}
			});
		}
	});
};
$hxClasses["tink.core._Progress.ProgressObject"] = tink_core__$Progress_ProgressObject;
tink_core__$Progress_ProgressObject.__name__ = true;
tink_core__$Progress_ProgressObject.prototype = {
	get_status: function() {
		return this.getStatus();
	}
	,getStatus: null
	,changed: null
	,progressed: null
	,result: null
	,__class__: tink_core__$Progress_ProgressObject
	,__properties__: {get_status:"get_status"}
};
var tink_core__$Progress_SuspendableProgress = function(wakeup,status) {
	if(status == null) {
		status = tink_core_ProgressStatus.InProgress(tink_core_ProgressValue.ZERO);
	}
	var disposable = tink_core_AlreadyDisposed.INST;
	var changed;
	switch(status._hx_index) {
	case 0:
		var _g = status.v;
		changed = new tink_core__$Signal_Suspendable(function(fire) {
			return wakeup(function(s) {
				status = s;
				fire(status);
			});
		},function(d) {
			disposable = d;
		});
		break;
	case 1:
		var _g = status.v;
		changed = tink_core_Signal.dead();
		break;
	}
	tink_core__$Progress_ProgressObject.call(this,changed,function() {
		return status;
	});
};
$hxClasses["tink.core._Progress.SuspendableProgress"] = tink_core__$Progress_SuspendableProgress;
tink_core__$Progress_SuspendableProgress.__name__ = true;
tink_core__$Progress_SuspendableProgress.__super__ = tink_core__$Progress_ProgressObject;
tink_core__$Progress_SuspendableProgress.prototype = $extend(tink_core__$Progress_ProgressObject.prototype,{
	noop: function(_,_1) {
		return null;
	}
	,__class__: tink_core__$Progress_SuspendableProgress
});
var tink_core_ProgressTrigger = function(status) {
	this._changed = null;
	var _gthis = this;
	if(status == null) {
		status = tink_core_ProgressStatus.InProgress(tink_core_ProgressValue.ZERO);
		this._status = status;
	}
	var tmp;
	if(status == null) {
		tmp = false;
	} else if(status._hx_index == 1) {
		var _g = status.v;
		tmp = true;
	} else {
		tmp = false;
	}
	tink_core__$Progress_ProgressObject.call(this,tmp ? tink_core_Signal.dead() : this._changed = tink_core_Signal.trigger(),function() {
		return _gthis._status;
	});
};
$hxClasses["tink.core.ProgressTrigger"] = tink_core_ProgressTrigger;
tink_core_ProgressTrigger.__name__ = true;
tink_core_ProgressTrigger.__super__ = tink_core__$Progress_ProgressObject;
tink_core_ProgressTrigger.prototype = $extend(tink_core__$Progress_ProgressObject.prototype,{
	_status: null
	,_changed: null
	,asProgress: function() {
		return this;
	}
	,progress: function(v,total) {
		var _g = this._status;
		var tmp;
		if(_g._hx_index == 1) {
			var _g1 = _g.v;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			var _this = this._changed;
			var this1 = new tink_core_MPair(v,total);
			_this.handlers.invoke(this._status = tink_core_ProgressStatus.InProgress(this1));
		}
	}
	,finish: function(v) {
		var _g = this._status;
		var tmp;
		if(_g._hx_index == 1) {
			var _g1 = _g.v;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this._changed.handlers.invoke(this._status = tink_core_ProgressStatus.Finished(v));
		}
	}
	,__class__: tink_core_ProgressTrigger
});
var tink_core_UnitInterval = {};
tink_core_UnitInterval.toPercentageString = function(this1,dp) {
	var m = Math.pow(10,dp);
	var v = Math.round(this1 * m * 100) / m;
	var s = v == null ? "null" : "" + v;
	var _g = s.indexOf(".");
	if(_g == -1) {
		return s + "." + StringTools.lpad("","0",dp) + "%";
	} else {
		var i = _g;
		if(s.length - i > dp) {
			return HxOverrides.substr(s,0,dp + i + 1) + "%";
		} else {
			var i = _g;
			return StringTools.rpad(s,"0",i + dp + 1) + "%";
		}
	}
};
var tink_core_ProgressStatus = $hxEnums["tink.core.ProgressStatus"] = { __ename__:true,__constructs__:null
	,InProgress: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"tink.core.ProgressStatus",toString:$estr}; },$_._hx_name="InProgress",$_.__params__ = ["v"],$_)
	,Finished: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"tink.core.ProgressStatus",toString:$estr}; },$_._hx_name="Finished",$_.__params__ = ["v"],$_)
};
tink_core_ProgressStatus.__constructs__ = [tink_core_ProgressStatus.InProgress,tink_core_ProgressStatus.Finished];
var tink_core_ProgressStatusTools = function() { };
$hxClasses["tink.core.ProgressStatusTools"] = tink_core_ProgressStatusTools;
tink_core_ProgressStatusTools.__name__ = true;
tink_core_ProgressStatusTools.map = function(p,f) {
	switch(p._hx_index) {
	case 0:
		var v = p.v;
		return tink_core_ProgressStatus.InProgress(v);
	case 1:
		var v = p.v;
		return tink_core_ProgressStatus.Finished(f(v));
	}
};
var tink_core_TotalTools = function() { };
$hxClasses["tink.core.TotalTools"] = tink_core_TotalTools;
tink_core_TotalTools.__name__ = true;
tink_core_TotalTools.eq = function(a,b) {
	switch(a._hx_index) {
	case 0:
		if(b._hx_index == 0) {
			var t2 = b.v;
			var t1 = a.v;
			return t1 == t2;
		} else {
			return false;
		}
		break;
	case 1:
		if(b._hx_index == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
var tink_core_ProgressTools = function() { };
$hxClasses["tink.core.ProgressTools"] = tink_core_ProgressTools;
tink_core_ProgressTools.__name__ = true;
tink_core_ProgressTools.asPromise = function(p) {
	return p.result;
};
var tink_core_Promise = {};
tink_core_Promise.never = function() {
	return tink_core_Future.never();
};
tink_core_Promise._new = function(f) {
	return new tink_core__$Future_SuspendableFuture(function(cb) {
		return f(function(v) {
			cb(tink_core_Outcome.Success(v));
		},function(e) {
			cb(tink_core_Outcome.Failure(e));
		});
	});
};
tink_core_Promise.eager = function(this1) {
	this1.eager();
	return this1;
};
tink_core_Promise.map = function(this1,f) {
	return tink_core_Future.map(this1,f);
};
tink_core_Promise.flatMap = function(this1,f) {
	return tink_core_Future.flatMap(this1,f);
};
tink_core_Promise.tryRecover = function(this1,f) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
};
tink_core_Promise.recover = function(this1,f) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
};
tink_core_Promise.mapError = function(this1,f) {
	return tink_core_Future.map(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var _g = o.data;
			return o;
		case 1:
			var e = o.failure;
			return tink_core_Outcome.Failure(f(e));
		}
	});
};
tink_core_Promise.withSideEffect = function(this1,c) {
	var c1 = function(o) {
		if(o._hx_index == 0) {
			var data = o.data;
			tink_core_Callback.invoke(c,data);
		}
	};
	return tink_core_Future.map(this1,function(v) {
		tink_core_Callback.invoke(c1,v);
		return v;
	});
};
tink_core_Promise.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core_Promise.noise = function(this1) {
	if(this1.getStatus()._hx_index == 4) {
		return tink_core_Promise.never();
	} else {
		return tink_core_Promise.next(this1,function(v) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
		});
	}
};
tink_core_Promise.isSuccess = function(this1) {
	return tink_core_Future.map(this1,function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	});
};
tink_core_Promise.next = function(this1,f,gather) {
	return tink_core_Future.flatMap(this1,function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
};
tink_core_Promise.swap = function(this1,v) {
	return tink_core_Promise.next(this1,function(_) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(v)));
	});
};
tink_core_Promise.swapError = function(this1,e) {
	return tink_core_Promise.mapError(this1,function(_) {
		return e;
	});
};
tink_core_Promise.merge = function(this1,other,merger,gather) {
	return tink_core_Future.flatMap(tink_core_Future.merge(this1,other,function(a,b) {
		switch(a._hx_index) {
		case 0:
			var _g = a.data;
			switch(b._hx_index) {
			case 0:
				var b1 = b.data;
				var a1 = _g;
				return merger(a1,b1);
			case 1:
				var e = b.failure;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
			}
			break;
		case 1:
			var e = a.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
		}
	}),function(o) {
		return o;
	});
};
tink_core_Promise.irreversible = function(f) {
	var f1 = function(res,rej) {
		f(res,rej);
		return null;
	};
	return new tink_core__$Future_SuspendableFuture(function(cb) {
		return f1(function(v) {
			cb(tink_core_Outcome.Success(v));
		},function(e) {
			cb(tink_core_Outcome.Failure(e));
		});
	});
};
tink_core_Promise.and = function(a,b) {
	return tink_core_Promise.merge(a,b,function(a,b) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(new tink_core_MPair(a,b))));
	});
};
tink_core_Promise.iterate = function(promises,$yield,fallback,fallThroughOnError) {
	if(fallThroughOnError == null) {
		fallThroughOnError = false;
	}
	return tink_core_Future.irreversible(function(cb) {
		var iter = $getIterator(promises);
		var next = null;
		next = function() {
			if(iter.hasNext()) {
				iter.next().handle(function(o) {
					switch(o._hx_index) {
					case 0:
						var v = o.data;
						$yield(v).handle(function(o) {
							switch(o._hx_index) {
							case 0:
								var _g = o.data;
								switch(_g._hx_index) {
								case 0:
									var ret = _g.v;
									cb(tink_core_Outcome.Success(ret));
									break;
								case 1:
									next();
									break;
								}
								break;
							case 1:
								var e = o.failure;
								cb(tink_core_Outcome.Failure(e));
								break;
							}
						});
						break;
					case 1:
						var e = o.failure;
						if(fallThroughOnError) {
							next();
						} else {
							cb(tink_core_Outcome.Failure(e));
						}
						break;
					}
				});
			} else {
				fallback.handle(cb);
			}
		};
		next();
	});
};
tink_core_Promise.retry = function(gen,next) {
	var stamp = function() {
		var hrtime = process.hrtime();
		return (hrtime[0] + hrtime[1] / 1e9) * 1000;
	};
	var start = stamp();
	var attempt = null;
	attempt = function(count) {
		var f = function(error) {
			return tink_core_Promise.next(next({ attempt : count, error : error, elapsed : stamp() - start}),function(_) {
				return attempt(count + 1);
			});
		};
		return tink_core_Future.flatMap(gen(),function(o) {
			switch(o._hx_index) {
			case 0:
				var d = o.data;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
			case 1:
				var e = o.failure;
				return f(e);
			}
		});
	};
	return attempt(1);
};
tink_core_Promise.ofJsPromise = function(promise,transformError) {
	return tink_core_Future.ofJsPromise(promise,transformError);
};
tink_core_Promise.fromJsPromise = function(promise) {
	return tink_core_Future.ofJsPromise(promise);
};
tink_core_Promise.toJsPromise = function(this1) {
	return new Promise(function(resolve,reject) {
		this1.handle(function(o) {
			switch(o._hx_index) {
			case 0:
				var v = o.data;
				resolve(v);
				break;
			case 1:
				var e = o.failure;
				reject(e.toJsError());
				break;
			}
		});
	});
};
tink_core_Promise.ofSpecific = function(s) {
	return s;
};
tink_core_Promise.fromNever = function(l) {
	return l;
};
tink_core_Promise.ofTrigger = function(f) {
	return f;
};
tink_core_Promise.ofHappyTrigger = function(f) {
	return tink_core_Future.map(f,tink_core_Outcome.Success);
};
tink_core_Promise.ofFuture = function(f) {
	return tink_core_Future.map(f,tink_core_Outcome.Success);
};
tink_core_Promise.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core_Promise.ofError = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
tink_core_Promise.ofData = function(d) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(d)));
};
tink_core_Promise.asFuture = function(this1) {
	return this1;
};
tink_core_Promise.lazy = function(p) {
	return new tink_core__$Future_SuspendableFuture(function(cb) {
		return tink_core_Lazy.get(p).handle(cb);
	});
};
tink_core_Promise.inParallel = function(a,concurrency) {
	return tink_core_Promise.many(a,concurrency);
};
tink_core_Promise.many = function(a,concurrency) {
	return tink_core_Future.processMany(a,concurrency,function(o) {
		return o;
	},function(o) {
		return o;
	});
};
tink_core_Promise.inSequence = function(a) {
	return tink_core_Promise.many(a,1);
};
tink_core_Promise.cache = function(gen) {
	var p = null;
	return function() {
		var ret = p;
		if(ret == null) {
			var sync = false;
			ret = tink_core_Promise.next(gen(),function(o) {
				o.b.handle(function(_) {
					sync = true;
					p = null;
				});
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(o.a)));
			});
			if(!sync) {
				p = ret;
			}
		}
		return tink_core_Future.map(ret,function(o) {
			if(!tink_core_OutcomeTools.isSuccess(o)) {
				p = null;
			}
			return o;
		});
	};
};
tink_core_Promise.lift = function(p) {
	return p;
};
tink_core_Promise.trigger = function() {
	return new tink_core_FutureTrigger();
};
tink_core_Promise.resolve = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(v)));
};
tink_core_Promise.reject = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
var tink_core_Next = {};
tink_core_Next.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core_Next.ofSync = function(f) {
	return function(x) {
		return tink_core_Future.map(f(x),tink_core_Outcome.Success);
	};
};
tink_core_Next.ofSafeSync = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x))));
	};
};
tink_core_Next._chain = function(a,b) {
	return function(v) {
		return tink_core_Promise.next(a(v),b);
	};
};
var tink_core_Recover = {};
tink_core_Recover.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core_Combiner = {};
tink_core_Combiner.ofSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core_Combiner.ofSafe = function(f) {
	return function(x1,x2) {
		return tink_core_Future.map(f(x1,x2),tink_core_Outcome.Success);
	};
};
tink_core_Combiner.ofSafeSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x1,x2))));
	};
};
var tink_core_PromiseTrigger = {};
tink_core_PromiseTrigger._new = function() {
	return new tink_core_FutureTrigger();
};
tink_core_PromiseTrigger.resolve = function(this1,v) {
	return this1.trigger(tink_core_Outcome.Success(v));
};
tink_core_PromiseTrigger.reject = function(this1,e) {
	return this1.trigger(tink_core_Outcome.Failure(e));
};
tink_core_PromiseTrigger.asPromise = function(this1) {
	return this1;
};
var tink_core_Ref = {};
tink_core_Ref.__properties__ = {set_value:"set_value",get_value:"get_value"};
tink_core_Ref._new = function() {
	return new Array(1);
};
tink_core_Ref.get_value = function(this1) {
	return this1[0];
};
tink_core_Ref.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core_Ref.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core_Ref.to = function(v) {
	var ret = new Array(1);
	ret[0] = v;
	return ret;
};
var tink_core_Gather = {};
tink_core_Gather._new = function(v) {
	return v;
};
tink_core_Gather.ofBool = function(b) {
	return b;
};
var tink_core_Signal = {};
tink_core_Signal._new = function(f,init) {
	return new tink_core__$Signal_Suspendable(f,init);
};
tink_core_Signal.handle = function(this1,handler) {
	return this1.listen(handler);
};
tink_core_Signal.map = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			fire(f(v));
		});
	});
};
tink_core_Signal.flatMap = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			f(v).handle(fire);
		});
	});
};
tink_core_Signal.filter = function(this1,f,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			if(f(v)) {
				fire(v);
			}
		});
	});
};
tink_core_Signal.select = function(this1,selector,gather) {
	return tink_core__$Signal_Suspendable.over(this1,function(fire) {
		return this1.listen(function(v) {
			var _g = selector(v);
			if(_g._hx_index == 0) {
				var v = _g.v;
				fire(v);
			}
		});
	});
};
tink_core_Signal.join = function(this1,that,gather) {
	if(this1.get_disposed()) {
		return that;
	} else if(that.get_disposed()) {
		return this1;
	} else {
		return new tink_core__$Signal_Suspendable(function(fire) {
			var cb = fire;
			return new tink_core__$Callback_LinkPair(this1.listen(cb),that.listen(cb));
		},function(self) {
			var release = function() {
				if(this1.get_disposed() && that.get_disposed()) {
					self.dispose();
				}
			};
			this1.ondispose(release);
			that.ondispose(release);
		});
	}
};
tink_core_Signal.nextTime = function(this1,condition) {
	return tink_core_Signal.pickNext(this1,function(v) {
		if(condition == null || condition(v)) {
			return haxe_ds_Option.Some(v);
		} else {
			return haxe_ds_Option.None;
		}
	});
};
tink_core_Signal.pickNext = function(this1,selector) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	link = this1.listen(function(v) {
		var _g = selector(v);
		switch(_g._hx_index) {
		case 0:
			var v = _g.v;
			ret.trigger(v);
			break;
		case 1:
			break;
		}
	});
	ret.handle(link == null ? tink_core_CallbackLink.noop : ($_=link,$bind($_,$_.cancel)));
	return ret;
};
tink_core_Signal.until = function(this1,end) {
	return new tink_core__$Signal_Suspendable(function($yield) {
		return this1.listen($yield);
	},function(self) {
		end.handle($bind(self,self.dispose));
	});
};
tink_core_Signal.next = function(this1,condition) {
	return tink_core_Signal.nextTime(this1,condition);
};
tink_core_Signal.noise = function(this1) {
	return tink_core_Signal.map(this1,function(_) {
		return null;
	});
};
tink_core_Signal.gather = function(this1) {
	return this1;
};
tink_core_Signal.create = function(f) {
	return new tink_core__$Signal_Suspendable(f,null);
};
tink_core_Signal.generate = function(generator,init) {
	return new tink_core__$Signal_Suspendable(function(fire) {
		generator(fire);
		return null;
	},init);
};
tink_core_Signal.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core_Signal.ofClassical = function(add,remove,gather) {
	return new tink_core__$Signal_Suspendable(function(fire) {
		add(fire);
		var _g = remove;
		var a1 = fire;
		return new tink_core_SimpleLink(function() {
			_g(a1);
		});
	});
};
tink_core_Signal.dead = function() {
	return tink_core__$Signal_Disposed.INST;
};
var tink_core__$Signal_SignalObject = function() { };
$hxClasses["tink.core._Signal.SignalObject"] = tink_core__$Signal_SignalObject;
tink_core__$Signal_SignalObject.__name__ = true;
tink_core__$Signal_SignalObject.__isInterface__ = true;
tink_core__$Signal_SignalObject.__interfaces__ = [tink_core_Disposable];
tink_core__$Signal_SignalObject.prototype = {
	listen: null
	,__class__: tink_core__$Signal_SignalObject
};
var tink_core__$Signal_Disposed = function() {
	tink_core_AlreadyDisposed.call(this);
};
$hxClasses["tink.core._Signal.Disposed"] = tink_core__$Signal_Disposed;
tink_core__$Signal_Disposed.__name__ = true;
tink_core__$Signal_Disposed.__interfaces__ = [tink_core__$Signal_SignalObject];
tink_core__$Signal_Disposed.__super__ = tink_core_AlreadyDisposed;
tink_core__$Signal_Disposed.prototype = $extend(tink_core_AlreadyDisposed.prototype,{
	listen: function(cb) {
		return null;
	}
	,__class__: tink_core__$Signal_Disposed
});
var tink_core__$Signal_Suspendable = function(activate,init) {
	this.handlers = new tink_core_CallbackList();
	var _gthis = this;
	this.activate = activate;
	this.init = init;
	this.handlers.ondrain = function() {
		var this1 = _gthis.subscription;
		if(this1 != null) {
			this1.cancel();
		}
	};
	this.handlers.onfill = function() {
		if(init != null) {
			var f = init;
			init = null;
			f(_gthis);
		}
		_gthis.subscription = activate(($_=_gthis.handlers,$bind($_,$_.invoke)));
	};
};
$hxClasses["tink.core._Signal.Suspendable"] = tink_core__$Signal_Suspendable;
tink_core__$Signal_Suspendable.__name__ = true;
tink_core__$Signal_Suspendable.__interfaces__ = [tink_core_OwnedDisposable,tink_core__$Signal_SignalObject];
tink_core__$Signal_Suspendable.over = function(s,activate) {
	if(s.get_disposed()) {
		return tink_core_Signal.dead();
	} else {
		var ret = new tink_core__$Signal_Suspendable(activate);
		s.ondispose($bind(ret,ret.dispose));
		return ret;
	}
};
tink_core__$Signal_Suspendable.prototype = {
	handlers: null
	,activate: null
	,init: null
	,subscription: null
	,get_disposed: function() {
		return this.handlers.disposeHandlers == null;
	}
	,dispose: function() {
		this.handlers.dispose();
	}
	,ondispose: function(handler) {
		this.handlers.ondispose(handler);
	}
	,listen: function(cb) {
		var _this = this.handlers;
		if(_this.disposeHandlers == null) {
			return null;
		} else {
			var node = new tink_core__$Callback_ListCell(cb,_this);
			_this.cells.push(node);
			if(_this.used++ == 0) {
				var fn = _this.onfill;
				if(tink_core_Callback.depth < 500) {
					tink_core_Callback.depth++;
					fn();
					tink_core_Callback.depth--;
				} else {
					tink_core_Callback.defer(fn);
				}
			}
			return node;
		}
	}
	,__class__: tink_core__$Signal_Suspendable
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_core_SignalTrigger = function() {
	this.handlers = new tink_core_CallbackList();
};
$hxClasses["tink.core.SignalTrigger"] = tink_core_SignalTrigger;
tink_core_SignalTrigger.__name__ = true;
tink_core_SignalTrigger.__interfaces__ = [tink_core_OwnedDisposable,tink_core__$Signal_SignalObject];
tink_core_SignalTrigger.prototype = {
	get_disposed: function() {
		return this.handlers.disposeHandlers == null;
	}
	,handlers: null
	,dispose: function() {
		this.handlers.dispose();
	}
	,ondispose: function(d) {
		this.handlers.ondispose(d);
	}
	,trigger: function(event) {
		this.handlers.invoke(event);
	}
	,getLength: function() {
		return this.handlers.used;
	}
	,listen: function(cb) {
		var _this = this.handlers;
		if(_this.disposeHandlers == null) {
			return null;
		} else {
			var node = new tink_core__$Callback_ListCell(cb,_this);
			_this.cells.push(node);
			if(_this.used++ == 0) {
				var fn = _this.onfill;
				if(tink_core_Callback.depth < 500) {
					tink_core_Callback.depth++;
					fn();
					tink_core_Callback.depth--;
				} else {
					tink_core_Callback.defer(fn);
				}
			}
			return node;
		}
	}
	,clear: function() {
		this.handlers.clear();
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
	,__properties__: {get_disposed:"get_disposed"}
};
var tink_json_Char = {};
tink_json_Char.toString = function(this1) {
	return String.fromCodePoint(this1);
};
var tink_json_Parser = function() { };
$hxClasses["tink.json.Parser"] = tink_json_Parser;
tink_json_Parser.__name__ = true;
var tink_json__$Parser_RawData = {};
tink_json__$Parser_RawData._new = function(s,setLength) {
	setLength(s.length);
	return s;
};
tink_json__$Parser_RawData.hasBackslash = function(this1,min,max) {
	var _g = min;
	var _g1 = max;
	while(_g < _g1) {
		var i = _g++;
		if(this1.charCodeAt(i) == 92) {
			return true;
		}
	}
	return false;
};
tink_json__$Parser_RawData.getChar = function(this1,i) {
	return this1.charCodeAt(i);
};
tink_json__$Parser_RawData.charPos = function(this1,char,start,end) {
	return this1.indexOf(char,start);
};
tink_json__$Parser_RawData.hasId = function(this1,s,min,max) {
	return this1.startsWith(s,min);
};
var tink_json__$Parser_Char = {};
tink_json__$Parser_Char._new = function(code) {
	return String.fromCodePoint(code);
};
var tink_json__$Parser_SliceData = function(source,min,max) {
	this.source = source;
	this.min = min;
	this.max = max;
};
$hxClasses["tink.json._Parser.SliceData"] = tink_json__$Parser_SliceData;
tink_json__$Parser_SliceData.__name__ = true;
tink_json__$Parser_SliceData.prototype = {
	source: null
	,min: null
	,max: null
	,__class__: tink_json__$Parser_SliceData
};
var tink_json_JsonString = {};
tink_json_JsonString._new = function(raw,min,max) {
	return raw.substring(min,max);
};
tink_json_JsonString.toInt = function(this1) {
	return parseInt(this1);
};
tink_json_JsonString.toFloat = function(this1) {
	return parseFloat(this1);
};
tink_json_JsonString.toUInt = function(this1) {
	var ret = 0;
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		ret = ret + Std.parseInt(this1.charAt(i)) * (Math.pow(10,this1.length - i - 1) | 0);
	}
	return ret;
};
tink_json_JsonString.toString = function(this1) {
	if(this1.indexOf(tink_json_JsonString.BACKSLASH) == -1) {
		return this1;
	} else {
		return JSON.parse("\"" + this1 + "\"");
	}
};
var tink_json_BasicParser = function() {
	this.afterParsing = [];
	this.plugins = new tink_core_Annex(this);
};
$hxClasses["tink.json.BasicParser"] = tink_json_BasicParser;
tink_json_BasicParser.__name__ = true;
tink_json_BasicParser.isDigit = function(char) {
	if(char < 58) {
		return char > 47;
	} else {
		return false;
	}
};
tink_json_BasicParser.startsNumber = function(char) {
	if(!(char == 46 || char == 45)) {
		if(char < 58) {
			return char > 47;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
tink_json_BasicParser.prototype = {
	plugins: null
	,source: null
	,pos: null
	,max: null
	,afterParsing: null
	,init: function(source) {
		this.pos = 0;
		this.max = source.length;
		this.source = source;
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
	}
	,skipIgnored: function() {
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
	}
	,parseDynamic: function() {
		var start = this.pos;
		this.skipValue();
		return JSON.parse(this.source.substring(start,this.pos));
	}
	,copyFields: function(target,source) {
		Object.assign(target,source);
		return target;
	}
	,emptyInstance: function(cls) {
		return Object.create(cls.prototype);
	}
	,parseString: function() {
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var e;
		if(this.source.charCodeAt(this.pos) == 34) {
			this.pos += 1;
			e = true;
		} else {
			e = false;
		}
		var e1 = !e ? this.die("Expected " + "string") : null;
		return this.parseRestOfString();
	}
	,parseRestOfString: function() {
		return this.slice(this.skipString(),this.pos - 1);
	}
	,skipString: function() {
		var start = this.pos;
		while(true) {
			var end = this.max;
			var _g = this.source.indexOf(tink_json_BasicParser.DBQT,this.pos);
			if(_g == -1) {
				this.die("unterminated string",start);
			} else {
				var v = _g;
				this.pos = v + 1;
				var p = this.pos - 2;
				while(this.source.charCodeAt(p) == 92) --p;
				if((p - this.pos & 1) == 0) {
					break;
				}
			}
		}
		return start;
	}
	,parseNumber: function() {
		var char = this.source.charCodeAt(this.pos);
		if(char == 46 || char == 45 || char < 58 && char > 47) {
			return this.doParseNumber();
		} else {
			return this.die("number expected");
		}
	}
	,doParseNumber: function() {
		return this.slice(this.skipNumber(this.source.charCodeAt(this.pos++)),this.pos);
	}
	,invalidNumber: function(start) {
		return this.die("Invalid number " + this.source.substring(start,this.pos),start);
	}
	,skipNumber: function(c) {
		var start = this.pos - 1;
		var minus = c == 45;
		var digit = !minus;
		var zero = c == 48;
		var point = false;
		var e = false;
		var pm = false;
		var end = false;
		while(this.pos < this.max) {
			c = this.source.charCodeAt(this.pos++);
			switch(c) {
			case 43:case 45:
				if(!e || pm) {
					this.invalidNumber(start);
				}
				digit = false;
				pm = true;
				break;
			case 46:
				if(minus || point) {
					this.invalidNumber(start);
				}
				digit = false;
				point = true;
				break;
			case 48:
				if(zero && !point) {
					this.invalidNumber(start);
				}
				if(minus) {
					minus = false;
					zero = true;
				}
				digit = true;
				break;
			case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				if(zero && !point) {
					this.invalidNumber(start);
				}
				if(minus) {
					minus = false;
				}
				digit = true;
				zero = false;
				break;
			case 69:case 101:
				if(minus || zero || e) {
					this.invalidNumber(start);
				}
				digit = false;
				e = true;
				break;
			default:
				if(!digit) {
					this.invalidNumber(start);
				}
				this.pos--;
				end = true;
			}
			if(end) {
				break;
			}
		}
		return start;
	}
	,slice: function(from,to) {
		return this.source.substring(from,to);
	}
	,next: function() {
		return this.source.charCodeAt(this.pos++);
	}
	,toChar: function(code,expected) {
		while(true) {
			var _g = this.source.charCodeAt(this.pos++);
			var _hx_tmp;
			if(_g == code == true) {
				break;
			} else {
				_hx_tmp = _g < 33;
				if(_hx_tmp != true) {
					this.die("expected " + expected);
				}
			}
		}
	}
	,parseSerialized: function() {
		var start = this.pos;
		this.skipValue();
		return this.source.substring(start,this.pos);
	}
	,parseValue: function() {
		var _gthis = this;
		var _g = this.source.charCodeAt(this.pos++);
		switch(_g) {
		case 34:
			var this1 = this.parseRestOfString();
			return tink_json_Value.VString(this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\""));
		case 91:
			var ret = [];
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 93) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				while(true) {
					ret.push(this.parseValue());
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					var tmp;
					if(this.source.charCodeAt(this.pos) == 44) {
						this.pos += 1;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						tmp = true;
					} else {
						tmp = false;
					}
					if(!tmp) {
						break;
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp;
				if(this.source.charCodeAt(this.pos) == 93) {
					this.pos += 1;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					this.die("Expected " + "]");
				}
			}
			return tink_json_Value.VArray(ret);
		case 102:
			var e;
			if(this.source.charCodeAt(this.pos) == 97 && this.source.charCodeAt(this.pos + 1) == 108 && this.source.charCodeAt(this.pos + 2) == 115 && this.source.charCodeAt(this.pos + 3) == 101) {
				this.pos += 4;
				e = true;
			} else {
				e = false;
			}
			var e1 = !e ? this.die("Expected " + "alse") : null;
			return tink_json_Value.VBool(false);
		case 110:
			var e;
			if(this.source.charCodeAt(this.pos) == 117 && this.source.charCodeAt(this.pos + 1) == 108 && this.source.charCodeAt(this.pos + 2) == 108) {
				this.pos += 3;
				e = true;
			} else {
				e = false;
			}
			var e1 = !e ? this.die("Expected " + "ull") : null;
			return tink_json_Value.VNull;
		case 116:
			var e;
			if(this.source.charCodeAt(this.pos) == 114 && this.source.charCodeAt(this.pos + 1) == 117 && this.source.charCodeAt(this.pos + 2) == 101) {
				this.pos += 3;
				e = true;
			} else {
				e = false;
			}
			var e1 = !e ? this.die("Expected " + "rue") : null;
			return tink_json_Value.VBool(true);
		case 123:
			var fields = [];
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				while(true) {
					if(_gthis.source.charCodeAt(_gthis.pos++) != 34) {
						_gthis.die("expected string",_gthis.pos - 1);
					}
					var this1 = _gthis.parseRestOfString();
					var tmp = this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\"");
					while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
					var e;
					if(_gthis.source.charCodeAt(_gthis.pos) == 58) {
						_gthis.pos += 1;
						while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
						e = true;
					} else {
						e = false;
					}
					var e1 = !e ? _gthis.die("Expected " + ":") : null;
					fields.push(new tink_core_NamedWith(tmp,_gthis.parseValue()));
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					var tmp1;
					if(this.source.charCodeAt(this.pos) == 44) {
						this.pos += 1;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						tmp1 = true;
					} else {
						tmp1 = false;
					}
					if(!tmp1) {
						break;
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp;
				if(this.source.charCodeAt(this.pos) == 125) {
					this.pos += 1;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					this.die("Expected " + "}");
				}
			}
			return tink_json_Value.VObject(fields);
		default:
			var char = _g;
			if(char == 46 || char == 45 || char < 58 && char > 47) {
				this.pos--;
				return tink_json_Value.VNumber(parseFloat(this.doParseNumber()));
			} else {
				return this.invalidChar(char);
			}
		}
	}
	,skipArray: function() {
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 93) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(tmp) {
			return;
		}
		while(true) {
			this.skipValue();
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 44) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
		}
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 93) {
			this.pos += 1;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this.die("Expected " + "]");
		}
	}
	,skipValue: function() {
		var _gthis = this;
		var _g = this.source.charCodeAt(this.pos++);
		switch(_g) {
		case 34:
			this.skipString();
			break;
		case 91:
			this.skipArray();
			break;
		case 102:
			var tmp;
			if(this.source.charCodeAt(this.pos) == 97 && this.source.charCodeAt(this.pos + 1) == 108 && this.source.charCodeAt(this.pos + 2) == 115 && this.source.charCodeAt(this.pos + 3) == 101) {
				this.pos += 4;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "alse");
			}
			break;
		case 110:
			var tmp;
			if(this.source.charCodeAt(this.pos) == 117 && this.source.charCodeAt(this.pos + 1) == 108 && this.source.charCodeAt(this.pos + 2) == 108) {
				this.pos += 3;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "ull");
			}
			break;
		case 116:
			var tmp;
			if(this.source.charCodeAt(this.pos) == 114 && this.source.charCodeAt(this.pos + 1) == 117 && this.source.charCodeAt(this.pos + 2) == 101) {
				this.pos += 3;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "rue");
			}
			break;
		case 123:
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(tmp) {
				return;
			}
			while(true) {
				if(_gthis.source.charCodeAt(_gthis.pos++) != 34) {
					_gthis.die("expected string",_gthis.pos - 1);
				}
				_gthis.skipString();
				while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
				var tmp;
				if(_gthis.source.charCodeAt(_gthis.pos) == 58) {
					_gthis.pos += 1;
					while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					_gthis.die("Expected " + ":");
				}
				_gthis.skipValue();
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp1;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp1 = true;
				} else {
					tmp1 = false;
				}
				if(!tmp1) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "}");
			}
			break;
		default:
			var char = _g;
			if(char == 46 || char == 45 || char < 58 && char > 47) {
				this.skipNumber(char);
			} else {
				this.invalidChar(char);
			}
		}
	}
	,invalidChar: function(c) {
		return this.die("invalid char " + StringTools.hex(c,2),this.pos - 1);
	}
	,die: function(s,pos,end) {
		if(end == null) {
			end = -1;
		}
		if(pos == null) {
			pos = -1;
		}
		if(pos == -1) {
			pos = this.pos;
			end = pos;
		} else if(end == -1) {
			end = this.pos;
		}
		if(end <= pos) {
			end = pos + 1;
		}
		var range = end > pos + 1 ? "characters " + pos + " - " + end : "character " + pos;
		var clip = function(s,maxLength,left) {
			if(s.length > maxLength) {
				if(left) {
					return "... " + HxOverrides.substr(s,s.length - maxLength,null);
				} else {
					return HxOverrides.substr(s,0,maxLength) + " ...";
				}
			} else {
				return s;
			}
		};
		var center = pos + end >> 1;
		var context = clip(this.source.substring(0,pos),20,true) + "  ---->  " + clip(this.source.substring(pos,center),20,false) + clip(this.source.substring(center,end),20,true) + "  <----  " + clip(this.source.substring(end,this.max),20,false);
		return tink_core_TypedError.withData(422,s + (" at " + range + " in " + context),{ source : this.source, start : pos, end : end},{ fileName : "tink/json/Parser.hx", lineNumber : 472, className : "tink.json.BasicParser", methodName : "die"}).throwSelf();
	}
	,parseBool: function() {
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 116 && this.source.charCodeAt(this.pos + 1) == 114 && this.source.charCodeAt(this.pos + 2) == 117 && this.source.charCodeAt(this.pos + 3) == 101) {
			this.pos += 4;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(tmp) {
			return true;
		} else {
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 102 && this.source.charCodeAt(this.pos + 1) == 97 && this.source.charCodeAt(this.pos + 2) == 108 && this.source.charCodeAt(this.pos + 3) == 115 && this.source.charCodeAt(this.pos + 4) == 101) {
				this.pos += 5;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			} else {
				return this.die("expected boolean value");
			}
		}
	}
	,__class__: tink_json_BasicParser
};
var tink_json_Parser0 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser0"] = tink_json_Parser0;
tink_json_Parser0.__name__ = true;
tink_json_Parser0.__super__ = tink_json_BasicParser;
tink_json_Parser0.prototype = $extend(tink_json_BasicParser.prototype,{
	process0: function() {
		var _gthis = this;
		var cur = 0;
		var v_components = null;
		var hasv_components = false;
		var v_files = null;
		var hasv_files = false;
		var v_id = null;
		var hasv_id = false;
		var __start__ = this.pos;
		while(true) {
			var _g = this.source.charCodeAt(this.pos++);
			var _hx_tmp;
			if(_g == 123 == true) {
				break;
			} else {
				_hx_tmp = _g < 33;
				if(_hx_tmp != true) {
					this.die("expected " + "{");
				}
			}
		}
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 125) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			_hx_loop4: while(true) {
				while(true) {
					var _g = this.source.charCodeAt(this.pos++);
					var _hx_tmp;
					if(_g == 34 == true) {
						break;
					} else {
						_hx_tmp = _g < 33;
						if(_hx_tmp != true) {
							this.die("expected " + "\"");
						}
					}
				}
				cur = this.source.charCodeAt(this.pos++);
				switch(cur) {
				case 99:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 111) {
						cur = this.source.charCodeAt(this.pos++);
						if(cur == 109) {
							cur = this.source.charCodeAt(this.pos++);
							if(cur == 112) {
								cur = this.source.charCodeAt(this.pos++);
								if(cur == 111) {
									cur = this.source.charCodeAt(this.pos++);
									if(cur == 110) {
										cur = this.source.charCodeAt(this.pos++);
										if(cur == 101) {
											cur = this.source.charCodeAt(this.pos++);
											if(cur == 110) {
												cur = this.source.charCodeAt(this.pos++);
												if(cur == 116) {
													cur = this.source.charCodeAt(this.pos++);
													if(cur == 115) {
														cur = this.source.charCodeAt(this.pos++);
														if(cur == 34) {
															while(true) {
																var _g1 = this.source.charCodeAt(this.pos++);
																var _hx_tmp1;
																if(_g1 == 58 == true) {
																	break;
																} else {
																	_hx_tmp1 = _g1 < 33;
																	if(_hx_tmp1 != true) {
																		this.die("expected " + ":");
																	}
																}
															}
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var v_components1;
															if(this.source.charCodeAt(this.pos) == 110 && this.source.charCodeAt(this.pos + 1) == 117 && this.source.charCodeAt(this.pos + 2) == 108 && this.source.charCodeAt(this.pos + 3) == 108) {
																this.pos += 4;
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																v_components1 = true;
															} else {
																v_components1 = false;
															}
															if(v_components1) {
																v_components = null;
															} else {
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																var v_components2;
																if(this.source.charCodeAt(this.pos) == 91) {
																	this.pos += 1;
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	v_components2 = true;
																} else {
																	v_components2 = false;
																}
																if(!v_components2) {
																	this.die("Expected " + "[");
																}
																var __ret = new haxe_ds_StringMap();
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																var v_components3;
																if(this.source.charCodeAt(this.pos) == 93) {
																	this.pos += 1;
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	v_components3 = true;
																} else {
																	v_components3 = false;
																}
																if(!v_components3) {
																	while(true) {
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		var v_components4;
																		if(this.source.charCodeAt(this.pos) == 91) {
																			this.pos += 1;
																			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																			v_components4 = true;
																		} else {
																			v_components4 = false;
																		}
																		if(!v_components4) {
																			this.die("Expected " + "[");
																		}
																		var this1 = this.parseString();
																		var _e0 = this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\"");
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		var e;
																		if(this.source.charCodeAt(this.pos) == 44) {
																			this.pos += 1;
																			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																			e = true;
																		} else {
																			e = false;
																		}
																		var e1 = !e ? this.die("Expected " + ",") : null;
																		var this2 = this.parseString();
																		var _e1 = this2.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this2 : JSON.parse("\"" + this2 + "\"");
																		__ret.h[_e0] = _e1;
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		var v_components5;
																		if(this.source.charCodeAt(this.pos) == 93) {
																			this.pos += 1;
																			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																			v_components5 = true;
																		} else {
																			v_components5 = false;
																		}
																		if(!v_components5) {
																			this.die("Expected " + "]");
																		}
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		var v_components6;
																		if(this.source.charCodeAt(this.pos) == 44) {
																			this.pos += 1;
																			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																			v_components6 = true;
																		} else {
																			v_components6 = false;
																		}
																		if(!v_components6) {
																			break;
																		}
																	}
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	var v_components7;
																	if(this.source.charCodeAt(this.pos) == 93) {
																		this.pos += 1;
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		v_components7 = true;
																	} else {
																		v_components7 = false;
																	}
																	if(!v_components7) {
																		this.die("Expected " + "]");
																	}
																}
																v_components = __ret;
															}
															hasv_components = true;
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var tmp;
															if(this.source.charCodeAt(this.pos) == 44) {
																this.pos += 1;
																tmp = true;
															} else {
																tmp = false;
															}
															if(!tmp) {
																break _hx_loop4;
															} else {
																continue;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					break;
				case 102:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 105) {
						cur = this.source.charCodeAt(this.pos++);
						if(cur == 108) {
							cur = this.source.charCodeAt(this.pos++);
							if(cur == 101) {
								cur = this.source.charCodeAt(this.pos++);
								if(cur == 115) {
									cur = this.source.charCodeAt(this.pos++);
									if(cur == 34) {
										while(true) {
											var _g2 = this.source.charCodeAt(this.pos++);
											var _hx_tmp2;
											if(_g2 == 58 == true) {
												break;
											} else {
												_hx_tmp2 = _g2 < 33;
												if(_hx_tmp2 != true) {
													this.die("expected " + ":");
												}
											}
										}
										while(this.source.charCodeAt(this.pos) < 33) this.pos++;
										while(this.source.charCodeAt(this.pos) < 33) this.pos++;
										var v_files1;
										if(this.source.charCodeAt(this.pos) == 110 && this.source.charCodeAt(this.pos + 1) == 117 && this.source.charCodeAt(this.pos + 2) == 108 && this.source.charCodeAt(this.pos + 3) == 108) {
											this.pos += 4;
											while(this.source.charCodeAt(this.pos) < 33) this.pos++;
											v_files1 = true;
										} else {
											v_files1 = false;
										}
										if(v_files1) {
											v_files = null;
										} else {
											while(this.source.charCodeAt(this.pos) < 33) this.pos++;
											var v_files2;
											if(this.source.charCodeAt(this.pos) == 91) {
												this.pos += 1;
												while(this.source.charCodeAt(this.pos) < 33) this.pos++;
												v_files2 = true;
											} else {
												v_files2 = false;
											}
											if(!v_files2) {
												this.die("Expected " + "[");
											}
											var __ret1 = [];
											while(this.source.charCodeAt(this.pos) < 33) this.pos++;
											var v_files3;
											if(this.source.charCodeAt(this.pos) == 93) {
												this.pos += 1;
												while(this.source.charCodeAt(this.pos) < 33) this.pos++;
												v_files3 = true;
											} else {
												v_files3 = false;
											}
											if(!v_files3) {
												while(true) {
													var this3 = this.parseString();
													__ret1.push(this3.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this3 : JSON.parse("\"" + this3 + "\""));
													while(this.source.charCodeAt(this.pos) < 33) this.pos++;
													var v_files4;
													if(this.source.charCodeAt(this.pos) == 44) {
														this.pos += 1;
														while(this.source.charCodeAt(this.pos) < 33) this.pos++;
														v_files4 = true;
													} else {
														v_files4 = false;
													}
													if(!v_files4) {
														break;
													}
												}
												while(this.source.charCodeAt(this.pos) < 33) this.pos++;
												var v_files5;
												if(this.source.charCodeAt(this.pos) == 93) {
													this.pos += 1;
													while(this.source.charCodeAt(this.pos) < 33) this.pos++;
													v_files5 = true;
												} else {
													v_files5 = false;
												}
												if(!v_files5) {
													this.die("Expected " + "]");
												}
											}
											v_files = __ret1;
										}
										hasv_files = true;
										while(this.source.charCodeAt(this.pos) < 33) this.pos++;
										var tmp1;
										if(this.source.charCodeAt(this.pos) == 44) {
											this.pos += 1;
											tmp1 = true;
										} else {
											tmp1 = false;
										}
										if(!tmp1) {
											break _hx_loop4;
										} else {
											continue;
										}
									}
								}
							}
						}
					}
					break;
				case 105:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 100) {
						cur = this.source.charCodeAt(this.pos++);
						if(cur == 34) {
							while(true) {
								var _g3 = this.source.charCodeAt(this.pos++);
								var _hx_tmp3;
								if(_g3 == 58 == true) {
									break;
								} else {
									_hx_tmp3 = _g3 < 33;
									if(_hx_tmp3 != true) {
										this.die("expected " + ":");
									}
								}
							}
							while(this.source.charCodeAt(this.pos) < 33) this.pos++;
							while(this.source.charCodeAt(this.pos) < 33) this.pos++;
							var v_id1;
							if(this.source.charCodeAt(this.pos) == 110 && this.source.charCodeAt(this.pos + 1) == 117 && this.source.charCodeAt(this.pos + 2) == 108 && this.source.charCodeAt(this.pos + 3) == 108) {
								this.pos += 4;
								while(this.source.charCodeAt(this.pos) < 33) this.pos++;
								v_id1 = true;
							} else {
								v_id1 = false;
							}
							if(v_id1) {
								v_id = null;
							} else {
								var this4 = this.parseString();
								v_id = this4.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this4 : JSON.parse("\"" + this4 + "\"");
							}
							hasv_id = true;
							while(this.source.charCodeAt(this.pos) < 33) this.pos++;
							var tmp2;
							if(this.source.charCodeAt(this.pos) == 44) {
								this.pos += 1;
								tmp2 = true;
							} else {
								tmp2 = false;
							}
							if(!tmp2) {
								break _hx_loop4;
							} else {
								continue;
							}
						}
					}
					break;
				}
				if(cur != 34) {
					this.skipString();
				}
				while(true) {
					var _g4 = this.source.charCodeAt(this.pos++);
					var _hx_tmp4;
					if(_g4 == 58 == true) {
						break;
					} else {
						_hx_tmp4 = _g4 < 33;
						if(_hx_tmp4 != true) {
							this.die("expected " + ":");
						}
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				this.skipValue();
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp3;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					tmp3 = true;
				} else {
					tmp3 = false;
				}
				if(!tmp3) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "}");
			}
		}
		var __missing__ = function(field) {
			return _gthis.die("missing field \"" + field + "\"",__start__);
		};
		return { components : hasv_components ? v_components : __missing__("components"), files : hasv_files ? v_files : __missing__("files"), id : hasv_id ? v_id : __missing__("id")};
	}
	,parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		var json = this.process0();
		var ret = new nat_Entry(json.id,json.components,json.files);
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser0", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser0
});
var tink_json_Parser1 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser1"] = tink_json_Parser1;
tink_json_Parser1.__name__ = true;
tink_json_Parser1.__super__ = tink_json_BasicParser;
tink_json_Parser1.prototype = $extend(tink_json_BasicParser.prototype,{
	parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 91) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this.die("Expected " + "[");
		}
		var __ret = new haxe_ds_StringMap();
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 93) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			while(true) {
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp;
				if(this.source.charCodeAt(this.pos) == 91) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					this.die("Expected " + "[");
				}
				var this1 = this.parseString();
				var _e0 = this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\"");
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var e;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					e = true;
				} else {
					e = false;
				}
				var e1 = !e ? this.die("Expected " + ",") : null;
				var _e1 = parseInt(this.parseNumber());
				__ret.h[_e0] = _e1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp1;
				if(this.source.charCodeAt(this.pos) == 93) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp1 = true;
				} else {
					tmp1 = false;
				}
				if(!tmp1) {
					this.die("Expected " + "]");
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp2;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp2 = true;
				} else {
					tmp2 = false;
				}
				if(!tmp2) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 93) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "]");
			}
		}
		var ret = __ret;
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser1", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser1
});
var tink_json_Parser10 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser10"] = tink_json_Parser10;
tink_json_Parser10.__name__ = true;
tink_json_Parser10.__super__ = tink_json_BasicParser;
tink_json_Parser10.prototype = $extend(tink_json_BasicParser.prototype,{
	process0: function() {
		var _gthis = this;
		var cur = 0;
		var v_a = .0;
		var hasv_a = false;
		var v_b = .0;
		var hasv_b = false;
		var v_g = .0;
		var hasv_g = false;
		var v_r = .0;
		var hasv_r = false;
		var __start__ = this.pos;
		while(true) {
			var _g = this.source.charCodeAt(this.pos++);
			var _hx_tmp;
			if(_g == 123 == true) {
				break;
			} else {
				_hx_tmp = _g < 33;
				if(_hx_tmp != true) {
					this.die("expected " + "{");
				}
			}
		}
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 125) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			_hx_loop4: while(true) {
				while(true) {
					var _g = this.source.charCodeAt(this.pos++);
					var _hx_tmp;
					if(_g == 34 == true) {
						break;
					} else {
						_hx_tmp = _g < 33;
						if(_hx_tmp != true) {
							this.die("expected " + "\"");
						}
					}
				}
				cur = this.source.charCodeAt(this.pos++);
				switch(cur) {
				case 97:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g1 = this.source.charCodeAt(this.pos++);
							var _hx_tmp1;
							if(_g1 == 58 == true) {
								break;
							} else {
								_hx_tmp1 = _g1 < 33;
								if(_hx_tmp1 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_a = parseFloat(this.parseNumber());
						hasv_a = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp = true;
						} else {
							tmp = false;
						}
						if(!tmp) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 98:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g2 = this.source.charCodeAt(this.pos++);
							var _hx_tmp2;
							if(_g2 == 58 == true) {
								break;
							} else {
								_hx_tmp2 = _g2 < 33;
								if(_hx_tmp2 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_b = parseFloat(this.parseNumber());
						hasv_b = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp1;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp1 = true;
						} else {
							tmp1 = false;
						}
						if(!tmp1) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 103:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g3 = this.source.charCodeAt(this.pos++);
							var _hx_tmp3;
							if(_g3 == 58 == true) {
								break;
							} else {
								_hx_tmp3 = _g3 < 33;
								if(_hx_tmp3 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_g = parseFloat(this.parseNumber());
						hasv_g = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp2;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp2 = true;
						} else {
							tmp2 = false;
						}
						if(!tmp2) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 114:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g4 = this.source.charCodeAt(this.pos++);
							var _hx_tmp4;
							if(_g4 == 58 == true) {
								break;
							} else {
								_hx_tmp4 = _g4 < 33;
								if(_hx_tmp4 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_r = parseFloat(this.parseNumber());
						hasv_r = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp3;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp3 = true;
						} else {
							tmp3 = false;
						}
						if(!tmp3) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				}
				if(cur != 34) {
					this.skipString();
				}
				while(true) {
					var _g5 = this.source.charCodeAt(this.pos++);
					var _hx_tmp5;
					if(_g5 == 58 == true) {
						break;
					} else {
						_hx_tmp5 = _g5 < 33;
						if(_hx_tmp5 != true) {
							this.die("expected " + ":");
						}
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				this.skipValue();
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp4;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					tmp4 = true;
				} else {
					tmp4 = false;
				}
				if(!tmp4) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "}");
			}
		}
		var __missing__ = function(field) {
			return _gthis.die("missing field \"" + field + "\"",__start__);
		};
		return { a : hasv_a ? v_a : __missing__("a"), b : hasv_b ? v_b : __missing__("b"), g : hasv_g ? v_g : __missing__("g"), r : hasv_r ? v_r : __missing__("r")};
	}
	,parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		var ret = this.process0();
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser10", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser10
});
var tink_json_Parser11 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser11"] = tink_json_Parser11;
tink_json_Parser11.__name__ = true;
tink_json_Parser11.__super__ = tink_json_BasicParser;
tink_json_Parser11.prototype = $extend(tink_json_BasicParser.prototype,{
	parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 91) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this.die("Expected " + "[");
		}
		var __ret = [];
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 93) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			while(true) {
				var this1 = this.parseString();
				__ret.push(this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\""));
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 93) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "]");
			}
		}
		var ret = __ret;
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser11", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser11
});
var tink_json_Parser2 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser2"] = tink_json_Parser2;
tink_json_Parser2.__name__ = true;
tink_json_Parser2.__super__ = tink_json_BasicParser;
tink_json_Parser2.prototype = $extend(tink_json_BasicParser.prototype,{
	parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		var this1 = this.parseString();
		var ret = this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\"");
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser2", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser2
});
var tink_json_Parser3 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser3"] = tink_json_Parser3;
tink_json_Parser3.__name__ = true;
tink_json_Parser3.__super__ = tink_json_BasicParser;
tink_json_Parser3.prototype = $extend(tink_json_BasicParser.prototype,{
	process0: function() {
		var _gthis = this;
		var cur = 0;
		var v_imageFiles = null;
		var hasv_imageFiles = false;
		var v_pinnedImageIndex = 0;
		var hasv_pinnedImageIndex = false;
		var __start__ = this.pos;
		while(true) {
			var _g = this.source.charCodeAt(this.pos++);
			var _hx_tmp;
			if(_g == 123 == true) {
				break;
			} else {
				_hx_tmp = _g < 33;
				if(_hx_tmp != true) {
					this.die("expected " + "{");
				}
			}
		}
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 125) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			_hx_loop4: while(true) {
				while(true) {
					var _g = this.source.charCodeAt(this.pos++);
					var _hx_tmp;
					if(_g == 34 == true) {
						break;
					} else {
						_hx_tmp = _g < 33;
						if(_hx_tmp != true) {
							this.die("expected " + "\"");
						}
					}
				}
				cur = this.source.charCodeAt(this.pos++);
				switch(cur) {
				case 105:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 109) {
						cur = this.source.charCodeAt(this.pos++);
						if(cur == 97) {
							cur = this.source.charCodeAt(this.pos++);
							if(cur == 103) {
								cur = this.source.charCodeAt(this.pos++);
								if(cur == 101) {
									cur = this.source.charCodeAt(this.pos++);
									if(cur == 70) {
										cur = this.source.charCodeAt(this.pos++);
										if(cur == 105) {
											cur = this.source.charCodeAt(this.pos++);
											if(cur == 108) {
												cur = this.source.charCodeAt(this.pos++);
												if(cur == 101) {
													cur = this.source.charCodeAt(this.pos++);
													if(cur == 115) {
														cur = this.source.charCodeAt(this.pos++);
														if(cur == 34) {
															while(true) {
																var _g1 = this.source.charCodeAt(this.pos++);
																var _hx_tmp1;
																if(_g1 == 58 == true) {
																	break;
																} else {
																	_hx_tmp1 = _g1 < 33;
																	if(_hx_tmp1 != true) {
																		this.die("expected " + ":");
																	}
																}
															}
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var v_imageFiles1;
															if(this.source.charCodeAt(this.pos) == 91) {
																this.pos += 1;
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																v_imageFiles1 = true;
															} else {
																v_imageFiles1 = false;
															}
															if(!v_imageFiles1) {
																this.die("Expected " + "[");
															}
															var __ret = [];
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var v_imageFiles2;
															if(this.source.charCodeAt(this.pos) == 93) {
																this.pos += 1;
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																v_imageFiles2 = true;
															} else {
																v_imageFiles2 = false;
															}
															if(!v_imageFiles2) {
																while(true) {
																	var this1 = this.parseString();
																	__ret.push(this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\""));
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	var v_imageFiles3;
																	if(this.source.charCodeAt(this.pos) == 44) {
																		this.pos += 1;
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		v_imageFiles3 = true;
																	} else {
																		v_imageFiles3 = false;
																	}
																	if(!v_imageFiles3) {
																		break;
																	}
																}
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																var v_imageFiles4;
																if(this.source.charCodeAt(this.pos) == 93) {
																	this.pos += 1;
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	v_imageFiles4 = true;
																} else {
																	v_imageFiles4 = false;
																}
																if(!v_imageFiles4) {
																	this.die("Expected " + "]");
																}
															}
															v_imageFiles = __ret;
															hasv_imageFiles = true;
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var tmp;
															if(this.source.charCodeAt(this.pos) == 44) {
																this.pos += 1;
																tmp = true;
															} else {
																tmp = false;
															}
															if(!tmp) {
																break _hx_loop4;
															} else {
																continue;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					break;
				case 112:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 105) {
						cur = this.source.charCodeAt(this.pos++);
						if(cur == 110) {
							cur = this.source.charCodeAt(this.pos++);
							if(cur == 110) {
								cur = this.source.charCodeAt(this.pos++);
								if(cur == 101) {
									cur = this.source.charCodeAt(this.pos++);
									if(cur == 100) {
										cur = this.source.charCodeAt(this.pos++);
										if(cur == 73) {
											cur = this.source.charCodeAt(this.pos++);
											if(cur == 109) {
												cur = this.source.charCodeAt(this.pos++);
												if(cur == 97) {
													cur = this.source.charCodeAt(this.pos++);
													if(cur == 103) {
														cur = this.source.charCodeAt(this.pos++);
														if(cur == 101) {
															cur = this.source.charCodeAt(this.pos++);
															if(cur == 73) {
																cur = this.source.charCodeAt(this.pos++);
																if(cur == 110) {
																	cur = this.source.charCodeAt(this.pos++);
																	if(cur == 100) {
																		cur = this.source.charCodeAt(this.pos++);
																		if(cur == 101) {
																			cur = this.source.charCodeAt(this.pos++);
																			if(cur == 120) {
																				cur = this.source.charCodeAt(this.pos++);
																				if(cur == 34) {
																					while(true) {
																						var _g2 = this.source.charCodeAt(this.pos++);
																						var _hx_tmp2;
																						if(_g2 == 58 == true) {
																							break;
																						} else {
																							_hx_tmp2 = _g2 < 33;
																							if(_hx_tmp2 != true) {
																								this.die("expected " + ":");
																							}
																						}
																					}
																					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																					v_pinnedImageIndex = parseInt(this.parseNumber());
																					hasv_pinnedImageIndex = true;
																					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																					var tmp1;
																					if(this.source.charCodeAt(this.pos) == 44) {
																						this.pos += 1;
																						tmp1 = true;
																					} else {
																						tmp1 = false;
																					}
																					if(!tmp1) {
																						break _hx_loop4;
																					} else {
																						continue;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					break;
				}
				if(cur != 34) {
					this.skipString();
				}
				while(true) {
					var _g3 = this.source.charCodeAt(this.pos++);
					var _hx_tmp3;
					if(_g3 == 58 == true) {
						break;
					} else {
						_hx_tmp3 = _g3 < 33;
						if(_hx_tmp3 != true) {
							this.die("expected " + ":");
						}
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				this.skipValue();
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp2;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					tmp2 = true;
				} else {
					tmp2 = false;
				}
				if(!tmp2) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "}");
			}
		}
		var __missing__ = function(field) {
			return _gthis.die("missing field \"" + field + "\"",__start__);
		};
		return { imageFiles : hasv_imageFiles ? v_imageFiles : __missing__("imageFiles"), pinnedImageIndex : hasv_pinnedImageIndex ? v_pinnedImageIndex : __missing__("pinnedImageIndex")};
	}
	,parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		var ret = this.process0();
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser3", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser3
});
var tink_json_Parser4 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser4"] = tink_json_Parser4;
tink_json_Parser4.__name__ = true;
tink_json_Parser4.__super__ = tink_json_BasicParser;
tink_json_Parser4.prototype = $extend(tink_json_BasicParser.prototype,{
	parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		var ret = parseFloat(this.parseNumber());
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser4", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser4
});
var tink_json_Parser5 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser5"] = tink_json_Parser5;
tink_json_Parser5.__name__ = true;
tink_json_Parser5.__super__ = tink_json_BasicParser;
tink_json_Parser5.prototype = $extend(tink_json_BasicParser.prototype,{
	parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 91) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this.die("Expected " + "[");
		}
		var __ret = [];
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 93) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			while(true) {
				var this1 = this.parseString();
				__ret.push(this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\""));
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 93) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "]");
			}
		}
		var ret = __ret;
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser5", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser5
});
var tink_json_Parser6 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser6"] = tink_json_Parser6;
tink_json_Parser6.__name__ = true;
tink_json_Parser6.__super__ = tink_json_BasicParser;
tink_json_Parser6.prototype = $extend(tink_json_BasicParser.prototype,{
	process0: function() {
		var _gthis = this;
		var cur = 0;
		var v_a = 0;
		var hasv_a = false;
		var v_b = 0;
		var hasv_b = false;
		var v_g = 0;
		var hasv_g = false;
		var v_r = 0;
		var hasv_r = false;
		var __start__ = this.pos;
		while(true) {
			var _g = this.source.charCodeAt(this.pos++);
			var _hx_tmp;
			if(_g == 123 == true) {
				break;
			} else {
				_hx_tmp = _g < 33;
				if(_hx_tmp != true) {
					this.die("expected " + "{");
				}
			}
		}
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 125) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			_hx_loop4: while(true) {
				while(true) {
					var _g = this.source.charCodeAt(this.pos++);
					var _hx_tmp;
					if(_g == 34 == true) {
						break;
					} else {
						_hx_tmp = _g < 33;
						if(_hx_tmp != true) {
							this.die("expected " + "\"");
						}
					}
				}
				cur = this.source.charCodeAt(this.pos++);
				switch(cur) {
				case 97:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g1 = this.source.charCodeAt(this.pos++);
							var _hx_tmp1;
							if(_g1 == 58 == true) {
								break;
							} else {
								_hx_tmp1 = _g1 < 33;
								if(_hx_tmp1 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_a = parseInt(this.parseNumber());
						hasv_a = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp = true;
						} else {
							tmp = false;
						}
						if(!tmp) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 98:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g2 = this.source.charCodeAt(this.pos++);
							var _hx_tmp2;
							if(_g2 == 58 == true) {
								break;
							} else {
								_hx_tmp2 = _g2 < 33;
								if(_hx_tmp2 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_b = parseInt(this.parseNumber());
						hasv_b = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp1;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp1 = true;
						} else {
							tmp1 = false;
						}
						if(!tmp1) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 103:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g3 = this.source.charCodeAt(this.pos++);
							var _hx_tmp3;
							if(_g3 == 58 == true) {
								break;
							} else {
								_hx_tmp3 = _g3 < 33;
								if(_hx_tmp3 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_g = parseInt(this.parseNumber());
						hasv_g = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp2;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp2 = true;
						} else {
							tmp2 = false;
						}
						if(!tmp2) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 114:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g4 = this.source.charCodeAt(this.pos++);
							var _hx_tmp4;
							if(_g4 == 58 == true) {
								break;
							} else {
								_hx_tmp4 = _g4 < 33;
								if(_hx_tmp4 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_r = parseInt(this.parseNumber());
						hasv_r = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp3;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp3 = true;
						} else {
							tmp3 = false;
						}
						if(!tmp3) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				}
				if(cur != 34) {
					this.skipString();
				}
				while(true) {
					var _g5 = this.source.charCodeAt(this.pos++);
					var _hx_tmp5;
					if(_g5 == 58 == true) {
						break;
					} else {
						_hx_tmp5 = _g5 < 33;
						if(_hx_tmp5 != true) {
							this.die("expected " + ":");
						}
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				this.skipValue();
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp4;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					tmp4 = true;
				} else {
					tmp4 = false;
				}
				if(!tmp4) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "}");
			}
		}
		var __missing__ = function(field) {
			return _gthis.die("missing field \"" + field + "\"",__start__);
		};
		return { a : hasv_a ? v_a : __missing__("a"), b : hasv_b ? v_b : __missing__("b"), g : hasv_g ? v_g : __missing__("g"), r : hasv_r ? v_r : __missing__("r")};
	}
	,parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		var ret = this.process0();
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser6", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser6
});
var tink_json_Parser7 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser7"] = tink_json_Parser7;
tink_json_Parser7.__name__ = true;
tink_json_Parser7.__super__ = tink_json_BasicParser;
tink_json_Parser7.prototype = $extend(tink_json_BasicParser.prototype,{
	process0: function() {
		var _gthis = this;
		var cur = 0;
		var v_x = .0;
		var hasv_x = false;
		var v_y = .0;
		var hasv_y = false;
		var v_z = .0;
		var hasv_z = false;
		var __start__ = this.pos;
		while(true) {
			var _g = this.source.charCodeAt(this.pos++);
			var _hx_tmp;
			if(_g == 123 == true) {
				break;
			} else {
				_hx_tmp = _g < 33;
				if(_hx_tmp != true) {
					this.die("expected " + "{");
				}
			}
		}
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 125) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			_hx_loop4: while(true) {
				while(true) {
					var _g = this.source.charCodeAt(this.pos++);
					var _hx_tmp;
					if(_g == 34 == true) {
						break;
					} else {
						_hx_tmp = _g < 33;
						if(_hx_tmp != true) {
							this.die("expected " + "\"");
						}
					}
				}
				cur = this.source.charCodeAt(this.pos++);
				switch(cur) {
				case 120:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g1 = this.source.charCodeAt(this.pos++);
							var _hx_tmp1;
							if(_g1 == 58 == true) {
								break;
							} else {
								_hx_tmp1 = _g1 < 33;
								if(_hx_tmp1 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_x = parseFloat(this.parseNumber());
						hasv_x = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp = true;
						} else {
							tmp = false;
						}
						if(!tmp) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 121:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g2 = this.source.charCodeAt(this.pos++);
							var _hx_tmp2;
							if(_g2 == 58 == true) {
								break;
							} else {
								_hx_tmp2 = _g2 < 33;
								if(_hx_tmp2 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_y = parseFloat(this.parseNumber());
						hasv_y = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp1;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp1 = true;
						} else {
							tmp1 = false;
						}
						if(!tmp1) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				case 122:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 34) {
						while(true) {
							var _g3 = this.source.charCodeAt(this.pos++);
							var _hx_tmp3;
							if(_g3 == 58 == true) {
								break;
							} else {
								_hx_tmp3 = _g3 < 33;
								if(_hx_tmp3 != true) {
									this.die("expected " + ":");
								}
							}
						}
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						v_z = parseFloat(this.parseNumber());
						hasv_z = true;
						while(this.source.charCodeAt(this.pos) < 33) this.pos++;
						var tmp2;
						if(this.source.charCodeAt(this.pos) == 44) {
							this.pos += 1;
							tmp2 = true;
						} else {
							tmp2 = false;
						}
						if(!tmp2) {
							break _hx_loop4;
						} else {
							continue;
						}
					}
					break;
				}
				if(cur != 34) {
					this.skipString();
				}
				while(true) {
					var _g4 = this.source.charCodeAt(this.pos++);
					var _hx_tmp4;
					if(_g4 == 58 == true) {
						break;
					} else {
						_hx_tmp4 = _g4 < 33;
						if(_hx_tmp4 != true) {
							this.die("expected " + ":");
						}
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				this.skipValue();
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp3;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					tmp3 = true;
				} else {
					tmp3 = false;
				}
				if(!tmp3) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "}");
			}
		}
		var __missing__ = function(field) {
			return _gthis.die("missing field \"" + field + "\"",__start__);
		};
		return { x : hasv_x ? v_x : __missing__("x"), y : hasv_y ? v_y : __missing__("y"), z : hasv_z ? v_z : __missing__("z")};
	}
	,parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 91) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this.die("Expected " + "[");
		}
		var __ret = new haxe_ds_StringMap();
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 93) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			while(true) {
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp;
				if(this.source.charCodeAt(this.pos) == 91) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					this.die("Expected " + "[");
				}
				var this1 = this.parseString();
				var _e0 = this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\"");
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var e;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					e = true;
				} else {
					e = false;
				}
				var e1 = !e ? this.die("Expected " + ",") : null;
				var _e1 = this.process0();
				__ret.h[_e0] = _e1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp1;
				if(this.source.charCodeAt(this.pos) == 93) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp1 = true;
				} else {
					tmp1 = false;
				}
				if(!tmp1) {
					this.die("Expected " + "]");
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp2;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp2 = true;
				} else {
					tmp2 = false;
				}
				if(!tmp2) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 93) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "]");
			}
		}
		var ret = __ret;
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser7", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser7
});
var tink_json_Parser8 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser8"] = tink_json_Parser8;
tink_json_Parser8.__name__ = true;
tink_json_Parser8.__super__ = tink_json_BasicParser;
tink_json_Parser8.prototype = $extend(tink_json_BasicParser.prototype,{
	parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 91) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			this.die("Expected " + "[");
		}
		var __ret = new haxe_ds_StringMap();
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 93) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			while(true) {
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp;
				if(this.source.charCodeAt(this.pos) == 91) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp = true;
				} else {
					tmp = false;
				}
				if(!tmp) {
					this.die("Expected " + "[");
				}
				var this1 = this.parseString();
				var _e0 = this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\"");
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var e;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					e = true;
				} else {
					e = false;
				}
				var e1 = !e ? this.die("Expected " + ",") : null;
				var _e1 = parseInt(this.parseNumber());
				__ret.h[_e0] = _e1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp1;
				if(this.source.charCodeAt(this.pos) == 93) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp1 = true;
				} else {
					tmp1 = false;
				}
				if(!tmp1) {
					this.die("Expected " + "]");
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp2;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
					tmp2 = true;
				} else {
					tmp2 = false;
				}
				if(!tmp2) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 93) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "]");
			}
		}
		var ret = __ret;
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser8", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser8
});
var tink_json_Parser9 = function() {
	tink_json_BasicParser.call(this);
};
$hxClasses["tink.json.Parser9"] = tink_json_Parser9;
tink_json_Parser9.__name__ = true;
tink_json_Parser9.__super__ = tink_json_BasicParser;
tink_json_Parser9.prototype = $extend(tink_json_BasicParser.prototype,{
	process0: function() {
		var _gthis = this;
		var cur = 0;
		var v_imageFiles = null;
		var hasv_imageFiles = false;
		var v_imageScales = null;
		var hasv_imageScales = false;
		var v_pinnedImageIndex = 0;
		var hasv_pinnedImageIndex = false;
		var __start__ = this.pos;
		while(true) {
			var _g = this.source.charCodeAt(this.pos++);
			var _hx_tmp;
			if(_g == 123 == true) {
				break;
			} else {
				_hx_tmp = _g < 33;
				if(_hx_tmp != true) {
					this.die("expected " + "{");
				}
			}
		}
		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
		var tmp;
		if(this.source.charCodeAt(this.pos) == 125) {
			this.pos += 1;
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			_hx_loop4: while(true) {
				while(true) {
					var _g = this.source.charCodeAt(this.pos++);
					var _hx_tmp;
					if(_g == 34 == true) {
						break;
					} else {
						_hx_tmp = _g < 33;
						if(_hx_tmp != true) {
							this.die("expected " + "\"");
						}
					}
				}
				cur = this.source.charCodeAt(this.pos++);
				switch(cur) {
				case 105:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 109) {
						cur = this.source.charCodeAt(this.pos++);
						if(cur == 97) {
							cur = this.source.charCodeAt(this.pos++);
							if(cur == 103) {
								cur = this.source.charCodeAt(this.pos++);
								if(cur == 101) {
									cur = this.source.charCodeAt(this.pos++);
									switch(cur) {
									case 70:
										cur = this.source.charCodeAt(this.pos++);
										if(cur == 105) {
											cur = this.source.charCodeAt(this.pos++);
											if(cur == 108) {
												cur = this.source.charCodeAt(this.pos++);
												if(cur == 101) {
													cur = this.source.charCodeAt(this.pos++);
													if(cur == 115) {
														cur = this.source.charCodeAt(this.pos++);
														if(cur == 34) {
															while(true) {
																var _g1 = this.source.charCodeAt(this.pos++);
																var _hx_tmp1;
																if(_g1 == 58 == true) {
																	break;
																} else {
																	_hx_tmp1 = _g1 < 33;
																	if(_hx_tmp1 != true) {
																		this.die("expected " + ":");
																	}
																}
															}
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var v_imageFiles1;
															if(this.source.charCodeAt(this.pos) == 91) {
																this.pos += 1;
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																v_imageFiles1 = true;
															} else {
																v_imageFiles1 = false;
															}
															if(!v_imageFiles1) {
																this.die("Expected " + "[");
															}
															var __ret = [];
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var v_imageFiles2;
															if(this.source.charCodeAt(this.pos) == 93) {
																this.pos += 1;
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																v_imageFiles2 = true;
															} else {
																v_imageFiles2 = false;
															}
															if(!v_imageFiles2) {
																while(true) {
																	var this1 = this.parseString();
																	__ret.push(this1.indexOf(tink_json_JsonString.BACKSLASH) == -1 ? this1 : JSON.parse("\"" + this1 + "\""));
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	var v_imageFiles3;
																	if(this.source.charCodeAt(this.pos) == 44) {
																		this.pos += 1;
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		v_imageFiles3 = true;
																	} else {
																		v_imageFiles3 = false;
																	}
																	if(!v_imageFiles3) {
																		break;
																	}
																}
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																var v_imageFiles4;
																if(this.source.charCodeAt(this.pos) == 93) {
																	this.pos += 1;
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	v_imageFiles4 = true;
																} else {
																	v_imageFiles4 = false;
																}
																if(!v_imageFiles4) {
																	this.die("Expected " + "]");
																}
															}
															v_imageFiles = __ret;
															hasv_imageFiles = true;
															while(this.source.charCodeAt(this.pos) < 33) this.pos++;
															var tmp;
															if(this.source.charCodeAt(this.pos) == 44) {
																this.pos += 1;
																tmp = true;
															} else {
																tmp = false;
															}
															if(!tmp) {
																break _hx_loop4;
															} else {
																continue;
															}
														}
													}
												}
											}
										}
										break;
									case 83:
										cur = this.source.charCodeAt(this.pos++);
										if(cur == 99) {
											cur = this.source.charCodeAt(this.pos++);
											if(cur == 97) {
												cur = this.source.charCodeAt(this.pos++);
												if(cur == 108) {
													cur = this.source.charCodeAt(this.pos++);
													if(cur == 101) {
														cur = this.source.charCodeAt(this.pos++);
														if(cur == 115) {
															cur = this.source.charCodeAt(this.pos++);
															if(cur == 34) {
																while(true) {
																	var _g2 = this.source.charCodeAt(this.pos++);
																	var _hx_tmp2;
																	if(_g2 == 58 == true) {
																		break;
																	} else {
																		_hx_tmp2 = _g2 < 33;
																		if(_hx_tmp2 != true) {
																			this.die("expected " + ":");
																		}
																	}
																}
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																var v_imageScales1;
																if(this.source.charCodeAt(this.pos) == 91) {
																	this.pos += 1;
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	v_imageScales1 = true;
																} else {
																	v_imageScales1 = false;
																}
																if(!v_imageScales1) {
																	this.die("Expected " + "[");
																}
																var __ret1 = [];
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																var v_imageScales2;
																if(this.source.charCodeAt(this.pos) == 93) {
																	this.pos += 1;
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	v_imageScales2 = true;
																} else {
																	v_imageScales2 = false;
																}
																if(!v_imageScales2) {
																	while(true) {
																		__ret1.push(parseFloat(this.parseNumber()));
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		var v_imageScales3;
																		if(this.source.charCodeAt(this.pos) == 44) {
																			this.pos += 1;
																			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																			v_imageScales3 = true;
																		} else {
																			v_imageScales3 = false;
																		}
																		if(!v_imageScales3) {
																			break;
																		}
																	}
																	while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																	var v_imageScales4;
																	if(this.source.charCodeAt(this.pos) == 93) {
																		this.pos += 1;
																		while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																		v_imageScales4 = true;
																	} else {
																		v_imageScales4 = false;
																	}
																	if(!v_imageScales4) {
																		this.die("Expected " + "]");
																	}
																}
																v_imageScales = __ret1;
																hasv_imageScales = true;
																while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																var tmp1;
																if(this.source.charCodeAt(this.pos) == 44) {
																	this.pos += 1;
																	tmp1 = true;
																} else {
																	tmp1 = false;
																}
																if(!tmp1) {
																	break _hx_loop4;
																} else {
																	continue;
																}
															}
														}
													}
												}
											}
										}
										break;
									}
								}
							}
						}
					}
					break;
				case 112:
					cur = this.source.charCodeAt(this.pos++);
					if(cur == 105) {
						cur = this.source.charCodeAt(this.pos++);
						if(cur == 110) {
							cur = this.source.charCodeAt(this.pos++);
							if(cur == 110) {
								cur = this.source.charCodeAt(this.pos++);
								if(cur == 101) {
									cur = this.source.charCodeAt(this.pos++);
									if(cur == 100) {
										cur = this.source.charCodeAt(this.pos++);
										if(cur == 73) {
											cur = this.source.charCodeAt(this.pos++);
											if(cur == 109) {
												cur = this.source.charCodeAt(this.pos++);
												if(cur == 97) {
													cur = this.source.charCodeAt(this.pos++);
													if(cur == 103) {
														cur = this.source.charCodeAt(this.pos++);
														if(cur == 101) {
															cur = this.source.charCodeAt(this.pos++);
															if(cur == 73) {
																cur = this.source.charCodeAt(this.pos++);
																if(cur == 110) {
																	cur = this.source.charCodeAt(this.pos++);
																	if(cur == 100) {
																		cur = this.source.charCodeAt(this.pos++);
																		if(cur == 101) {
																			cur = this.source.charCodeAt(this.pos++);
																			if(cur == 120) {
																				cur = this.source.charCodeAt(this.pos++);
																				if(cur == 34) {
																					while(true) {
																						var _g3 = this.source.charCodeAt(this.pos++);
																						var _hx_tmp3;
																						if(_g3 == 58 == true) {
																							break;
																						} else {
																							_hx_tmp3 = _g3 < 33;
																							if(_hx_tmp3 != true) {
																								this.die("expected " + ":");
																							}
																						}
																					}
																					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																					v_pinnedImageIndex = parseInt(this.parseNumber());
																					hasv_pinnedImageIndex = true;
																					while(this.source.charCodeAt(this.pos) < 33) this.pos++;
																					var tmp2;
																					if(this.source.charCodeAt(this.pos) == 44) {
																						this.pos += 1;
																						tmp2 = true;
																					} else {
																						tmp2 = false;
																					}
																					if(!tmp2) {
																						break _hx_loop4;
																					} else {
																						continue;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					break;
				}
				if(cur != 34) {
					this.skipString();
				}
				while(true) {
					var _g4 = this.source.charCodeAt(this.pos++);
					var _hx_tmp4;
					if(_g4 == 58 == true) {
						break;
					} else {
						_hx_tmp4 = _g4 < 33;
						if(_hx_tmp4 != true) {
							this.die("expected " + ":");
						}
					}
				}
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				this.skipValue();
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				var tmp3;
				if(this.source.charCodeAt(this.pos) == 44) {
					this.pos += 1;
					tmp3 = true;
				} else {
					tmp3 = false;
				}
				if(!tmp3) {
					break;
				}
			}
			while(this.source.charCodeAt(this.pos) < 33) this.pos++;
			var tmp;
			if(this.source.charCodeAt(this.pos) == 125) {
				this.pos += 1;
				while(this.source.charCodeAt(this.pos) < 33) this.pos++;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.die("Expected " + "}");
			}
		}
		var __missing__ = function(field) {
			return _gthis.die("missing field \"" + field + "\"",__start__);
		};
		return { imageFiles : hasv_imageFiles ? v_imageFiles : __missing__("imageFiles"), imageScales : hasv_imageScales ? v_imageScales : __missing__("imageScales"), pinnedImageIndex : hasv_pinnedImageIndex ? v_pinnedImageIndex : __missing__("pinnedImageIndex")};
	}
	,parse: function(source) {
		var _gthis = this;
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		this.init(source);
		var ret = this.process0();
		var _g = 0;
		var _g1 = this.afterParsing;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		if(_gthis.afterParsing.length > 0) {
			_gthis.afterParsing = [];
		}
		return ret;
	}
	,tryParse: function(source) {
		var _gthis = this;
		return tink_core_TypedError.catchExceptions(function() {
			var ret = _gthis.parse(source);
			while(_gthis.source.charCodeAt(_gthis.pos) < 33) _gthis.pos++;
			if(_gthis.pos < _gthis.max) {
				_gthis.die("Invalid data after JSON document");
			}
			return ret;
		},null,{ fileName : "tink/json/macros/Macro.hx", lineNumber : 107, className : "tink.json.Parser9", methodName : "tryParse"});
	}
	,__class__: tink_json_Parser9
});
var tink_json_Representation = {};
tink_json_Representation.get = function(this1) {
	return this1;
};
tink_json_Representation._new = function(v) {
	return v;
};
tink_json_Representation.of = function(v) {
	return v;
};
var tink_json_Value = $hxEnums["tink.json.Value"] = { __ename__:true,__constructs__:null
	,VNumber: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"tink.json.Value",toString:$estr}; },$_._hx_name="VNumber",$_.__params__ = ["f"],$_)
	,VString: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"tink.json.Value",toString:$estr}; },$_._hx_name="VString",$_.__params__ = ["s"],$_)
	,VNull: {_hx_name:"VNull",_hx_index:2,__enum__:"tink.json.Value",toString:$estr}
	,VBool: ($_=function(b) { return {_hx_index:3,b:b,__enum__:"tink.json.Value",toString:$estr}; },$_._hx_name="VBool",$_.__params__ = ["b"],$_)
	,VArray: ($_=function(a) { return {_hx_index:4,a:a,__enum__:"tink.json.Value",toString:$estr}; },$_._hx_name="VArray",$_.__params__ = ["a"],$_)
	,VObject: ($_=function(a) { return {_hx_index:5,a:a,__enum__:"tink.json.Value",toString:$estr}; },$_._hx_name="VObject",$_.__params__ = ["a"],$_)
};
tink_json_Value.__constructs__ = [tink_json_Value.VNumber,tink_json_Value.VString,tink_json_Value.VNull,tink_json_Value.VBool,tink_json_Value.VArray,tink_json_Value.VObject];
var tink_json_Writer = function() { };
$hxClasses["tink.json.Writer"] = tink_json_Writer;
tink_json_Writer.__name__ = true;
var tink_json_BasicWriter = function() {
	this.plugins = new tink_core_Annex(this);
};
$hxClasses["tink.json.BasicWriter"] = tink_json_BasicWriter;
tink_json_BasicWriter.__name__ = true;
tink_json_BasicWriter.prototype = {
	plugins: null
	,buf: null
	,init: function() {
		this.buf = "";
	}
	,output: function(s) {
		this.buf += s;
	}
	,char: function(c) {
		this.buf += String.fromCodePoint(c);
	}
	,writeInt: function(v) {
		this.buf += v == null ? "null" : "" + v;
	}
	,writeFloat: function(v) {
		this.buf += v == null ? "null" : "" + v;
	}
	,writeBool: function(b) {
		this.buf += b ? "true" : "false";
	}
	,writeString: function(s) {
		var s1 = JSON.stringify(s);
		this.buf += s1;
	}
	,writeDynamic: function(value) {
		var s = JSON.stringify(value);
		this.buf += s;
	}
	,writeValue: function(value) {
		var _gthis = this;
		switch(value._hx_index) {
		case 0:
			var f = value.f;
			this.buf += f == null ? "null" : "" + f;
			break;
		case 1:
			var s = value.s;
			var s1 = JSON.stringify(s);
			this.buf += s1;
			break;
		case 2:
			this.buf += "null";
			break;
		case 3:
			var b = value.b;
			this.buf += b ? "true" : "false";
			break;
		case 4:
			var _g = value.a;
			if(_g.length == 0) {
				this.buf += "[]";
			} else {
				var a = _g;
				this.buf += String.fromCodePoint(91);
				this.writeValue(a[0]);
				var _g = 1;
				var _g1 = a.length;
				while(_g < _g1) {
					var i = _g++;
					this.buf += String.fromCodePoint(44);
					this.writeValue(a[i]);
				}
				this.buf += String.fromCodePoint(93);
			}
			break;
		case 5:
			var _g = value.a;
			if(_g.length == 0) {
				this.buf += "{}";
			} else {
				var a = _g;
				this.buf += String.fromCodePoint(123);
				var p = a[0];
				var s = JSON.stringify(p.name);
				_gthis.buf += s;
				_gthis.buf += String.fromCodePoint(58);
				_gthis.writeValue(p.value);
				var _g = 1;
				var _g1 = a.length;
				while(_g < _g1) {
					var i = _g++;
					this.buf += String.fromCodePoint(44);
					var p = a[i];
					var s = JSON.stringify(p.name);
					_gthis.buf += s;
					_gthis.buf += String.fromCodePoint(58);
					_gthis.writeValue(p.value);
				}
				this.buf += String.fromCodePoint(125);
			}
			break;
		}
	}
	,expandScientificNotation: function(v) {
		var _g = v.toLowerCase().split("e");
		switch(_g.length) {
		case 1:
			var d = _g[0];
			return d;
		case 2:
			var d = _g[0];
			var e = _g[1];
			var _g = d.split(".");
			switch(_g.length) {
			case 1:
				var v = _g[0];
				return v + StringTools.rpad("","0",Std.parseInt(e));
			case 2:
				var d = _g[0];
				var f = _g[1];
				return d + StringTools.rpad(f,"0",Std.parseInt(e));
			default:
				throw haxe_Exception.thrown("Invalid value");
			}
			break;
		default:
			throw haxe_Exception.thrown("Invalid value");
		}
	}
	,__class__: tink_json_BasicWriter
};
var tink_json__$Writer_StringBuf = {};
tink_json__$Writer_StringBuf._new = function() {
	return "";
};
tink_json__$Writer_StringBuf.addChar = function(this1,c) {
	this1 += String.fromCodePoint(c);
};
tink_json__$Writer_StringBuf.add = function(this1,s) {
	this1 += s;
};
var tink_json__$Writer_StdWriter = function() { };
$hxClasses["tink.json._Writer.StdWriter"] = tink_json__$Writer_StdWriter;
tink_json__$Writer_StdWriter.__name__ = true;
tink_json__$Writer_StdWriter.stringify = function(v) {
	return haxe_format_JsonPrinter.print(v);
};
var tink_json_Writer0 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer0"] = tink_json_Writer0;
tink_json_Writer0.__name__ = true;
tink_json_Writer0.__super__ = tink_json_BasicWriter;
tink_json_Writer0.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		var s = JSON.stringify(value);
		this.buf += s;
		return this.buf.toString();
	}
	,__class__: tink_json_Writer0
});
var tink_json_Writer1 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer1"] = tink_json_Writer1;
tink_json_Writer1.__name__ = true;
tink_json_Writer1.__super__ = tink_json_BasicWriter;
tink_json_Writer1.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.components;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"components\":";
		this.buf += String.fromCodePoint(91);
		var first = true;
		var h = value1.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += String.fromCodePoint(91);
			var value2 = k;
			var s = JSON.stringify(value2);
			this.buf += s;
			this.buf += String.fromCodePoint(44);
			var value3 = value1.h[k];
			var s1 = JSON.stringify(value3);
			this.buf += s1;
			this.buf += String.fromCodePoint(93);
		}
		this.buf += String.fromCodePoint(93);
		var value1 = value.files;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"files\":";
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value1.length) {
			var value2 = value1[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			var s = JSON.stringify(value2);
			this.buf += s;
		}
		this.buf += String.fromCodePoint(93);
		var value1 = value.id;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"id\":";
		var s = JSON.stringify(value1);
		this.buf += s;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.process0(value);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer1
});
var tink_json_Writer10 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer10"] = tink_json_Writer10;
tink_json_Writer10.__name__ = true;
tink_json_Writer10.__super__ = tink_json_BasicWriter;
tink_json_Writer10.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.height;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"height\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.width;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"width\":";
		this.buf += value1 == null ? "null" : "" + value1;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.process0(value);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer10
});
var tink_json_Writer11 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer11"] = tink_json_Writer11;
tink_json_Writer11.__name__ = true;
tink_json_Writer11.__super__ = tink_json_BasicWriter;
tink_json_Writer11.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value.length) {
			var value1 = value[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			var s = JSON.stringify(value1);
			this.buf += s;
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer11
});
var tink_json_Writer12 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer12"] = tink_json_Writer12;
tink_json_Writer12.__name__ = true;
tink_json_Writer12.__super__ = tink_json_BasicWriter;
tink_json_Writer12.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += value == null ? "null" : "" + value;
		return this.buf.toString();
	}
	,__class__: tink_json_Writer12
});
var tink_json_Writer13 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer13"] = tink_json_Writer13;
tink_json_Writer13.__name__ = true;
tink_json_Writer13.__super__ = tink_json_BasicWriter;
tink_json_Writer13.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value.length) {
			var value1 = value[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			var s = JSON.stringify(value1);
			this.buf += s;
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer13
});
var tink_json_Writer14 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer14"] = tink_json_Writer14;
tink_json_Writer14.__name__ = true;
tink_json_Writer14.__super__ = tink_json_BasicWriter;
tink_json_Writer14.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var h = value.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += String.fromCodePoint(91);
			var value1 = k;
			var s = JSON.stringify(value1);
			this.buf += s;
			this.buf += String.fromCodePoint(44);
			var value2 = value.h[k];
			this.buf += value2 == null ? "null" : "" + value2;
			this.buf += String.fromCodePoint(93);
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer14
});
var tink_json_Writer15 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer15"] = tink_json_Writer15;
tink_json_Writer15.__name__ = true;
tink_json_Writer15.__super__ = tink_json_BasicWriter;
tink_json_Writer15.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.accounts;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"accounts\":";
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value1.length) {
			var value2 = value1[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += value2 == null ? "null" : "" + value2;
		}
		this.buf += String.fromCodePoint(93);
		var value1 = value.energy;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"energy\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.hope;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"hope\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.monthlyExpenses;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"monthlyExpenses\":";
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value1.length) {
			var value2 = value1[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += value2 == null ? "null" : "" + value2;
		}
		this.buf += String.fromCodePoint(93);
		var value1 = value.note;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"note\":";
		var s = JSON.stringify(value1);
		this.buf += s;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.process0(value);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer15
});
var tink_json_Writer16 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer16"] = tink_json_Writer16;
tink_json_Writer16.__name__ = true;
tink_json_Writer16.__super__ = tink_json_BasicWriter;
tink_json_Writer16.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var h = value.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += String.fromCodePoint(91);
			var value1 = k;
			var s = JSON.stringify(value1);
			this.buf += s;
			this.buf += String.fromCodePoint(44);
			var value2 = value.h[k];
			var v = value2.getTime();
			this.buf += v == null ? "null" : "" + v;
			this.buf += String.fromCodePoint(93);
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer16
});
var tink_json_Writer2 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer2"] = tink_json_Writer2;
tink_json_Writer2.__name__ = true;
tink_json_Writer2.__super__ = tink_json_BasicWriter;
tink_json_Writer2.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var h = value.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += String.fromCodePoint(91);
			var value1 = k;
			var s = JSON.stringify(value1);
			this.buf += s;
			this.buf += String.fromCodePoint(44);
			var value2 = value.h[k];
			this.buf += String.fromCodePoint(91);
			var first1 = true;
			var _g = 0;
			while(_g < value2.length) {
				var value3 = value2[_g];
				++_g;
				if(first1) {
					first1 = false;
				} else {
					this.buf += String.fromCodePoint(44);
				}
				var s1 = JSON.stringify(value3);
				this.buf += s1;
			}
			this.buf += String.fromCodePoint(93);
			this.buf += String.fromCodePoint(93);
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer2
});
var tink_json_Writer3 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer3"] = tink_json_Writer3;
tink_json_Writer3.__name__ = true;
tink_json_Writer3.__super__ = tink_json_BasicWriter;
tink_json_Writer3.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var h = value.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += String.fromCodePoint(91);
			var value1 = k;
			var s = JSON.stringify(value1);
			this.buf += s;
			this.buf += String.fromCodePoint(44);
			var value2 = value.h[k];
			var s1 = JSON.stringify(value2);
			this.buf += s1;
			this.buf += String.fromCodePoint(93);
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer3
});
var tink_json_Writer4 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer4"] = tink_json_Writer4;
tink_json_Writer4.__name__ = true;
tink_json_Writer4.__super__ = tink_json_BasicWriter;
tink_json_Writer4.prototype = $extend(tink_json_BasicWriter.prototype,{
	write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var h = value.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += String.fromCodePoint(91);
			var value1 = k;
			var s = JSON.stringify(value1);
			this.buf += s;
			this.buf += String.fromCodePoint(44);
			var value2 = value.h[k];
			this.buf += value2 == null ? "null" : "" + value2;
			this.buf += String.fromCodePoint(93);
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer4
});
var tink_json_Writer5 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer5"] = tink_json_Writer5;
tink_json_Writer5.__name__ = true;
tink_json_Writer5.__super__ = tink_json_BasicWriter;
tink_json_Writer5.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.imageFiles;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"imageFiles\":";
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value1.length) {
			var value2 = value1[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			var s = JSON.stringify(value2);
			this.buf += s;
		}
		this.buf += String.fromCodePoint(93);
		var value1 = value.imageScales;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"imageScales\":";
		this.buf += String.fromCodePoint(91);
		var first = true;
		var _g = 0;
		while(_g < value1.length) {
			var value2 = value1[_g];
			++_g;
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += value2 == null ? "null" : "" + value2;
		}
		this.buf += String.fromCodePoint(93);
		var value1 = value.pinnedImageIndex;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"pinnedImageIndex\":";
		this.buf += value1 == null ? "null" : "" + value1;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.process0(value);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer5
});
var tink_json_Writer6 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer6"] = tink_json_Writer6;
tink_json_Writer6.__name__ = true;
tink_json_Writer6.__super__ = tink_json_BasicWriter;
tink_json_Writer6.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.a;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"a\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.b;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"b\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.g;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"g\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.r;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"r\":";
		this.buf += value1 == null ? "null" : "" + value1;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.process0(value);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer6
});
var tink_json_Writer7 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer7"] = tink_json_Writer7;
tink_json_Writer7.__name__ = true;
tink_json_Writer7.__super__ = tink_json_BasicWriter;
tink_json_Writer7.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.a;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"a\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.b;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"b\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.g;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"g\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.r;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"r\":";
		this.buf += value1 == null ? "null" : "" + value1;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.process0(value);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer7
});
var tink_json_Writer8 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer8"] = tink_json_Writer8;
tink_json_Writer8.__name__ = true;
tink_json_Writer8.__super__ = tink_json_BasicWriter;
tink_json_Writer8.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.x;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"x\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.y;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"y\":";
		this.buf += value1 == null ? "null" : "" + value1;
		var value1 = value.z;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"z\":";
		this.buf += value1 == null ? "null" : "" + value1;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.buf += String.fromCodePoint(91);
		var first = true;
		var h = value.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(first) {
				first = false;
			} else {
				this.buf += String.fromCodePoint(44);
			}
			this.buf += String.fromCodePoint(91);
			var value1 = k;
			var s = JSON.stringify(value1);
			this.buf += s;
			this.buf += String.fromCodePoint(44);
			var value2 = value.h[k];
			this.process0(value2);
			this.buf += String.fromCodePoint(93);
		}
		this.buf += String.fromCodePoint(93);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer8
});
var tink_json_Writer9 = function() {
	tink_json_BasicWriter.call(this);
};
$hxClasses["tink.json.Writer9"] = tink_json_Writer9;
tink_json_Writer9.__name__ = true;
tink_json_Writer9.__super__ = tink_json_BasicWriter;
tink_json_Writer9.prototype = $extend(tink_json_BasicWriter.prototype,{
	process0: function(value) {
		var __first = true;
		this.buf += String.fromCodePoint(123);
		var value1 = value.radius;
		if(__first) {
			__first = false;
		} else {
			this.buf += String.fromCodePoint(44);
		}
		this.buf += "\"radius\":";
		this.buf += value1 == null ? "null" : "" + value1;
		this.buf += String.fromCodePoint(125);
	}
	,write: function(value) {
		this.init();
		this.process0(value);
		return this.buf.toString();
	}
	,__class__: tink_json_Writer9
});
var uuid_Uuid = function() { };
$hxClasses["uuid.Uuid"] = uuid_Uuid;
uuid_Uuid.__name__ = true;
uuid_Uuid.splitmix64_seed = function(index) {
	var b_high = -1640531527;
	var b_low = 2135587861;
	var high = index.high + b_high | 0;
	var low = index.low + b_low | 0;
	if(haxe_Int32.ucompare(low,index.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var result = new haxe__$Int64__$_$_$Int64(high,low);
	var b = 30;
	b &= 63;
	var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(result.high,result.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(result.high >> b,result.high << 32 - b | result.low >>> b) : new haxe__$Int64__$_$_$Int64(result.high >> 31,result.high >> b - 32);
	var a_high = result.high ^ b1.high;
	var a_low = result.low ^ b1.low;
	var b_high = -1084733587;
	var b_low = 484763065;
	var mask = 65535;
	var al = a_low & mask;
	var ah = a_low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low,b_high) + haxe_Int32._mul(a_high,b_low) | 0) | 0;
	result = new haxe__$Int64__$_$_$Int64(high,low);
	var b = 27;
	b &= 63;
	var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(result.high,result.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(result.high >> b,result.high << 32 - b | result.low >>> b) : new haxe__$Int64__$_$_$Int64(result.high >> 31,result.high >> b - 32);
	var a_high = result.high ^ b1.high;
	var a_low = result.low ^ b1.low;
	var b_high = -1798288965;
	var b_low = 321982955;
	var mask = 65535;
	var al = a_low & mask;
	var ah = a_low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low,b_high) + haxe_Int32._mul(a_high,b_low) | 0) | 0;
	result = new haxe__$Int64__$_$_$Int64(high,low);
	var b = 31;
	b &= 63;
	var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(result.high,result.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(result.high >> b,result.high << 32 - b | result.low >>> b) : new haxe__$Int64__$_$_$Int64(result.high >> 31,result.high >> b - 32);
	return new haxe__$Int64__$_$_$Int64(result.high ^ b1.high,result.low ^ b1.low);
};
uuid_Uuid.randomFromRange = function(min,max) {
	var s1 = uuid_Uuid.state0;
	var s0 = uuid_Uuid.state1;
	uuid_Uuid.state0 = s0;
	var b = 23;
	b &= 63;
	var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(s1.high,s1.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(s1.high << b | s1.low >>> 32 - b,s1.low << b) : new haxe__$Int64__$_$_$Int64(s1.low << b - 32,0);
	s1 = new haxe__$Int64__$_$_$Int64(s1.high ^ b1.high,s1.low ^ b1.low);
	var a_high = s1.high ^ s0.high;
	var a_low = s1.low ^ s0.low;
	var b = 18;
	b &= 63;
	var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(s1.high,s1.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(s1.high >>> b,s1.high << 32 - b | s1.low >>> b) : new haxe__$Int64__$_$_$Int64(0,s1.high >>> b - 32);
	var a_high1 = a_high ^ b1.high;
	var a_low1 = a_low ^ b1.low;
	var b = 5;
	b &= 63;
	var b1 = b == 0 ? new haxe__$Int64__$_$_$Int64(s0.high,s0.low) : b < 32 ? new haxe__$Int64__$_$_$Int64(s0.high >>> b,s0.high << 32 - b | s0.low >>> b) : new haxe__$Int64__$_$_$Int64(0,s0.high >>> b - 32);
	uuid_Uuid.state1 = new haxe__$Int64__$_$_$Int64(a_high1 ^ b1.high,a_low1 ^ b1.low);
	var a = uuid_Uuid.state1;
	var high = a.high + s0.high | 0;
	var low = a.low + s0.low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var x = max - min + 1;
	var result = haxe_Int64.divMod(new haxe__$Int64__$_$_$Int64(high,low),new haxe__$Int64__$_$_$Int64(x >> 31,x)).modulus.low;
	if(result < 0) {
		result = -result;
	}
	return result + min;
};
uuid_Uuid.randomByte = function() {
	return uuid_Uuid.randomFromRange(0,255);
};
uuid_Uuid.fromShort = function(shortUuid,separator,fromAlphabet) {
	if(fromAlphabet == null) {
		fromAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	var uuid = uuid_Uuid.convert(shortUuid,fromAlphabet,"0123456789abcdef");
	return uuid_Uuid.hexToUuid(uuid,separator);
};
uuid_Uuid.toShort = function(uuid,separator,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	uuid = StringTools.replace(uuid,separator,"").toLowerCase();
	return uuid_Uuid.convert(uuid,"0123456789abcdef",toAlphabet);
};
uuid_Uuid.fromNano = function(nanoUuid,separator,fromAlphabet) {
	if(fromAlphabet == null) {
		fromAlphabet = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	var uuid = uuid_Uuid.convert(nanoUuid,fromAlphabet,"0123456789abcdef");
	return uuid_Uuid.hexToUuid(uuid,separator);
};
uuid_Uuid.toNano = function(uuid,separator,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	}
	if(separator == null) {
		separator = "-";
	}
	uuid = StringTools.replace(uuid,separator,"").toLowerCase();
	return uuid_Uuid.convert(uuid,"0123456789abcdef",toAlphabet);
};
uuid_Uuid.v1 = function(node,optClockSequence,msecs,optNsecs,randomFunc,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(optNsecs == null) {
		optNsecs = -1;
	}
	if(msecs == null) {
		msecs = -1;
	}
	if(optClockSequence == null) {
		optClockSequence = -1;
	}
	if(randomFunc == null) {
		randomFunc = uuid_Uuid.randomByte;
	}
	var buffer = new haxe_io_Bytes(new ArrayBuffer(16));
	if(node == null) {
		node = new haxe_io_Bytes(new ArrayBuffer(6));
		var v = randomFunc();
		node.b[0] = v;
		var v = randomFunc();
		node.b[1] = v;
		var v = randomFunc();
		node.b[2] = v;
		var v = randomFunc();
		node.b[3] = v;
		var v = randomFunc();
		node.b[4] = v;
		var v = randomFunc();
		node.b[5] = v;
		node.b[0] |= 1;
	}
	if(uuid_Uuid.clockSequenceBuffer == -1) {
		uuid_Uuid.clockSequenceBuffer = (randomFunc() << 8 | randomFunc()) & 16383;
	}
	var clockSeq = optClockSequence;
	if(optClockSequence == -1) {
		clockSeq = uuid_Uuid.clockSequenceBuffer;
	}
	if(msecs == -1) {
		msecs = Math.round(Date.now());
	}
	var nsecs = optNsecs;
	if(optNsecs == -1) {
		nsecs = uuid_Uuid.lastNSecs + 1;
	}
	var dt = msecs - uuid_Uuid.lastMSecs + (nsecs - uuid_Uuid.lastNSecs) / 10000;
	if(dt < 0 && optClockSequence == -1) {
		clockSeq = clockSeq + 1 & 16383;
	}
	if((dt < 0 || msecs > uuid_Uuid.lastMSecs) && optNsecs == -1) {
		nsecs = 0;
	}
	if(nsecs >= 10000) {
		throw haxe_Exception.thrown("Can't create more than 10M uuids/sec");
	}
	uuid_Uuid.lastMSecs = msecs;
	uuid_Uuid.lastNSecs = nsecs;
	uuid_Uuid.clockSequenceBuffer = clockSeq;
	msecs += 12219292800000;
	var imsecs = haxe_Int64Helper.fromFloat(msecs);
	var b_high = 0;
	var b_low = 268435455;
	var a_high = imsecs.high & b_high;
	var a_low = imsecs.low & b_low;
	var b_high = 0;
	var b_low = 10000;
	var mask = 65535;
	var al = a_low & mask;
	var ah = a_low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a_low,b_high) + haxe_Int32._mul(a_high,b_low) | 0) | 0;
	var a_high = high;
	var a_low = low;
	var b_high = nsecs >> 31;
	var b_low = nsecs;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var tl = haxe_Int64.divMod(new haxe__$Int64__$_$_$Int64(high,low),uuid_Uuid.DVS).modulus.low;
	buffer.b[0] = tl >>> 24 & 255;
	buffer.b[1] = tl >>> 16 & 255;
	buffer.b[2] = tl >>> 8 & 255;
	buffer.b[3] = tl & 255;
	var a = haxe_Int64.divMod(imsecs,uuid_Uuid.DVS).quotient;
	var b_high = 0;
	var b_low = 10000;
	var mask = 65535;
	var al = a.low & mask;
	var ah = a.low >>> 16;
	var bl = b_low & mask;
	var bh = b_low >>> 16;
	var p00 = haxe_Int32._mul(al,bl);
	var p10 = haxe_Int32._mul(ah,bl);
	var p01 = haxe_Int32._mul(al,bh);
	var p11 = haxe_Int32._mul(ah,bh);
	var low = p00;
	var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
	p01 <<= 16;
	low = low + p01 | 0;
	if(haxe_Int32.ucompare(low,p01) < 0) {
		var ret = high++;
		high = high | 0;
	}
	p10 <<= 16;
	low = low + p10 | 0;
	if(haxe_Int32.ucompare(low,p10) < 0) {
		var ret = high++;
		high = high | 0;
	}
	high = high + (haxe_Int32._mul(a.low,b_high) + haxe_Int32._mul(a.high,b_low) | 0) | 0;
	var a_high = high;
	var a_low = low;
	var b_high = 0;
	var b_low = 268435455;
	var this_high = a_high & b_high;
	var this_low = a_low & b_low;
	var tmh = this_low;
	buffer.b[4] = tmh >>> 8 & 255;
	buffer.b[5] = tmh & 255;
	buffer.b[6] = tmh >>> 24 & 15 | 16;
	buffer.b[7] = tmh >>> 16 & 255;
	buffer.b[8] = clockSeq >>> 8 | 128;
	buffer.b[9] = clockSeq & 255;
	buffer.b[10] = node.b[0];
	buffer.b[11] = node.b[1];
	buffer.b[12] = node.b[2];
	buffer.b[13] = node.b[3];
	buffer.b[14] = node.b[4];
	buffer.b[15] = node.b[5];
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.v3 = function(name,namespace,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(namespace == null) {
		namespace = "";
	}
	namespace = StringTools.replace(namespace,"-","");
	var buffer = haxe_crypto_Md5.make(haxe_io_Bytes.ofHex(namespace + haxe_io_Bytes.ofString(name).toHex()));
	buffer.b[6] = buffer.b[6] & 15 | 48;
	buffer.b[8] = buffer.b[8] & 63 | 128;
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.v4 = function(randBytes,randomFunc,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(randomFunc == null) {
		randomFunc = uuid_Uuid.randomByte;
	}
	var buffer = randBytes;
	if(buffer == null) {
		buffer = new haxe_io_Bytes(new ArrayBuffer(16));
		var v = randomFunc();
		buffer.b[0] = v;
		var v = randomFunc();
		buffer.b[1] = v;
		var v = randomFunc();
		buffer.b[2] = v;
		var v = randomFunc();
		buffer.b[3] = v;
		var v = randomFunc();
		buffer.b[4] = v;
		var v = randomFunc();
		buffer.b[5] = v;
		var v = randomFunc();
		buffer.b[6] = v;
		var v = randomFunc();
		buffer.b[7] = v;
		var v = randomFunc();
		buffer.b[8] = v;
		var v = randomFunc();
		buffer.b[9] = v;
		var v = randomFunc();
		buffer.b[10] = v;
		var v = randomFunc();
		buffer.b[11] = v;
		var v = randomFunc();
		buffer.b[12] = v;
		var v = randomFunc();
		buffer.b[13] = v;
		var v = randomFunc();
		buffer.b[14] = v;
		var v = randomFunc();
		buffer.b[15] = v;
	} else if(buffer.length < 16) {
		throw haxe_Exception.thrown("Random bytes should be at least 16 bytes");
	}
	buffer.b[6] = buffer.b[6] & 15 | 64;
	buffer.b[8] = buffer.b[8] & 63 | 128;
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.v5 = function(name,namespace,separator,shortUuid,toAlphabet) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	if(shortUuid == null) {
		shortUuid = false;
	}
	if(separator == null) {
		separator = "-";
	}
	if(namespace == null) {
		namespace = "";
	}
	namespace = StringTools.replace(namespace,"-","");
	var buffer = haxe_crypto_Sha1.make(haxe_io_Bytes.ofHex(namespace + haxe_io_Bytes.ofString(name).toHex()));
	buffer.b[6] = buffer.b[6] & 15 | 80;
	buffer.b[8] = buffer.b[8] & 63 | 128;
	var uuid = uuid_Uuid.stringify(buffer,separator);
	if(shortUuid) {
		uuid = uuid_Uuid.toShort(uuid,separator,toAlphabet);
	}
	return uuid;
};
uuid_Uuid.stringify = function(data,separator) {
	if(separator == null) {
		separator = "-";
	}
	return uuid_Uuid.hexToUuid(data.toHex(),separator);
};
uuid_Uuid.parse = function(uuid,separator) {
	if(separator == null) {
		separator = "-";
	}
	return haxe_io_Bytes.ofHex(StringTools.replace(uuid,separator,""));
};
uuid_Uuid.validate = function(uuid,separator) {
	if(separator == null) {
		separator = "-";
	}
	if(separator == "") {
		uuid = HxOverrides.substr(uuid,0,8) + "-" + HxOverrides.substr(uuid,8,4) + "-" + HxOverrides.substr(uuid,12,4) + "-" + HxOverrides.substr(uuid,16,4) + "-" + HxOverrides.substr(uuid,20,12);
	} else if(separator != "-") {
		uuid = StringTools.replace(uuid,separator,"-");
	}
	return uuid_Uuid.regexp.match(uuid);
};
uuid_Uuid.version = function(uuid,separator) {
	if(separator == null) {
		separator = "-";
	}
	uuid = StringTools.replace(uuid,separator,"");
	return Std.parseInt("0x" + HxOverrides.substr(uuid,12,1));
};
uuid_Uuid.hexToUuid = function(hex,separator) {
	return HxOverrides.substr(hex,0,8) + separator + HxOverrides.substr(hex,8,4) + separator + HxOverrides.substr(hex,12,4) + separator + HxOverrides.substr(hex,16,4) + separator + HxOverrides.substr(hex,20,12);
};
uuid_Uuid.convert = function(number,fromAlphabet,toAlphabet) {
	var fromBase = fromAlphabet.length;
	var toBase = toAlphabet.length;
	var len = number.length;
	var buf = "";
	var numberMap = new Array(len);
	var divide = 0;
	var newlen = 0;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		numberMap[i] = fromAlphabet.indexOf(number.charAt(i));
	}
	do {
		divide = 0;
		newlen = 0;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			divide = divide * fromBase + numberMap[i];
			if(divide >= toBase) {
				numberMap[newlen++] = Math.floor(divide / toBase);
				divide %= toBase;
			} else if(newlen > 0) {
				numberMap[newlen++] = 0;
			}
		}
		len = newlen;
		buf = toAlphabet.charAt(divide) + buf;
	} while(newlen != 0);
	return buf;
};
uuid_Uuid.nanoId = function(len,alphabet,randomFunc) {
	if(alphabet == null) {
		alphabet = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	}
	if(len == null) {
		len = 21;
	}
	if(randomFunc == null) {
		randomFunc = uuid_Uuid.randomByte;
	}
	if(alphabet == null) {
		throw haxe_Exception.thrown("Alphabet cannot be null");
	}
	if(alphabet.length == 0 || alphabet.length >= 256) {
		throw haxe_Exception.thrown("Alphabet must contain between 1 and 255 symbols");
	}
	if(len <= 0) {
		throw haxe_Exception.thrown("Length must be greater than zero");
	}
	var mask = (2 << Math.floor(Math.log(alphabet.length - 1) / Math.log(2))) - 1;
	var step = Math.ceil(1.6 * mask * len / alphabet.length);
	var sb_b = "";
	while(sb_b.length != len) {
		var _g = 0;
		var _g1 = step;
		while(_g < _g1) {
			var i = _g++;
			var rnd = randomFunc();
			var aIndex = rnd & mask;
			if(aIndex < alphabet.length) {
				sb_b += Std.string(alphabet.charAt(aIndex));
				if(sb_b.length == len) {
					break;
				}
			}
		}
	}
	return sb_b;
};
uuid_Uuid.short = function(toAlphabet,randomFunc) {
	if(toAlphabet == null) {
		toAlphabet = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
	}
	return uuid_Uuid.v4(null,randomFunc,null,true,toAlphabet);
};
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
Object.defineProperty(String.prototype,"__class__",{ value : $hxClasses["String"] = String, enumerable : false, writable : true});
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
js_Boot.__toStr = ({ }).toString;
haxe_Int32._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
hscript_Parser.p1 = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
hx_strings_Char.CHAR_CASE_MAPPER = new hx_strings__$Char_CharCaseMapper();
hx_strings_Char.BACKSPACE = 8;
hx_strings_Char.TAB = 9;
hx_strings_Char.LF = 10;
hx_strings_Char.CR = 13;
hx_strings_Char.ESC = 27;
hx_strings_Char.SPACE = 32;
hx_strings_Char.EXCLAMATION_MARK = 33;
hx_strings_Char.DOUBLE_QUOTE = 34;
hx_strings_Char.HASH = 35;
hx_strings_Char.DOLLAR = 36;
hx_strings_Char.AMPERSAND = 38;
hx_strings_Char.SINGLE_QUOTE = 39;
hx_strings_Char.BRACKET_ROUND_LEFT = 40;
hx_strings_Char.BRACKET_ROUND_RIGHT = 41;
hx_strings_Char.ASTERISK = 42;
hx_strings_Char.PLUS = 43;
hx_strings_Char.COMMA = 44;
hx_strings_Char.MINUS = 45;
hx_strings_Char.DOT = 46;
hx_strings_Char.SLASH = 47;
hx_strings_Char.ZERO = 48;
hx_strings_Char.ONE = 49;
hx_strings_Char.TWO = 50;
hx_strings_Char.TRHEE = 51;
hx_strings_Char.FOUR = 52;
hx_strings_Char.FIVE = 53;
hx_strings_Char.SIX = 54;
hx_strings_Char.SEVEN = 55;
hx_strings_Char.EIGHT = 56;
hx_strings_Char.NINE = 57;
hx_strings_Char.COLON = 58;
hx_strings_Char.SEMICOLON = 59;
hx_strings_Char.LOWER_THAN = 60;
hx_strings_Char.EQUALS = 61;
hx_strings_Char.GREATER_THAN = 62;
hx_strings_Char.QUESTION_MARK = 63;
hx_strings_Char.BRACKET_SQUARE_LEFT = 91;
hx_strings_Char.BACKSLASH = 92;
hx_strings_Char.BRACKET_SQUARE_RIGHT = 93;
hx_strings_Char.CARET = 94;
hx_strings_Char.UNDERSCORE = 95;
hx_strings_Char.BRACKET_CURLY_LEFT = 123;
hx_strings_Char.PIPE = 124;
hx_strings_Char.BRACKET_CURLY_RIGHT = 125;
hx_strings__$CharIterator_NullCharIterator.INSTANCE = new hx_strings__$CharIterator_NullCharIterator();
hx_strings_Pattern.__meta__ = { obj : { immutable : null, threadSafe : null}};
hx_strings_Matcher.__meta__ = { obj : { notThreadSafe : null}};
hx_strings_StringBuilder.__meta__ = { obj : { notThreadSafe : null}};
hx_strings_internal_OS.isNodeJS = (typeof process !== 'undefined') && (typeof process.release !== 'undefined') && (process.release.name === 'node');
hx_strings_internal_OS.isWindows = (function($this) {
	var $r;
	var os = hx_strings_internal_OS.isNodeJS ? process.platform : $global.navigator.platform;
	$r = new EReg("win","i").match(os);
	return $r;
}(this));
hx_strings_Strings.REGEX_ANSI_ESC = hx_strings_Pattern.compile(String.fromCodePoint(27) + "\\[[;\\d]*m",hx_strings_internal__$Either3__$Either3.b("g"));
hx_strings_Strings.REGEX_HTML_UNESCAPE = hx_strings_Pattern.compile("&(#\\d+|amp|nbsp|apos|lt|gt|quot);",hx_strings_internal__$Either3__$Either3.b("g"));
hx_strings_Strings.REGEX_SPLIT_LINES = hx_strings_Pattern.compile("\\r?\\n",hx_strings_internal__$Either3__$Either3.b("g"));
hx_strings_Strings.REGEX_REMOVE_XML_TAGS = hx_strings_Pattern.compile("<[!a-zA-Z\\/][^>]*>",hx_strings_internal__$Either3__$Either3.b("g"));
hx_strings_Strings.POS_NOT_FOUND = -1;
hx_strings_Strings.NEW_LINE_NIX = "\n";
hx_strings_Strings.NEW_LINE_WIN = "\r\n";
hx_strings_Strings.NEW_LINE = hx_strings_internal_OS.isWindows ? "\r\n" : "\n";
kiss_FuzzyMapTools.serializingMaps = new haxe_ds_ObjectMap();
kiss_FuzzyMapTools.threshold = 0.4;
kiss_Prelude.and = Reflect.makeVarArgs(kiss_Prelude._and);
kiss_Prelude.or = Reflect.makeVarArgs(kiss_Prelude._or);
kiss_Prelude.add = kiss_Prelude.makeVarArgsWithArrayCheck(kiss_Prelude._add,"+");
kiss_Prelude.subtract = kiss_Prelude.makeVarArgsWithArrayCheck(kiss_Prelude._subtract,"-");
kiss_Prelude.multiply = kiss_Prelude.makeVarArgsWithArrayCheck(kiss_Prelude._multiply,"*");
kiss_Prelude.divide = kiss_Prelude.makeVarArgsWithArrayCheck(kiss_Prelude._divide,"/");
kiss_Prelude.min = kiss_Prelude.makeVarArgsWithArrayCheck(kiss_Prelude._min,"min");
kiss_Prelude.max = kiss_Prelude.makeVarArgsWithArrayCheck(kiss_Prelude._max,"max");
kiss_Prelude.greaterThan = (function($this) {
	var $r;
	var op = ">";
	$r = kiss_Prelude.makeVarArgsWithArrayCheck(function(values) {
		return kiss_Prelude._comparison(op,values);
	},">");
	return $r;
}(this));
kiss_Prelude.greaterEqual = (function($this) {
	var $r;
	var op = ">=";
	$r = kiss_Prelude.makeVarArgsWithArrayCheck(function(values) {
		return kiss_Prelude._comparison(op,values);
	},">=");
	return $r;
}(this));
kiss_Prelude.lessThan = (function($this) {
	var $r;
	var op = "<";
	$r = kiss_Prelude.makeVarArgsWithArrayCheck(function(values) {
		return kiss_Prelude._comparison(op,values);
	},"<");
	return $r;
}(this));
kiss_Prelude.lesserEqual = (function($this) {
	var $r;
	var op = "<=";
	$r = kiss_Prelude.makeVarArgsWithArrayCheck(function(values) {
		return kiss_Prelude._comparison(op,values);
	},"<=");
	return $r;
}(this));
kiss_Prelude.areEqual = (function($this) {
	var $r;
	var op = "==";
	$r = kiss_Prelude.makeVarArgsWithArrayCheck(function(values) {
		return kiss_Prelude._comparison(op,values);
	},"=");
	return $r;
}(this));
kiss_Prelude.iHalf = (function($this) {
	var $r;
	var denom = 2;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iThird = (function($this) {
	var $r;
	var denom = 3;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iFourth = (function($this) {
	var $r;
	var denom = 4;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iFifth = (function($this) {
	var $r;
	var denom = 5;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iSixth = (function($this) {
	var $r;
	var denom = 6;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iSeventh = (function($this) {
	var $r;
	var denom = 7;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iEighth = (function($this) {
	var $r;
	var denom = 8;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iNinth = (function($this) {
	var $r;
	var denom = 9;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.iTenth = (function($this) {
	var $r;
	var denom = 10;
	$r = function(num) {
		return kiss_Prelude.iFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fHalf = (function($this) {
	var $r;
	var denom = 2;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fThird = (function($this) {
	var $r;
	var denom = 3;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fFourth = (function($this) {
	var $r;
	var denom = 4;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fFifth = (function($this) {
	var $r;
	var denom = 5;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fSixth = (function($this) {
	var $r;
	var denom = 6;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fSeventh = (function($this) {
	var $r;
	var denom = 7;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fEighth = (function($this) {
	var $r;
	var denom = 8;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fNinth = (function($this) {
	var $r;
	var denom = 9;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.fTenth = (function($this) {
	var $r;
	var denom = 10;
	$r = function(num) {
		return kiss_Prelude.fFraction(num,denom);
	};
	return $r;
}(this));
kiss_Prelude.concat = Reflect.makeVarArgs(kiss_Prelude._concat);
kiss_Prelude.zipKeep = (function($this) {
	var $r;
	var extraHandling = kiss_ExtraElementHandling.Keep;
	$r = Reflect.makeVarArgs(function(iterables) {
		return kiss_Prelude._zip(iterables,extraHandling);
	});
	return $r;
}(this));
kiss_Prelude.zipDrop = (function($this) {
	var $r;
	var extraHandling = kiss_ExtraElementHandling.Drop;
	$r = Reflect.makeVarArgs(function(iterables) {
		return kiss_Prelude._zip(iterables,extraHandling);
	});
	return $r;
}(this));
kiss_Prelude.zipThrow = (function($this) {
	var $r;
	var extraHandling = kiss_ExtraElementHandling.Throw;
	$r = Reflect.makeVarArgs(function(iterables) {
		return kiss_Prelude._zip(iterables,extraHandling);
	});
	return $r;
}(this));
kiss_Prelude.intersect = Reflect.makeVarArgs(kiss_Prelude._intersect);
kiss_Prelude.joinPath = Reflect.makeVarArgs(kiss_Prelude._joinPath);
kiss_Prelude.externLogFile = "externLog.txt";
kiss_Prelude.printStr = kiss_Prelude._printStr;
kiss_Prelude.cachedConvertToHScript = kiss_Prelude.fsMemoize(kiss_Prelude.convertToHScript,"convertToHScript","" + kiss_Prelude.userHome() + "/.kiss-cache");
kiss_Prelude.shellCount = 0;
kiss_Prelude.newLine = "\n";
kiss_Prelude.backSlash = "\\";
kiss_Prelude.doubleQuote = "\"";
kiss_Prelude.dollar = "$";
nat_ArchiveController.commandNames = [];
nat_systems_MediaWikiSystem.headers = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["User-Agent"] = "NatArchiveTool/0.0.0 (https://github.com/NQNStudios/kisslang/tree/main/projects/nat-archive-tool; natquaylenelson@gmail.com) Requests/2.26.0";
	$r = _g;
	return $r;
}(this));
sys_io_File.copyBuf = js_node_buffer_Buffer.alloc(65536);
tink_core_Callback.depth = 0;
tink_core_Callback.MAX_DEPTH = 500;
tink_core_AlreadyDisposed.INST = new tink_core_AlreadyDisposed();
tink_core_Future.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(null));
tink_core_Future.NEVER_INST = new tink_core__$Future_FutureObject();
tink_core_Future.NEVER = tink_core_Future.NEVER_INST;
tink_core_Lazy.NOISE = new tink_core__$Lazy_LazyConst(null);
tink_core_Lazy.NULL = tink_core_Lazy.NOISE;
tink_core_Noise.Noise = null;
tink_core_ProgressValue.ZERO = new tink_core_MPair(0,haxe_ds_Option.None);
tink_core_Progress.INIT = tink_core_ProgressValue.ZERO;
tink_core_Promise.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
tink_core_Promise.NEVER = tink_core_Promise.never();
tink_core__$Signal_Disposed.INST = new tink_core__$Signal_Disposed();
tink_json_JsonString.BACKSLASH = "\\";
tink_json_BasicParser.DBQT = String.fromCodePoint(34);
uuid_Uuid.DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.ISO_OID = "6ba7b812-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.X500_DN = "6ba7b814-9dad-11d1-80b4-00c04fd430c8";
uuid_Uuid.NIL = "00000000-0000-0000-0000-000000000000";
uuid_Uuid.LOWERCASE_BASE26 = "abcdefghijklmnopqrstuvwxyz";
uuid_Uuid.UPPERCASE_BASE26 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
uuid_Uuid.NO_LOOK_ALIKES_BASE51 = "2346789ABCDEFGHJKLMNPQRTUVWXYZabcdefghijkmnpqrtwxyz";
uuid_Uuid.FLICKR_BASE58 = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ";
uuid_Uuid.BASE_70 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-+!@#$^";
uuid_Uuid.BASE_85 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#";
uuid_Uuid.COOKIE_BASE90 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+-./:<=>?@[]^_`{|}~";
uuid_Uuid.NANO_ID_ALPHABET = "_-0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
uuid_Uuid.NUMBERS_BIN = "01";
uuid_Uuid.NUMBERS_OCT = "01234567";
uuid_Uuid.NUMBERS_DEC = "0123456789";
uuid_Uuid.NUMBERS_HEX = "0123456789abcdef";
uuid_Uuid.lastMSecs = 0;
uuid_Uuid.lastNSecs = 0;
uuid_Uuid.clockSequenceBuffer = -1;
uuid_Uuid.regexp = new EReg("^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$","i");
uuid_Uuid.rndSeed = haxe_Int64Helper.fromFloat(Date.now());
uuid_Uuid.state0 = uuid_Uuid.splitmix64_seed(uuid_Uuid.rndSeed);
uuid_Uuid.state1 = (function($this) {
	var $r;
	var a = uuid_Uuid.rndSeed;
	var x = Std.random(10000);
	var b_high = x >> 31;
	var b_low = x;
	var high = a.high + b_high | 0;
	var low = a.low + b_low | 0;
	if(haxe_Int32.ucompare(low,a.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var a_high = high;
	var a_low = low;
	var b_high = 0;
	var b_low = 1;
	var high = a_high + b_high | 0;
	var low = a_low + b_low | 0;
	if(haxe_Int32.ucompare(low,a_low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	$r = uuid_Uuid.splitmix64_seed(new haxe__$Int64__$_$_$Int64(high,low));
	return $r;
}(this));
uuid_Uuid.DVS = new haxe__$Int64__$_$_$Int64(1,0);
test_TestMain.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
